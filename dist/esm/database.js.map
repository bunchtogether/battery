{"version":3,"sources":["../../src/database.js"],"names":["JSONPath","merge","unset","EventEmitter","makeLogger","localJobEmitter","jobEmitter","logger","JobDoesNotExistError","Error","constructor","message","name","CleanupDoesNotExistError","QUEUE_ERROR_STATUS","QUEUE_PENDING_STATUS","QUEUE_COMPLETE_STATUS","QUEUE_EMPTY_STATUS","JOB_ABORTED_STATUS","JOB_COMPLETE_STATUS","JOB_PENDING_STATUS","JOB_ERROR_STATUS","JOB_CLEANUP_STATUS","JOB_CLEANUP_AND_REMOVE_STATUS","databasePromise","request","self","indexedDB","open","onupgradeneeded","e","store","target","result","createObjectStore","keyPath","autoIncrement","createIndex","unique","error","db","Promise","resolve","reject","onerror","onsuccess","event","getReadWriteObjectStore","database","transaction","objectStore","onabort","errorObject","getReadOnlyObjectStore","getReadWriteArgLookupObjectStore","getReadOnlyArgLookupObjectStore","getReadWriteAuthObjectStore","getReadOnlyAuthObjectStore","getReadWriteMetadataObjectStore","getReadOnlyMetadataObjectStore","getReadWriteJobsObjectStore","getReadOnlyJobsObjectStore","getReadWriteCleanupsObjectStore","getReadOnlyCleanupsObjectStore","getReadWriteObjectStoreAndTransactionPromise","promise","oncomplete","getReadOnlyObjectStoreAndTransactionPromise","getReadWriteJobsObjectStoreAndTransactionPromise","getReadOnlyJobsObjectStoreAndTransactionPromise","getReadWriteArgLookupObjectStoreAndTransactionPromise","getReadWriteMetadataObjectStoreAndTransactionPromise","removeJobFromObjectStore","id","queueId","deleteRequest","delete","emit","removeArgLookupsForJobAsMicrotask","clearAllMetadataInDatabase","clear","clearJobsDatabase","clearCleanupsDatabase","clearDatabase","removeJobsWithQueueIdAndTypeFromDatabase","type","index","getAllKeys","IDBKeyRange","only","removeQueueIdFromJobsDatabase","removeQueueIdFromCleanupsDatabase","openCursor","cursor","primaryKey","continue","removeQueueIdFromDatabase","removeCompletedExpiredItemsFromDatabase","maxAge","getAll","bound","Date","now","status","updateJobInDatabase","transform","get","newValue","value","putRequest","put","getJobFromDatabase","updateCleanupInDatabase","removePathFromCleanupDataInDatabase","path","attempt","startAfter","data","Object","assign","updateCleanupValuesInDatabase","TypeError","combinedData","silentlyRemoveJobFromDatabase","removeJobFromDatabase","job","removeCleanupFromDatabase","getCleanupFromDatabase","getMetadataFromDatabase","response","metadata","undefined","clearMetadataInDatabase","setMetadataInDatabase","updateMetadataInDatabase","markJobStatusInDatabase","markJobCompleteInDatabase","markJobPendingInDatabase","markJobErrorInDatabase","markJobCleanupInDatabase","markJobAbortedInDatabase","markJobCleanupAndRemoveInDatabase","markJobAsAbortedOrRemoveFromDatabase","markJobStartAfterInDatabase","toLocaleString","markCleanupStartAfterInDatabase","markQueueForCleanupInDatabase","jobs","push","warn","updateRequest","update","event2","incrementJobAttemptInDatabase","incrementCleanupAttemptInDatabase","bulkEnqueueToDatabase","items","delay","Array","isArray","i","length","args","ids","created","enqueueToDatabase","restoreJobToDatabaseForCleanupAndRemove","dequeueFromDatabase","getContiguousIds","sort","a","b","points","Infinity","dequeueFromDatabaseNotIn","includes","getRequest","getJobsInQueueFromDatabase","getJobsInDatabase","jobIds","jobId","getCompletedJobsCountFromDatabase","getCompletedJobsFromDatabase","storeAuthDataInDatabase","getAuthDataFromDatabase","authData","removeAuthDataFromDatabase","getQueueStatus","abortedRequest","completeRequest","pendingRequest","errorRequest","cleanupRequest","cleanupAndRemoveRequest","abortedCountPromise","completeCountPromise","pendingCountPromise","errorCountPromise","cleanupCountPromise","cleanupAndRemoveCountPromise","abortedCount","completeCount","pendingCount","errorCount","cleanupCount","cleanupAndRemoveCount","all","addArgLookup","key","jsonPath","getArgLookupJobPathMap","map","Map","x","markJobsWithArgLookupKeyCleanupAndRemoveInDatabase","keys","lookupArgs","size","results","json","lookupArg","queueMicrotask","removeArgLookupsForJob","catch","errorStack","deleteEvent"],"mappings":"AAEA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,OAAOC,UAAP,MAAuB,UAAvB,C,CAEA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,IAAIF,YAAJ,EAAxB;AACP,OAAO,MAAMG,UAAU,GAAG,IAAIH,YAAJ,EAAnB;AAEP,MAAMI,MAAM,GAAGH,UAAU,CAAC,eAAD,CAAzB;AAEA,OAAO,MAAMI,oBAAN,SAAmCC,KAAnC,CAAyC;AAC9CC,EAAAA,WAAW,CAACC,OAAD,EAAiB;AAC1B,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,sBAAZ;AACD;;AAJ6C;AAOhD,OAAO,MAAMC,wBAAN,SAAuCJ,KAAvC,CAA6C;AAClDC,EAAAA,WAAW,CAACC,OAAD,EAAiB;AAC1B,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,0BAAZ;AACD;;AAJiD;AA2BpD,OAAO,MAAME,kBAAkB,GAAG,CAA3B;AACP,OAAO,MAAMC,oBAAoB,GAAG,CAA7B;AACP,OAAO,MAAMC,qBAAqB,GAAG,CAA9B;AACP,OAAO,MAAMC,kBAAkB,GAAG,CAA3B;AAEP,OAAO,MAAMC,kBAAkB,GAAG,CAA3B;AACP,OAAO,MAAMC,mBAAmB,GAAG,CAA5B;AACP,OAAO,MAAMC,kBAAkB,GAAG,CAA3B;AACP,OAAO,MAAMC,gBAAgB,GAAG,CAAC,CAA1B;AACP,OAAO,MAAMC,kBAAkB,GAAG,CAAC,CAA5B;AACP,OAAO,MAAMC,6BAA6B,GAAG,CAAC,CAAvC;AAEP,OAAO,MAAMC,eAAe,GAAG,CAAC,YAAY;AAC1C,QAAMC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAeC,IAAf,CAAoB,kBAApB,EAAwC,CAAxC,CAAhB;;AAEAH,EAAAA,OAAO,CAACI,eAAR,GAA0B,UAAUC,CAAV,EAAa;AACrC,QAAI;AACF,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,MAAT,CAAgBC,iBAAhB,CAAkC,MAAlC,EAA0C;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OAA1C,CAAd;AACAL,MAAAA,KAAK,CAACM,WAAN,CAAkB,aAAlB,EAAiC,QAAjC,EAA2C;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA3C;AACAP,MAAAA,KAAK,CAACM,WAAN,CAAkB,cAAlB,EAAkC,SAAlC,EAA6C;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA7C;AACAP,MAAAA,KAAK,CAACM,WAAN,CAAkB,kBAAlB,EAAsC,CAAC,SAAD,EAAY,MAAZ,CAAtC,EAA2D;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA3D;AACAP,MAAAA,KAAK,CAACM,WAAN,CAAkB,oBAAlB,EAAwC,CAAC,SAAD,EAAY,QAAZ,CAAxC,EAA+D;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA/D;AACAP,MAAAA,KAAK,CAACM,WAAN,CAAkB,cAAlB,EAAkC,SAAlC,EAA6C;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA7C;AACD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAI,EAAEA,KAAK,CAAC3B,IAAN,KAAe,iBAAjB,CAAJ,EAAyC;AACvC,cAAM2B,KAAN;AACD;AACF;;AACD,QAAI;AACFT,MAAAA,CAAC,CAACE,MAAF,CAASC,MAAT,CAAgBC,iBAAhB,CAAkC,UAAlC,EAA8C;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA9C;AACD,KAFD,CAEE,OAAOI,KAAP,EAAc;AACd,UAAI,EAAEA,KAAK,CAAC3B,IAAN,KAAe,iBAAjB,CAAJ,EAAyC;AACvC,cAAM2B,KAAN;AACD;AACF;;AACD,QAAI;AACF,YAAMR,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,MAAT,CAAgBC,iBAAhB,CAAkC,UAAlC,EAA8C;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA9C,CAAd;AACAJ,MAAAA,KAAK,CAACM,WAAN,CAAkB,cAAlB,EAAkC,SAAlC,EAA6C;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA7C;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAI,EAAEA,KAAK,CAAC3B,IAAN,KAAe,iBAAjB,CAAJ,EAAyC;AACvC,cAAM2B,KAAN;AACD;AACF;;AACD,QAAI;AACFT,MAAAA,CAAC,CAACE,MAAF,CAASC,MAAT,CAAgBC,iBAAhB,CAAkC,WAAlC,EAA+C;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA/C;AACD,KAFD,CAEE,OAAOI,KAAP,EAAc;AACd,UAAI,EAAEA,KAAK,CAAC3B,IAAN,KAAe,iBAAjB,CAAJ,EAAyC;AACvC,cAAM2B,KAAN;AACD;AACF;;AACD,QAAI;AACF,YAAMR,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,MAAT,CAAgBC,iBAAhB,CAAkC,YAAlC,EAAgD;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OAAhD,CAAd;AACAL,MAAAA,KAAK,CAACM,WAAN,CAAkB,YAAlB,EAAgC,OAAhC,EAAyC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAzC;AACAP,MAAAA,KAAK,CAACM,WAAN,CAAkB,UAAlB,EAA8B,KAA9B,EAAqC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAArC;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAI,EAAEA,KAAK,CAAC3B,IAAN,KAAe,iBAAjB,CAAJ,EAAyC;AACvC,cAAM2B,KAAN;AACD;AACF;AACF,GA5CD;;AA8CA,QAAMC,EAAE,GAAG,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChDlB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,MAAM;AACtBD,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAU,yBAAV,CAAD,CAAN;AACD,KAFD;;AAGAgB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnCJ,MAAAA,OAAO,CAACI,KAAK,CAACd,MAAN,CAAaC,MAAd,CAAP;AACD,KAFD;AAGD,GAPgB,CAAjB;AASA,SAAOO,EAAP;AACD,CA3D8B,GAAxB;;AA6DP,eAAeO,uBAAf,CAAuCnC,IAAvC,EAAoD;AAClD,QAAMoC,QAAQ,GAAG,MAAMxB,eAAvB;AACA,QAAMyB,WAAW,GAAGD,QAAQ,CAACC,WAAT,CAAqB,CAACrC,IAAD,CAArB,EAA6B,WAA7B,CAApB;AACA,QAAMsC,WAAW,GAAGD,WAAW,CAACC,WAAZ,CAAwBtC,IAAxB,CAApB;;AACAqC,EAAAA,WAAW,CAACE,OAAZ,GAAuBL,KAAD,IAAW;AAC/BvC,IAAAA,MAAM,CAACgC,KAAP,CAAc,eAAc3B,IAAK,2BAAjC;AACAL,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;;AAIAG,EAAAA,WAAW,CAACL,OAAZ,GAAuBE,KAAD,IAAW;AAC/BvC,IAAAA,MAAM,CAACgC,KAAP,CAAc,wBAAuB3B,IAAK,eAA1C;AACAL,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;;AAIA,SAAOI,WAAP;AACD;;AAED,eAAeG,sBAAf,CAAsCzC,IAAtC,EAAmD;AACjD,QAAMoC,QAAQ,GAAG,MAAMxB,eAAvB;AACA,QAAMyB,WAAW,GAAGD,QAAQ,CAACC,WAAT,CAAqB,CAACrC,IAAD,CAArB,EAA6B,UAA7B,CAApB;AACA,QAAMsC,WAAW,GAAGD,WAAW,CAACC,WAAZ,CAAwBtC,IAAxB,CAApB;;AACAqC,EAAAA,WAAW,CAACE,OAAZ,GAAuBL,KAAD,IAAW;AAC/BvC,IAAAA,MAAM,CAACgC,KAAP,CAAc,cAAa3B,IAAK,2BAAhC;AACAL,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;;AAIAG,EAAAA,WAAW,CAACL,OAAZ,GAAuBE,KAAD,IAAW;AAC/BvC,IAAAA,MAAM,CAACgC,KAAP,CAAc,uBAAsB3B,IAAK,eAAzC;AACAL,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;;AAIA,SAAOI,WAAP;AACD;;AAED,SAASI,gCAAT,GAA4C;AAC1C,SAAOP,uBAAuB,CAAC,YAAD,CAA9B;AACD;;AAED,SAASQ,+BAAT,GAA2C;AACzC,SAAOF,sBAAsB,CAAC,YAAD,CAA7B;AACD;;AAED,SAASG,2BAAT,GAAuC;AACrC,SAAOT,uBAAuB,CAAC,WAAD,CAA9B;AACD;;AAED,SAASU,0BAAT,GAAsC;AACpC,SAAOJ,sBAAsB,CAAC,WAAD,CAA7B;AACD;;AAED,SAASK,+BAAT,GAA2C;AACzC,SAAOX,uBAAuB,CAAC,UAAD,CAA9B;AACD;;AAED,SAASY,8BAAT,GAA0C;AACxC,SAAON,sBAAsB,CAAC,UAAD,CAA7B;AACD;;AAED,SAASO,2BAAT,GAAuC;AACrC,SAAOb,uBAAuB,CAAC,MAAD,CAA9B;AACD;;AAED,SAASc,0BAAT,GAAsC;AACpC,SAAOR,sBAAsB,CAAC,MAAD,CAA7B;AACD;;AAED,SAASS,+BAAT,GAA2C;AACzC,SAAOf,uBAAuB,CAAC,UAAD,CAA9B;AACD;;AAED,SAASgB,8BAAT,GAA0C;AACxC,SAAOV,sBAAsB,CAAC,UAAD,CAA7B;AACD;;AAED,eAAeW,4CAAf,CAA4DpD,IAA5D,EAAyE;AACvE,QAAMoC,QAAQ,GAAG,MAAMxB,eAAvB;AACA,QAAMyB,WAAW,GAAGD,QAAQ,CAACC,WAAT,CAAqB,CAACrC,IAAD,CAArB,EAA6B,WAA7B,CAApB;AACA,QAAMsC,WAAW,GAAGD,WAAW,CAACC,WAAZ,CAAwBtC,IAAxB,CAApB;AACA,QAAMqD,OAAO,GAAG,IAAIxB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/CM,IAAAA,WAAW,CAACE,OAAZ,GAAuBL,KAAD,IAAW;AAC/BvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,eAAc3B,IAAK,2BAAjC;AACAL,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,eAAcG,IAAK,2BAA9B,CAAD,CAAN;AACD,KAJD;;AAKAqC,IAAAA,WAAW,CAACL,OAAZ,GAAuBE,KAAD,IAAW;AAC/BvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,wBAAuB3B,IAAK,eAA1C;AACAL,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,wBAAuBG,IAAK,eAAvC,CAAD,CAAN;AACD,KAJD;;AAKAqC,IAAAA,WAAW,CAACiB,UAAZ,GAAyB,MAAM;AAC7BxB,MAAAA,OAAO;AACR,KAFD;AAGD,GAde,CAAhB;AAeA,SAAO,CAACQ,WAAD,EAAce,OAAd,CAAP;AACD;;AAED,eAAeE,2CAAf,CAA2DvD,IAA3D,EAAwE;AACtE,QAAMoC,QAAQ,GAAG,MAAMxB,eAAvB;AACA,QAAMyB,WAAW,GAAGD,QAAQ,CAACC,WAAT,CAAqB,CAACrC,IAAD,CAArB,EAA6B,UAA7B,CAApB;AACA,QAAMsC,WAAW,GAAGD,WAAW,CAACC,WAAZ,CAAwBtC,IAAxB,CAApB;AACA,QAAMqD,OAAO,GAAG,IAAIxB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/CM,IAAAA,WAAW,CAACE,OAAZ,GAAuBL,KAAD,IAAW;AAC/BvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,eAAc3B,IAAK,2BAAjC;AACAL,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,eAAcG,IAAK,2BAA9B,CAAD,CAAN;AACD,KAJD;;AAKAqC,IAAAA,WAAW,CAACL,OAAZ,GAAuBE,KAAD,IAAW;AAC/BvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,wBAAuB3B,IAAK,eAA1C;AACAL,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,wBAAuBG,IAAK,eAAvC,CAAD,CAAN;AACD,KAJD;;AAKAqC,IAAAA,WAAW,CAACiB,UAAZ,GAAyB,MAAM;AAC7BxB,MAAAA,OAAO;AACR,KAFD;AAGD,GAde,CAAhB;AAeA,SAAO,CAACQ,WAAD,EAAce,OAAd,CAAP;AACD;;AAGD,SAASG,gDAAT,GAA4D;AAC1D,SAAOJ,4CAA4C,CAAC,MAAD,CAAnD;AACD;;AAED,SAASK,+CAAT,GAA2D;AACzD,SAAOF,2CAA2C,CAAC,MAAD,CAAlD;AACD;;AAED,SAASG,qDAAT,GAAiE;AAC/D,SAAON,4CAA4C,CAAC,YAAD,CAAnD;AACD;;AAED,SAASO,oDAAT,GAAgE;AAC9D,SAAOP,4CAA4C,CAAC,UAAD,CAAnD;AACD;;AAED,SAASQ,wBAAT,CAAkCzC,KAAlC,EAAwD0C,EAAxD,EAAmEC,OAAnE,EAAmF;AACjF,QAAMC,aAAa,GAAG5C,KAAK,CAAC6C,MAAN,CAAaH,EAAb,CAAtB;;AACAE,EAAAA,aAAa,CAAC9B,SAAd,GAA0B,YAAY;AACpCxC,IAAAA,eAAe,CAACwE,IAAhB,CAAqB,WAArB,EAAkCJ,EAAlC,EAAsCC,OAAtC;AACApE,IAAAA,UAAU,CAACuE,IAAX,CAAgB,WAAhB,EAA6BJ,EAA7B,EAAiCC,OAAjC;AACAI,IAAAA,iCAAiC,CAACL,EAAD,CAAjC;AACD,GAJD;;AAKAE,EAAAA,aAAa,CAAC/B,OAAd,GAAwB,UAAUE,KAAV,EAAiB;AACvCvC,IAAAA,MAAM,CAACgC,KAAP,CAAc,oCAAmCkC,EAAG,aAAYC,OAAQ,gBAAxE;AACAnE,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;AAID;;AAED,eAAeiC,0BAAf,GAA4C;AAC1C,QAAMhD,KAAK,GAAG,MAAM2B,+BAA+B,EAAnD;AACA,QAAMjC,OAAO,GAAGM,KAAK,CAACiD,KAAN,EAAhB;AACA,QAAM,IAAIvC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO;AACR,KAFD;;AAGAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAa,0CAAb;AACAhC,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAU,0CAAV,CAAD,CAAN;AACD,KAJD;AAKD,GATK,CAAN;AAUD;;AAED,eAAewE,iBAAf,GAAmC;AACjC,QAAMlD,KAAK,GAAG,MAAM6B,2BAA2B,EAA/C;AACA,QAAMnC,OAAO,GAAGM,KAAK,CAACiD,KAAN,EAAhB;AACA,QAAM,IAAIvC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO;AACR,KAFD;;AAGAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAa,oCAAb;AACAhC,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAU,oCAAV,CAAD,CAAN;AACD,KAJD;AAKD,GATK,CAAN;AAUAJ,EAAAA,eAAe,CAACwE,IAAhB,CAAqB,WAArB;AACAvE,EAAAA,UAAU,CAACuE,IAAX,CAAgB,WAAhB;AACD;;AAED,eAAeK,qBAAf,GAAuC;AACrC,QAAMnD,KAAK,GAAG,MAAM+B,+BAA+B,EAAnD;AACA,QAAMrC,OAAO,GAAGM,KAAK,CAACiD,KAAN,EAAhB;AACA,QAAM,IAAIvC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO;AACR,KAFD;;AAGAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAa,wCAAb;AACAhC,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAU,wCAAV,CAAD,CAAN;AACD,KAJD;AAKD,GATK,CAAN;AAUD;;AAED,OAAO,eAAe0E,aAAf,GAA+B;AACpC,QAAMF,iBAAiB,EAAvB;AACA,QAAMC,qBAAqB,EAA3B;AACA,QAAMH,0BAA0B,EAAhC;AACD;AAED,OAAO,eAAeK,wCAAf,CAAwDV,OAAxD,EAAwEW,IAAxE,EAAqF;AAC1F,QAAM,CAACtD,KAAD,EAAQkC,OAAR,IAAmB,MAAMG,gDAAgD,EAA/E;AACA,QAAMkB,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,kBAAZ,CAAd,CAF0F,CAG1F;;AACA,QAAM7D,OAAO,GAAG6D,KAAK,CAACC,UAAN,CAAiBC,WAAW,CAACC,IAAZ,CAAiB,CAACf,OAAD,EAAUW,IAAV,CAAjB,CAAjB,CAAhB;;AACA5D,EAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnC,SAAK,MAAM2B,EAAX,IAAiB3B,KAAK,CAACd,MAAN,CAAaC,MAA9B,EAAsC;AACpCuC,MAAAA,wBAAwB,CAACzC,KAAD,EAAQ0C,EAAR,EAAYC,OAAZ,CAAxB;AACD;AACF,GAJD;;AAKAjD,EAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,IAAAA,MAAM,CAACgC,KAAP,CAAc,gDAA+CmC,OAAQ,aAAYW,IAAK,qBAAtF;AACA9E,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;;AAIA,QAAMmB,OAAN;AACD;AAED,OAAO,eAAeyB,6BAAf,CAA6ChB,OAA7C,EAA6D;AAClE,QAAM,CAAC3C,KAAD,EAAQkC,OAAR,IAAmB,MAAMG,gDAAgD,EAA/E;AACA,QAAMkB,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,cAAZ,CAAd,CAFkE,CAGlE;;AACA,QAAM7D,OAAO,GAAG6D,KAAK,CAACC,UAAN,CAAiBC,WAAW,CAACC,IAAZ,CAAiBf,OAAjB,CAAjB,CAAhB;;AACAjD,EAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnC,SAAK,MAAM2B,EAAX,IAAiB3B,KAAK,CAACd,MAAN,CAAaC,MAA9B,EAAsC;AACpCuC,MAAAA,wBAAwB,CAACzC,KAAD,EAAQ0C,EAAR,EAAYC,OAAZ,CAAxB;AACD;AACF,GAJD;;AAKAjD,EAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,IAAAA,MAAM,CAACgC,KAAP,CAAc,sCAAqCmC,OAAQ,qBAA3D;AACAnE,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;;AAIA,QAAMmB,OAAN;AACD;;AAED,eAAe0B,iCAAf,CAAiDjB,OAAjD,EAAiE;AAC/D,QAAM3C,KAAK,GAAG,MAAM+B,+BAA+B,EAAnD;AACA,QAAMwB,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,cAAZ,CAAd,CAF+D,CAG/D;;AACA,QAAM7D,OAAO,GAAG6D,KAAK,CAACM,UAAN,CAAiBJ,WAAW,CAACC,IAAZ,CAAiBf,OAAjB,CAAjB,CAAhB;AACA,QAAM,IAAIjC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnC,YAAM+C,MAAM,GAAG/C,KAAK,CAACd,MAAN,CAAaC,MAA5B;;AACA,UAAI4D,MAAJ,EAAY;AACV9D,QAAAA,KAAK,CAAC6C,MAAN,CAAaiB,MAAM,CAACC,UAApB;AACAD,QAAAA,MAAM,CAACE,QAAP;AACD,OAHD,MAGO;AACLrD,QAAAA,OAAO;AACR;AACF,KARD;;AASAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,sCAAqCmC,OAAQ,qBAA3D;AACAnE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,sCAAqCiE,OAAQ,qBAAxD,CAAD,CAAN;AACD,KAJD;AAKD,GAfK,CAAN;AAgBD;;AAED,OAAO,eAAesB,yBAAf,CAAyCtB,OAAzC,EAAyD;AAC9D,QAAMgB,6BAA6B,CAAChB,OAAD,CAAnC;AACA,QAAMiB,iCAAiC,CAACjB,OAAD,CAAvC;AACD;AAED,OAAO,eAAeuB,uCAAf,CAAuDC,MAAvD,EAAsE;AAC3E,QAAM,CAACnE,KAAD,EAAQkC,OAAR,IAAmB,MAAMG,gDAAgD,EAA/E;AACA,QAAMkB,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,cAAZ,CAAd,CAF2E,CAG3E;;AACA,QAAM7D,OAAO,GAAG6D,KAAK,CAACa,MAAN,CAAaX,WAAW,CAACY,KAAZ,CAAkB,CAAlB,EAAqBC,IAAI,CAACC,GAAL,KAAaJ,MAAlC,CAAb,CAAhB;;AACAzE,EAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnC,SAAK,MAAM;AAAE2B,MAAAA,EAAF;AAAMC,MAAAA,OAAN;AAAe6B,MAAAA;AAAf,KAAX,IAAsCzD,KAAK,CAACd,MAAN,CAAaC,MAAnD,EAA2D;AACzD,UAAIsE,MAAM,KAAKpF,mBAAf,EAAoC;AAClC;AACD;;AACDqD,MAAAA,wBAAwB,CAACzC,KAAD,EAAQ0C,EAAR,EAAYC,OAAZ,CAAxB;AACD;AACF,GAPD;;AAQAjD,EAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,IAAAA,MAAM,CAACgC,KAAP,CAAa,wEAAb;AACAhC,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;;AAIA,QAAMmB,OAAN;AACD;AAED,OAAO,eAAeuC,mBAAf,CAAmC/B,EAAnC,EAA8CgC,SAA9C,EAAgH;AACrH,QAAM1E,KAAK,GAAG,MAAM6B,2BAA2B,EAA/C;AACA,QAAMnC,OAAO,GAAGM,KAAK,CAAC2E,GAAN,CAAUjC,EAAV,CAAhB;AACA,QAAM,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9B,UAAI8D,QAAJ;AACA,YAAMC,KAAK,GAAGnF,OAAO,CAACQ,MAAtB;;AACA,UAAI;AACF0E,QAAAA,QAAQ,GAAGF,SAAS,CAACG,KAAD,CAApB;AACD,OAFD,CAEE,OAAOrE,KAAP,EAAc;AACdI,QAAAA,MAAM,CAACJ,KAAD,CAAN;AACA;AACD;;AACD,UAAI,OAAOoE,QAAP,KAAoB,WAAxB,EAAqC;AACnCjE,QAAAA,OAAO;AACR,OAFD,MAEO,IAAIiE,QAAQ,KAAK,KAAjB,EAAwB;AAC7B,YAAI,OAAOC,KAAP,KAAiB,WAArB,EAAkC;AAChC,gBAAM;AAAElC,YAAAA,OAAF;AAAWW,YAAAA;AAAX,cAAoBuB,KAA1B;AACA,gBAAMjC,aAAa,GAAG5C,KAAK,CAAC6C,MAAN,CAAaH,EAAb,CAAtB;;AACAE,UAAAA,aAAa,CAAC9B,SAAd,GAA0B,YAAY;AACpCxC,YAAAA,eAAe,CAACwE,IAAhB,CAAqB,WAArB,EAAkCJ,EAAlC,EAAsCC,OAAtC;AACApE,YAAAA,UAAU,CAACuE,IAAX,CAAgB,WAAhB,EAA6BJ,EAA7B,EAAiCC,OAAjC;AACAI,YAAAA,iCAAiC,CAACL,EAAD,CAAjC;AACA/B,YAAAA,OAAO;AACR,WALD;;AAMAiC,UAAAA,aAAa,CAAC/B,OAAd,GAAwB,UAAUE,KAAV,EAAiB;AACvCvC,YAAAA,MAAM,CAACgC,KAAP,CAAc,2CAA0CkC,EAAG,aAAYC,OAAQ,aAAYW,IAAK,mBAAhG;AACA9E,YAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,YAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,2CAA0CgE,EAAG,aAAYC,OAAQ,aAAYW,IAAK,qBAA7F,CAAD,CAAN;AACD,WAJD;AAKD;AACF,OAhBM,MAgBA;AACL,cAAMwB,UAAU,GAAG9E,KAAK,CAAC+E,GAAN,CAAUH,QAAV,CAAnB;AACA,cAAM;AAAEjC,UAAAA,OAAF;AAAWW,UAAAA,IAAX;AAAiBkB,UAAAA;AAAjB,YAA4BI,QAAlC;;AACAE,QAAAA,UAAU,CAAChE,SAAX,GAAuB,YAAY;AACjCxC,UAAAA,eAAe,CAACwE,IAAhB,CAAqB,WAArB,EAAkCJ,EAAlC,EAAsCC,OAAtC,EAA+CW,IAA/C,EAAqDkB,MAArD;AACAjG,UAAAA,UAAU,CAACuE,IAAX,CAAgB,WAAhB,EAA6BJ,EAA7B,EAAiCC,OAAjC,EAA0CW,IAA1C,EAAgDkB,MAAhD;AACA7D,UAAAA,OAAO;AACR,SAJD;;AAKAmE,QAAAA,UAAU,CAACjE,OAAX,GAAqB,UAAUE,KAAV,EAAiB;AACpCvC,UAAAA,MAAM,CAACgC,KAAP,CAAc,wCAAuCkC,EAAG,aAAYC,OAAQ,aAAYW,IAAK,mBAA7F;AACA9E,UAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,UAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,wCAAuCgE,EAAG,aAAYC,OAAQ,aAAYW,IAAK,qBAA1F,CAAD,CAAN;AACD,SAJD;AAKD;AACF,KAzCD;;AA0CA5D,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,oCAAmCkC,EAAG,EAApD;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,oCAAmCgE,EAAG,EAAjD,CAAD,CAAN;AACD,KAJD;AAKD,GAhDK,CAAN;AAiDD;AAED,OAAO,eAAesC,kBAAf,CAAkCtC,EAAlC,EAAiE;AACtE,QAAM1C,KAAK,GAAG,MAAM8B,0BAA0B,EAA9C;AACA,QAAMpC,OAAO,GAAGM,KAAK,CAAC2E,GAAN,CAAUjC,EAAV,CAAhB;AACA,SAAO,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO,CAACjB,OAAO,CAACQ,MAAT,CAAP;AACD,KAFD;;AAGAR,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,+BAA8BkC,EAAG,EAA/C;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,+BAA8BgE,EAAG,EAA5C,CAAD,CAAN;AACD,KAJD;AAKD,GATM,CAAP;AAUD;AAED,OAAO,eAAeuC,uBAAf,CAAuCvC,EAAvC,EAAkDgC,SAAlD,EAAgH;AACrH,QAAM1E,KAAK,GAAG,MAAM+B,+BAA+B,EAAnD;AACA,QAAMrC,OAAO,GAAGM,KAAK,CAAC2E,GAAN,CAAUjC,EAAV,CAAhB;AACA,QAAM,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9B,UAAI8D,QAAJ;;AACA,UAAI;AACFA,QAAAA,QAAQ,GAAGF,SAAS,CAAChF,OAAO,CAACQ,MAAT,CAApB;AACD,OAFD,CAEE,OAAOM,KAAP,EAAc;AACdI,QAAAA,MAAM,CAACJ,KAAD,CAAN;AACA;AACD;;AACD,UAAI,OAAOoE,QAAP,KAAoB,WAAxB,EAAqC;AACnCjE,QAAAA,OAAO;AACR,OAFD,MAEO;AACL,cAAMmE,UAAU,GAAG9E,KAAK,CAAC+E,GAAN,CAAUH,QAAV,CAAnB;;AACAE,QAAAA,UAAU,CAAChE,SAAX,GAAuB,YAAY;AACjCH,UAAAA,OAAO;AACR,SAFD;;AAGAmE,QAAAA,UAAU,CAACjE,OAAX,GAAqB,UAAUE,KAAV,EAAiB;AACpCvC,UAAAA,MAAM,CAACgC,KAAP,CAAc,oCAAmCkC,EAAG,UAApD;AACAlE,UAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,UAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,oCAAmCgE,EAAG,UAAjD,CAAD,CAAN;AACD,SAJD;AAKD;AACF,KArBD;;AAsBAhD,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,oCAAmCkC,EAAG,UAApD;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,oCAAmCgE,EAAG,UAAjD,CAAD,CAAN;AACD,KAJD;AAKD,GA5BK,CAAN;AA6BD;AAED,OAAO,eAAewC,mCAAf,CAAmDxC,EAAnD,EAA8DyC,IAA9D,EAAkF;AACvF,QAAMF,uBAAuB,CAACvC,EAAD,EAAMmC,KAAD,IAA2B;AAC3D,QAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC;AACD;;AACD,UAAM;AAAElC,MAAAA,OAAF;AAAWyC,MAAAA,OAAX;AAAoBC,MAAAA;AAApB,QAAmCR,KAAzC;AACA,UAAMS,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAK,CAACS,IAAxB,CAAb;AACAnH,IAAAA,KAAK,CAACmH,IAAD,EAAOH,IAAP,CAAL;AACA,WAAO;AAAE;AACPzC,MAAAA,EADK;AAELC,MAAAA,OAFK;AAGLyC,MAAAA,OAHK;AAILC,MAAAA,UAJK;AAKLC,MAAAA;AALK,KAAP;AAOD,GAd4B,CAA7B;AAeD;AAGD,OAAO,eAAeG,6BAAf,CAA6C/C,EAA7C,EAAwDC,OAAxD,EAAwE2C,IAAxE,EAAqF;AAC1F,MAAI,OAAO5C,EAAP,KAAc,QAAlB,EAA4B;AAC1B,UAAM,IAAIgD,SAAJ,CAAe,8EAA6E,OAAOhD,EAAG,GAAtG,CAAN;AACD;;AACD,MAAI,OAAOC,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAI+C,SAAJ,CAAe,mFAAkF,OAAO/C,OAAQ,GAAhH,CAAN;AACD;;AACD,MAAI,OAAO2C,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAII,SAAJ,CAAe,gFAA+E,OAAOJ,IAAK,GAA1G,CAAN;AACD;;AACD,QAAML,uBAAuB,CAACvC,EAAD,EAAMmC,KAAD,IAA2B;AAC3D,UAAMc,YAAY,GAAG,OAAOd,KAAP,KAAiB,WAAjB,GAA+BS,IAA/B,GAAsCpH,KAAK,CAAC,EAAD,EAAK2G,KAAK,CAACS,IAAX,EAAiBA,IAAjB,CAAhE;AACA,WAAO;AACL5C,MAAAA,EADK;AAELC,MAAAA,OAFK;AAGLyC,MAAAA,OAAO,EAAE,CAHJ;AAILC,MAAAA,UAAU,EAAEf,IAAI,CAACC,GAAL,EAJP;AAKLe,MAAAA,IAAI,EAAEK;AALD,KAAP;AAOD,GAT4B,CAA7B;AAUD;AAED,OAAO,eAAeC,6BAAf,CAA6ClD,EAA7C,EAAwD;AAC7D,QAAM1C,KAAK,GAAG,MAAM6B,2BAA2B,EAA/C;AACA,QAAMnC,OAAO,GAAGM,KAAK,CAAC6C,MAAN,CAAaH,EAAb,CAAhB;AACA,QAAM,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO;AACR,KAFD;;AAGAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,2CAA0CkC,EAAG,gBAA3D;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,2CAA0CgE,EAAG,gBAAxD,CAAD,CAAN;AACD,KAJD;AAKD,GATK,CAAN;AAUD;AAED,OAAO,eAAemD,qBAAf,CAAqCnD,EAArC,EAAgD;AACrD,QAAM1C,KAAK,GAAG,MAAM6B,2BAA2B,EAA/C;AACA,QAAMnC,OAAO,GAAGM,KAAK,CAAC2E,GAAN,CAAUjC,EAAV,CAAhB;AACA,QAAM,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9B,YAAMgF,GAAG,GAAGpG,OAAO,CAACQ,MAApB;;AACA,UAAI,OAAO4F,GAAP,KAAe,WAAnB,EAAgC;AAC9BnF,QAAAA,OAAO;AACP;AACD;;AACD,YAAM;AAAEgC,QAAAA,OAAF;AAAWW,QAAAA;AAAX,UAAoBwC,GAA1B;AACA,YAAMlD,aAAa,GAAG5C,KAAK,CAAC6C,MAAN,CAAaH,EAAb,CAAtB;;AACAE,MAAAA,aAAa,CAAC9B,SAAd,GAA0B,YAAY;AACpCxC,QAAAA,eAAe,CAACwE,IAAhB,CAAqB,WAArB,EAAkCJ,EAAlC,EAAsCC,OAAtC;AACApE,QAAAA,UAAU,CAACuE,IAAX,CAAgB,WAAhB,EAA6BJ,EAA7B,EAAiCC,OAAjC;AACAI,QAAAA,iCAAiC,CAACL,EAAD,CAAjC;AACA/B,QAAAA,OAAO;AACR,OALD;;AAMAiC,MAAAA,aAAa,CAAC/B,OAAd,GAAwB,UAAUE,KAAV,EAAiB;AACvCvC,QAAAA,MAAM,CAACgC,KAAP,CAAc,2CAA0CkC,EAAG,aAAYC,OAAQ,cAAaW,IAAK,gBAAjG;AACA9E,QAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,QAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,2CAA0CgE,EAAG,aAAYC,OAAQ,cAAaW,IAAK,gBAA9F,CAAD,CAAN;AACD,OAJD;AAKD,KAnBD;;AAoBA5D,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,+BAA8BkC,EAAG,gCAA/C;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,+BAA8BgE,EAAG,gCAA5C,CAAD,CAAN;AACD,KAJD;AAKD,GA1BK,CAAN;AA2BD;AAED,OAAO,eAAeqD,yBAAf,CAAyCrD,EAAzC,EAAoD;AACzD,QAAM1C,KAAK,GAAG,MAAM+B,+BAA+B,EAAnD;AACA,QAAMrC,OAAO,GAAGM,KAAK,CAAC6C,MAAN,CAAaH,EAAb,CAAhB;AACA,SAAO,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO;AACR,KAFD;;AAGAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,yCAAwCkC,EAAG,EAAzD;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,yCAAwCgE,EAAG,EAAtD,CAAD,CAAN;AACD,KAJD;AAKD,GATM,CAAP;AAUD;AAED,OAAO,eAAesD,sBAAf,CAAsCtD,EAAtC,EAAyE;AAC9E,QAAM1C,KAAK,GAAG,MAAMgC,8BAA8B,EAAlD;AACA,QAAMtC,OAAO,GAAGM,KAAK,CAAC2E,GAAN,CAAUjC,EAAV,CAAhB;AACA,SAAO,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO,CAACjB,OAAO,CAACQ,MAAT,CAAP;AACD,KAFD;;AAGAR,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,+BAA8BkC,EAAG,EAA/C;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,+BAA8BgE,EAAG,EAA5C,CAAD,CAAN;AACD,KAJD;AAKD,GATM,CAAP;AAUD;AAED,OAAO,eAAeuD,uBAAf,CAAuCvD,EAAvC,EAAkD;AACvD,QAAM1C,KAAK,GAAG,MAAM4B,8BAA8B,EAAlD;AACA,QAAMlC,OAAO,GAAGM,KAAK,CAAC2E,GAAN,CAAUjC,EAAV,CAAhB;AACA,QAAMwD,QAAQ,GAAG,MAAM,IAAIxF,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtDlB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO,CAACjB,OAAO,CAACQ,MAAT,CAAP;AACD,KAFD;;AAGAR,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,+BAA8BkC,EAAG,WAA/C;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,+BAA8BgE,EAAG,WAA5C,CAAD,CAAN;AACD,KAJD;AAKD,GATsB,CAAvB;AAUA,SAAO,OAAOwD,QAAP,KAAoB,WAApB,GAAkCA,QAAQ,CAACC,QAA3C,GAAsDC,SAA7D;AACD;AAED,OAAO,eAAeC,uBAAf,CAAuC3D,EAAvC,EAAkD;AACvD,QAAM1C,KAAK,GAAG,MAAM2B,+BAA+B,EAAnD;AACA,QAAMjC,OAAO,GAAGM,KAAK,CAAC6C,MAAN,CAAaH,EAAb,CAAhB;AACA,SAAO,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO;AACR,KAFD;;AAGAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,wBAAuBkC,EAAG,WAAxC;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,wBAAuBgE,EAAG,WAArC,CAAD,CAAN;AACD,KAJD;AAKD,GATM,CAAP;AAUD;AAED,OAAO,eAAe4D,qBAAf,CAAqC5D,EAArC,EAAgDyD,QAAhD,EAAiE;AACtE,QAAMnG,KAAK,GAAG,MAAM2B,+BAA+B,EAAnD;AACA,QAAMjC,OAAO,GAAGM,KAAK,CAAC+E,GAAN,CAAU;AACxBrC,IAAAA,EADwB;AAExByD,IAAAA;AAFwB,GAAV,CAAhB;AAIA,SAAO,IAAIzF,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO;AACR,KAFD;;AAGAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,uBAAsBkC,EAAG,WAAvC;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,uBAAsBgE,EAAG,WAApC,CAAD,CAAN;AACD,KAJD;AAKD,GATM,CAAP;AAUD;AAED,OAAO,eAAe6D,wBAAf,CAAwC7D,EAAxC,EAAmDyD,QAAnD,EAAoE;AACzE,QAAM,CAACnG,KAAD,EAAQkC,OAAR,IAAmB,MAAMM,oDAAoD,EAAnF;AACA,QAAM9C,OAAO,GAAGM,KAAK,CAAC2E,GAAN,CAAUjC,EAAV,CAAhB;;AACAhD,EAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9B,UAAMoF,QAAQ,GAAGxG,OAAO,CAACQ,MAAzB;;AACA,QAAI,OAAOgG,QAAP,KAAoB,WAAxB,EAAqC;AACnC,YAAMpB,UAAU,GAAG9E,KAAK,CAAC+E,GAAN,CAAU;AAC3BrC,QAAAA,EAD2B;AAE3ByD,QAAAA;AAF2B,OAAV,CAAnB;;AAIArB,MAAAA,UAAU,CAACjE,OAAX,GAAqB,UAAUE,KAAV,EAAiB;AACpCvC,QAAAA,MAAM,CAACgC,KAAP,CAAc,uCAAsCkC,EAAG,WAAvD;AACAlE,QAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,OAHD;AAID,KATD,MASO;AACL,YAAM+D,UAAU,GAAG9E,KAAK,CAAC+E,GAAN,CAAU;AAC3BrC,QAAAA,EAD2B;AAE3ByD,QAAAA,QAAQ,EAAEjI,KAAK,CAAC,EAAD,EAAKgI,QAAQ,CAACC,QAAd,EAAwBA,QAAxB;AAFY,OAAV,CAAnB;;AAIArB,MAAAA,UAAU,CAACjE,OAAX,GAAqB,UAAUE,KAAV,EAAiB;AACpCvC,QAAAA,MAAM,CAACgC,KAAP,CAAc,uCAAsCkC,EAAG,WAAvD;AACAlE,QAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,OAHD;AAID;AACF,GArBD;;AAsBArB,EAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,IAAAA,MAAM,CAACgC,KAAP,CAAc,wBAAuBkC,EAAG,WAAxC;AACAlE,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;;AAIA,QAAMmB,OAAN;AACD;AAED,OAAO,SAASsE,uBAAT,CAAiC9D,EAAjC,EAA4C8B,MAA5C,EAA2D;AAChE,SAAOC,mBAAmB,CAAC/B,EAAD,EAAMmC,KAAD,IAAsB;AACnD,QAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC,YAAM,IAAIpG,oBAAJ,CAA0B,sBAAqBiE,EAAG,cAAa8B,MAAO,kCAAtE,CAAN;AACD;;AACDK,IAAAA,KAAK,CAACL,MAAN,GAAeA,MAAf,CAJmD,CAI5B;;AACvB,WAAOK,KAAP;AACD,GANyB,CAA1B;AAOD;AAED,OAAO,SAAS4B,yBAAT,CAAmC/D,EAAnC,EAA8C;AACnD,SAAO8D,uBAAuB,CAAC9D,EAAD,EAAKtD,mBAAL,CAA9B;AACD;AAED,OAAO,SAASsH,wBAAT,CAAkChE,EAAlC,EAA6C;AAClD,SAAO8D,uBAAuB,CAAC9D,EAAD,EAAKrD,kBAAL,CAA9B;AACD;AAED,OAAO,SAASsH,sBAAT,CAAgCjE,EAAhC,EAA2C;AAChD,SAAO8D,uBAAuB,CAAC9D,EAAD,EAAKpD,gBAAL,CAA9B;AACD;AAED,OAAO,SAASsH,wBAAT,CAAkClE,EAAlC,EAA6C;AAClD,SAAO8D,uBAAuB,CAAC9D,EAAD,EAAKnD,kBAAL,CAA9B;AACD;AAED,OAAO,SAASsH,wBAAT,CAAkCnE,EAAlC,EAA6C;AAClD,SAAO8D,uBAAuB,CAAC9D,EAAD,EAAKvD,kBAAL,CAA9B;AACD;AAED,OAAO,SAAS2H,iCAAT,CAA2CpE,EAA3C,EAAsD;AAC3D,SAAO+B,mBAAmB,CAAC/B,EAAD,EAAMmC,KAAD,IAAsB;AACnD,QAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC,YAAM,IAAIpG,oBAAJ,CAA0B,sBAAqBiE,EAAG,cAAalD,6BAA8B,kCAA7F,CAAN;AACD;;AACD,QAAIqF,KAAK,CAACL,MAAN,KAAiBnF,kBAArB,EAAyC;AACvC,aAAO,KAAP;AACD;;AACD,QAAIwF,KAAK,CAACL,MAAN,KAAiBrF,kBAArB,EAAyC;AACvC,aAAO,KAAP;AACD;;AACD0F,IAAAA,KAAK,CAACL,MAAN,GAAehF,6BAAf,CAVmD,CAUL;;AAC9C,WAAOqF,KAAP;AACD,GAZyB,CAA1B;AAaD;AAED,OAAO,SAASkC,oCAAT,CAA8CrE,EAA9C,EAAyD;AAC9D,SAAO+B,mBAAmB,CAAC/B,EAAD,EAAMmC,KAAD,IAAsB;AACnD,QAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC;AACD;;AACD,QAAIA,KAAK,CAACL,MAAN,KAAiBlF,gBAArB,EAAuC;AACrCuF,MAAAA,KAAK,CAACL,MAAN,GAAerF,kBAAf,CADqC,CACF;;AACnC,aAAO0F,KAAP,CAFqC,CAEvB;AACf;;AACD,QAAIA,KAAK,CAACL,MAAN,KAAiBjF,kBAArB,EAAyC;AACvCsF,MAAAA,KAAK,CAACL,MAAN,GAAerF,kBAAf,CADuC,CACJ;;AACnC,aAAO0F,KAAP,CAFuC,CAEzB;AACf;;AACD,QAAIA,KAAK,CAACL,MAAN,KAAiBhF,6BAArB,EAAoD;AAClD,aAAO,KAAP,CADkD,CACpC;AACf;;AACD,UAAM,IAAId,KAAJ,CAAW,sBAAqBgE,EAAG,gEAA+DmC,KAAK,CAACL,MAAO,EAA/G,CAAN;AACD,GAhByB,CAA1B;AAiBD;AAED,OAAO,SAASwC,2BAAT,CAAqCtE,EAArC,EAAgD2C,UAAhD,EAAmE;AACxE,SAAOZ,mBAAmB,CAAC/B,EAAD,EAAMmC,KAAD,IAAsB;AACnD,QAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC,YAAM,IAAIpG,oBAAJ,CAA0B,sBAAqBiE,EAAG,wBAAuB,IAAI4B,IAAJ,CAASe,UAAT,EAAqB4B,cAArB,EAAsC,kCAA/G,CAAN;AACD;;AACD,QAAI5B,UAAU,GAAGR,KAAK,CAACQ,UAAvB,EAAmC;AACjC;AACD;;AACDR,IAAAA,KAAK,CAACQ,UAAN,GAAmBA,UAAnB,CAPmD,CAOpB;;AAC/B,WAAOR,KAAP,CARmD,CAQrC;AACf,GATyB,CAA1B;AAUD;AAED,OAAO,SAASqC,+BAAT,CAAyCxE,EAAzC,EAAoD2C,UAApD,EAAuE;AAC5E,SAAOJ,uBAAuB,CAACvC,EAAD,EAAMmC,KAAD,IAA2B;AAC5D,QAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC,YAAM,IAAI/F,wBAAJ,CAA8B,0BAAyB4D,EAAG,wBAAuB,IAAI4B,IAAJ,CAASe,UAAT,EAAqB4B,cAArB,EAAsC,sCAAvH,CAAN;AACD;;AACD,QAAI5B,UAAU,GAAGR,KAAK,CAACQ,UAAvB,EAAmC;AACjC;AACD;;AACDR,IAAAA,KAAK,CAACQ,UAAN,GAAmBA,UAAnB,CAP4D,CAO7B;;AAC/B,WAAOR,KAAP,CAR4D,CAQ9C;AACf,GAT6B,CAA9B;AAUD;AAED,OAAO,eAAesC,6BAAf,CAA6CxE,OAA7C,EAA6D;AAClE,QAAM3C,KAAK,GAAG,MAAM6B,2BAA2B,EAA/C;AACA,QAAM0B,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,cAAZ,CAAd,CAFkE,CAGlE;;AACA,QAAM7D,OAAO,GAAG6D,KAAK,CAACM,UAAN,CAAiBJ,WAAW,CAACC,IAAZ,CAAiBf,OAAjB,CAAjB,CAAhB;AACA,QAAMyE,IAAI,GAAG,EAAb;AACA,QAAM,IAAI1G,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnC,YAAM+C,MAAM,GAAG/C,KAAK,CAACd,MAAN,CAAaC,MAA5B;;AACA,UAAI4D,MAAJ,EAAY;AACV,cAAMe,KAAK,GAAGU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB1B,MAAM,CAACe,KAAzB,CAAd;;AACA,gBAAQA,KAAK,CAACL,MAAd;AACE,eAAKlF,gBAAL;AACEuF,YAAAA,KAAK,CAACL,MAAN,GAAejF,kBAAf;AACA6H,YAAAA,IAAI,CAACC,IAAL,CAAUxC,KAAV;AACA;;AACF,eAAKzF,mBAAL;AACEyF,YAAAA,KAAK,CAACL,MAAN,GAAejF,kBAAf;AACA6H,YAAAA,IAAI,CAACC,IAAL,CAAUxC,KAAV;AACA;;AACF,eAAKxF,kBAAL;AACEwF,YAAAA,KAAK,CAACL,MAAN,GAAerF,kBAAf;AACA;;AACF,eAAKI,kBAAL;AACEuE,YAAAA,MAAM,CAACE,QAAP;AACA;;AACF,eAAK7E,kBAAL;AACE2E,YAAAA,MAAM,CAACE,QAAP;AACA;;AACF;AACExF,YAAAA,MAAM,CAAC8I,IAAP,CAAa,wBAAuBzC,KAAK,CAACL,MAAO,EAAjD;AACAV,YAAAA,MAAM,CAACE,QAAP;AACA;AArBJ;;AAuBA,cAAMuD,aAAa,GAAGzD,MAAM,CAAC0D,MAAP,CAAc3C,KAAd,CAAtB;;AACA0C,QAAAA,aAAa,CAACzG,SAAd,GAA0B,YAAY;AACpCxC,UAAAA,eAAe,CAACwE,IAAhB,CAAqB,WAArB,EAAkC+B,KAAK,CAACnC,EAAxC,EAA4CmC,KAAK,CAAClC,OAAlD,EAA2DkC,KAAK,CAACvB,IAAjE,EAAuEuB,KAAK,CAACL,MAA7E;AACAjG,UAAAA,UAAU,CAACuE,IAAX,CAAgB,WAAhB,EAA6B+B,KAAK,CAACnC,EAAnC,EAAuCmC,KAAK,CAAClC,OAA7C,EAAsDkC,KAAK,CAACvB,IAA5D,EAAkEuB,KAAK,CAACL,MAAxE;AACAV,UAAAA,MAAM,CAACE,QAAP;AACD,SAJD;;AAKAuD,QAAAA,aAAa,CAAC1G,OAAd,GAAwB,UAAU4G,MAAV,EAAkB;AACxCjJ,UAAAA,MAAM,CAACgC,KAAP,CAAc,4CAA2CmC,OAAQ,QAAjE;AACAnE,UAAAA,MAAM,CAAC6C,WAAP,CAAmBoG,MAAnB;AACA3D,UAAAA,MAAM,CAACE,QAAP;AACD,SAJD;AAKD,OApCD,MAoCO;AACLrD,QAAAA,OAAO;AACR;AACF,KAzCD;;AA0CAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,qCAAoCmC,OAAQ,QAA1D;AACAnE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,qCAAoCiE,OAAQ,QAAvD,CAAD,CAAN;AACD,KAJD;AAKD,GAhDK,CAAN;AAiDA,SAAOyE,IAAP;AACD;AAED,OAAO,eAAeM,6BAAf,CAA6ChF,EAA7C,EAAwD;AAC7D,QAAM+B,mBAAmB,CAAC/B,EAAD,EAAMmC,KAAD,IAAsB;AAClD,QAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC,YAAM,IAAIpG,oBAAJ,CAA0B,wCAAuCiE,EAAG,kCAApE,CAAN;AACD;;AACDmC,IAAAA,KAAK,CAACO,OAAN,IAAiB,CAAjB,CAJkD,CAI9B;;AACpB,WAAOP,KAAP;AACD,GANwB,CAAzB;AAOD;AAED,OAAO,eAAe8C,iCAAf,CAAiDjF,EAAjD,EAA4DC,OAA5D,EAA4E;AACjF,MAAIyC,OAAO,GAAG,CAAd;AACA,QAAMH,uBAAuB,CAACvC,EAAD,EAAMmC,KAAD,IAA2B;AAC3D,QAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC,aAAO;AACLnC,QAAAA,EADK;AAELC,QAAAA,OAFK;AAGLyC,QAAAA,OAAO,EAAE,CAHJ;AAILC,QAAAA,UAAU,EAAEf,IAAI,CAACC,GAAL,EAJP;AAKLe,QAAAA,IAAI,EAAE;AALD,OAAP;AAOD;;AACDF,IAAAA,OAAO,GAAGP,KAAK,CAACO,OAAN,GAAgB,CAA1B;AACAP,IAAAA,KAAK,CAACO,OAAN,GAAgBA,OAAhB,CAX2D,CAWlC;;AACzB,WAAOP,KAAP;AACD,GAb4B,CAA7B;AAcA,SAAOO,OAAP;AACD;AAED,OAAO,eAAewC,qBAAf,CAAqCjF,OAArC,EAAsDkF,KAAtD,EAAyFC,KAAzF,EAAwG;AAAE;AAC/G,MAAI,OAAOnF,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAI+C,SAAJ,CAAe,iFAAgF,OAAO/C,OAAQ,GAA9G,CAAN;AACD;;AACD,MAAI,CAACoF,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAL,EAA2B;AACzB,UAAM,IAAInC,SAAJ,CAAe,+EAA8E,OAAOmC,KAAM,GAA1G,CAAN;AACD;;AACD,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AACxC,UAAM,CAAC3E,IAAD,EAAO6E,IAAP,IAAeN,KAAK,CAACI,CAAD,CAA1B;;AACA,QAAI,OAAO3E,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAM,IAAIoC,SAAJ,CAAe,8DAA6DuC,CAAE,2BAA0B,OAAO3E,IAAK,GAApH,CAAN;AACD;;AACD,QAAI,CAACyE,KAAK,CAACC,OAAN,CAAcG,IAAd,CAAL,EAA0B;AACxB,YAAM,IAAIzC,SAAJ,CAAe,8DAA6DuC,CAAE,2BAA0B,OAAOE,IAAK,GAApH,CAAN;AACD;AACF;;AACD,MAAI,OAAOL,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIpC,SAAJ,CAAe,+EAA8E,OAAOoC,KAAM,GAA1G,CAAN;AACD;;AACD,QAAMM,GAAG,GAAG,EAAZ;AACA,QAAMpI,KAAK,GAAG,MAAM6B,2BAA2B,EAA/C;AACA,QAAM,IAAInB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrC,SAAK,IAAIqH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AACxC,YAAM,CAAC3E,IAAD,EAAO6E,IAAP,IAAeN,KAAK,CAACI,CAAD,CAA1B;AACA,YAAMpD,KAAK,GAAG;AACZlC,QAAAA,OADY;AAEZW,QAAAA,IAFY;AAGZ6E,QAAAA,IAHY;AAIZ/C,QAAAA,OAAO,EAAE,CAJG;AAKZiD,QAAAA,OAAO,EAAE/D,IAAI,CAACC,GAAL,EALG;AAMZC,QAAAA,MAAM,EAAEnF,kBANI;AAOZgG,QAAAA,UAAU,EAAEf,IAAI,CAACC,GAAL,KAAauD;AAPb,OAAd;AASA,YAAMpI,OAAO,GAAGM,KAAK,CAAC+E,GAAN,CAAUF,KAAV,CAAhB;;AACAnF,MAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9B,cAAM4B,EAAE,GAAGhD,OAAO,CAACQ,MAAnB;AACAkI,QAAAA,GAAG,CAACf,IAAJ,CAAS3H,OAAO,CAACQ,MAAjB;AACA5B,QAAAA,eAAe,CAACwE,IAAhB,CAAqB,QAArB,EAA+BJ,EAA/B,EAAmCC,OAAnC,EAA4CW,IAA5C;AACA/E,QAAAA,UAAU,CAACuE,IAAX,CAAgB,QAAhB,EAA0BJ,EAA1B,EAA8BC,OAA9B,EAAuCW,IAAvC;AACA3C,QAAAA,OAAO,CAACjB,OAAO,CAACQ,MAAT,CAAP;AACD,OAND;;AAOAR,MAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,QAAAA,MAAM,CAACgC,KAAP,CAAc,uCAAsCqH,KAAK,CAACK,MAAO,IAAGL,KAAK,CAACK,MAAN,KAAiB,CAAjB,GAAqB,KAArB,GAA6B,MAAO,aAAYvF,OAAQ,EAA5H;AACAnE,QAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,QAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,uCAAsCmJ,KAAK,CAACK,MAAO,IAAGL,KAAK,CAACK,MAAN,KAAiB,CAAjB,GAAqB,KAArB,GAA6B,MAAO,aAAYvF,OAAQ,EAAzH,CAAD,CAAN;AACD,OAJD;AAKD;AACF,GA1BK,CAAN;AA2BA,SAAOyF,GAAP;AACD;AAED,OAAO,eAAeE,iBAAf,CAAiC3F,OAAjC,EAAkDW,IAAlD,EAAgE6E,IAAhE,EAAkFL,KAAlF,EAAiG;AAAE;AACxG,MAAI,OAAOnF,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAI+C,SAAJ,CAAe,4EAA2E,OAAO/C,OAAQ,GAAzG,CAAN;AACD;;AACD,MAAI,OAAOW,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIoC,SAAJ,CAAe,yEAAwE,OAAOpC,IAAK,GAAnG,CAAN;AACD;;AACD,MAAI,CAACyE,KAAK,CAACC,OAAN,CAAcG,IAAd,CAAL,EAA0B;AACxB,UAAM,IAAIzC,SAAJ,CAAe,yEAAwE,OAAOyC,IAAK,GAAnG,CAAN;AACD;;AACD,MAAI,OAAOL,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIpC,SAAJ,CAAe,0EAAyE,OAAOoC,KAAM,GAArG,CAAN;AACD;;AACD,QAAMjD,KAAK,GAAG;AACZlC,IAAAA,OADY;AAEZW,IAAAA,IAFY;AAGZ6E,IAAAA,IAHY;AAIZ/C,IAAAA,OAAO,EAAE,CAJG;AAKZiD,IAAAA,OAAO,EAAE/D,IAAI,CAACC,GAAL,EALG;AAMZC,IAAAA,MAAM,EAAEnF,kBANI;AAOZgG,IAAAA,UAAU,EAAEf,IAAI,CAACC,GAAL,KAAauD;AAPb,GAAd;AASA,QAAM9H,KAAK,GAAG,MAAM6B,2BAA2B,EAA/C;AAEA,QAAMnC,OAAO,GAAGM,KAAK,CAAC+E,GAAN,CAAUF,KAAV,CAAhB;AACA,QAAMnC,EAAE,GAAG,MAAM,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChDlB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO,CAACjB,OAAO,CAACQ,MAAT,CAAP;AACD,KAFD;;AAGAR,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,kCAAiC8C,IAAK,MAApD;AACA9E,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,kCAAiC4E,IAAK,MAAjD,CAAD,CAAN;AACD,KAJD;AAKD,GATgB,CAAjB;AAUAhF,EAAAA,eAAe,CAACwE,IAAhB,CAAqB,QAArB,EAA+BJ,EAA/B,EAAmCC,OAAnC,EAA4CW,IAA5C;AACA/E,EAAAA,UAAU,CAACuE,IAAX,CAAgB,QAAhB,EAA0BJ,EAA1B,EAA8BC,OAA9B,EAAuCW,IAAvC;AACA,SAAOZ,EAAP;AACD;AAED,OAAO,eAAe6F,uCAAf,CAAuD7F,EAAvD,EAAkEC,OAAlE,EAAmFW,IAAnF,EAAiG6E,IAAjG,EAAmH;AAAE;AAC1H,MAAI,OAAOzF,EAAP,KAAc,QAAlB,EAA4B;AAC1B,UAAM,IAAIgD,SAAJ,CAAe,uEAAsE,OAAOhD,EAAG,GAA/F,CAAN;AACD;;AACD,MAAI,OAAOC,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAI+C,SAAJ,CAAe,4EAA2E,OAAO/C,OAAQ,GAAzG,CAAN;AACD;;AACD,MAAI,OAAOW,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIoC,SAAJ,CAAe,yEAAwE,OAAOpC,IAAK,GAAnG,CAAN;AACD;;AACD,MAAI,CAACyE,KAAK,CAACC,OAAN,CAAcG,IAAd,CAAL,EAA0B;AACxB,UAAM,IAAIzC,SAAJ,CAAe,yEAAwE,OAAOyC,IAAK,GAAnG,CAAN;AACD;;AACD,QAAMtD,KAAK,GAAG;AACZnC,IAAAA,EADY;AAEZC,IAAAA,OAFY;AAGZW,IAAAA,IAHY;AAIZ6E,IAAAA,IAJY;AAKZ/C,IAAAA,OAAO,EAAE,CALG;AAMZiD,IAAAA,OAAO,EAAE/D,IAAI,CAACC,GAAL,EANG;AAOZC,IAAAA,MAAM,EAAEhF,6BAPI;AAQZ6F,IAAAA,UAAU,EAAEf,IAAI,CAACC,GAAL;AARA,GAAd;AAUA,QAAMvE,KAAK,GAAG,MAAM6B,2BAA2B,EAA/C;AACA,QAAMnC,OAAO,GAAGM,KAAK,CAAC+E,GAAN,CAAUF,KAAV,CAAhB;AACA,QAAM,IAAInE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO,CAACjB,OAAO,CAACQ,MAAT,CAAP;AACD,KAFD;;AAGAR,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,kCAAiC8C,IAAK,MAApD;AACA9E,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,kCAAiC4E,IAAK,MAAjD,CAAD,CAAN;AACD,KAJD;AAKD,GATK,CAAN;AAUAhF,EAAAA,eAAe,CAACwE,IAAhB,CAAqB,QAArB,EAA+BJ,EAA/B,EAAmCC,OAAnC,EAA4CW,IAA5C;AACA/E,EAAAA,UAAU,CAACuE,IAAX,CAAgB,QAAhB,EAA0BJ,EAA1B,EAA8BC,OAA9B,EAAuCW,IAAvC;AACA,SAAOZ,EAAP;AACD;AAED,OAAO,eAAe8F,mBAAf,GAAyD;AAAE;AAChE,QAAMxI,KAAK,GAAG,MAAM8B,0BAA0B,EAA9C;AACA,QAAMyB,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,aAAZ,CAAd,CAF8D,CAG9D;;AACA,QAAM7D,OAAO,GAAG6D,KAAK,CAACa,MAAN,CAAaX,WAAW,CAACY,KAAZ,CAAkB7E,6BAAlB,EAAiDH,kBAAjD,CAAb,CAAhB;AACA,QAAM+H,IAAI,GAAG,MAAM,IAAI1G,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAClDlB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnCJ,MAAAA,OAAO,CAACI,KAAK,CAACd,MAAN,CAAaC,MAAd,CAAP;AACD,KAFD;;AAGAR,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAa,8BAAb;AACAhC,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAU,8BAAV,CAAD,CAAN;AACD,KAJD;AAKD,GATkB,CAAnB;AAUA,SAAO0I,IAAP;AACD;AAED,OAAO,SAASqB,gBAAT,CAA0BL,GAA1B,EAA6C;AAClDA,EAAAA,GAAG,CAACM,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAvB;AACA,QAAMC,MAAM,GAAG,CAAC,CAAC,CAAD,EAAIT,GAAG,CAAC,CAAD,CAAH,GAAS,CAAb,CAAD,CAAf;;AACA,OAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,GAAG,CAACF,MAAxB,EAAgCD,CAAC,IAAI,CAArC,EAAwC;AACtC,QAAIG,GAAG,CAACH,CAAD,CAAH,GAAS,CAAT,KAAeG,GAAG,CAACH,CAAC,GAAG,CAAL,CAAtB,EAA+B;AAC7B,UAAIA,CAAC,GAAG,CAAJ,IAASG,GAAG,CAACF,MAAjB,EAAyB;AACvBW,QAAAA,MAAM,CAACxB,IAAP,CAAY,CAACe,GAAG,CAACH,CAAD,CAAH,GAAS,CAAV,EAAaa,QAAb,CAAZ;AACD,OAFD,MAEO;AACLD,QAAAA,MAAM,CAACxB,IAAP,CAAY,CAACe,GAAG,CAACH,CAAD,CAAH,GAAS,CAAV,EAAaG,GAAG,CAACH,CAAC,GAAG,CAAL,CAAH,GAAa,CAA1B,CAAZ;AACD;AACF;AACF;;AACD,SAAOY,MAAP;AACD;AAED,OAAO,eAAeE,wBAAf,CAAwCX,GAAxC,EAA+E;AAAE;AACtF,MAAIA,GAAG,CAACF,MAAJ,KAAe,CAAnB,EAAsB;AACpB,WAAOM,mBAAmB,EAA1B;AACD;;AACD,QAAM,CAACxI,KAAD,EAAQkC,OAAR,IAAmB,MAAMI,+CAA+C,EAA9E;AACA,QAAMiB,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,aAAZ,CAAd;AACA,QAAM6D,IAAI,GAAG,EAAb,CANoF,CAOpF;;AACA,QAAM1H,OAAO,GAAG6D,KAAK,CAACC,UAAN,CAAiBC,WAAW,CAACY,KAAZ,CAAkB7E,6BAAlB,EAAiDH,kBAAjD,CAAjB,CAAhB;;AACAK,EAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnC,SAAK,MAAM2B,EAAX,IAAiB3B,KAAK,CAACd,MAAN,CAAaC,MAA9B,EAAsC;AACpC,UAAIkI,GAAG,CAACY,QAAJ,CAAatG,EAAb,CAAJ,EAAsB;AACpB;AACD;;AACD,YAAMuG,UAAU,GAAGjJ,KAAK,CAAC2E,GAAN,CAAUjC,EAAV,CAAnB;;AACAuG,MAAAA,UAAU,CAACnI,SAAX,GAAuB,YAAY;AACjCsG,QAAAA,IAAI,CAACC,IAAL,CAAU4B,UAAU,CAAC/I,MAArB;AACD,OAFD;;AAGA+I,MAAAA,UAAU,CAACpI,OAAX,GAAqB,UAAU4G,MAAV,EAAkB;AACrCjJ,QAAAA,MAAM,CAACgC,KAAP,CAAc,mCAAkCkC,EAAG,EAAnD;AACAlE,QAAAA,MAAM,CAAC6C,WAAP,CAAmBoG,MAAnB;AACD,OAHD;AAID;AACF,GAdD;;AAeA/H,EAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,IAAAA,MAAM,CAACgC,KAAP,CAAa,8BAAb;AACAhC,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;;AAIA,QAAMmB,OAAN;AACA,SAAOkF,IAAP;AACD;AAED,OAAO,eAAe8B,0BAAf,CAA0CvG,OAA1C,EAA+E;AAAE;AACtF,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAI+C,SAAJ,CAAe,wFAAuF,OAAO/C,OAAQ,GAArH,CAAN;AACD;;AACD,QAAM3C,KAAK,GAAG,MAAM8B,0BAA0B,EAA9C;AACA,QAAMyB,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,cAAZ,CAAd,CALoF,CAMpF;;AACA,QAAM7D,OAAO,GAAG6D,KAAK,CAACa,MAAN,CAAaX,WAAW,CAACC,IAAZ,CAAiBf,OAAjB,CAAb,CAAhB;AACA,QAAMyE,IAAI,GAAG,MAAM,IAAI1G,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAClDlB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnCJ,MAAAA,OAAO,CAACI,KAAK,CAACd,MAAN,CAAaC,MAAd,CAAP;AACD,KAFD;;AAGAR,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAa,8BAAb;AACAhC,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAU,8BAAV,CAAD,CAAN;AACD,KAJD;AAKD,GATkB,CAAnB;AAUA,SAAO0I,IAAP;AACD;AAED,OAAO,eAAe+B,iBAAf,CAAiCC,MAAjC,EAA4E;AAAE;AACnF,MAAI,CAACrB,KAAK,CAACC,OAAN,CAAcoB,MAAd,CAAL,EAA4B;AAC1B,UAAM,IAAI1D,SAAJ,CAAe,8EAA6E,OAAO0D,MAAO,GAA1G,CAAN;AACD;;AACD,QAAM,CAACpJ,KAAD,EAAQkC,OAAR,IAAmB,MAAMI,+CAA+C,EAA9E;AACA,QAAM8E,IAAI,GAAG,EAAb;;AACA,OAAK,MAAMiC,KAAX,IAAoBD,MAApB,EAA4B;AAC1B,UAAM1J,OAAO,GAAGM,KAAK,CAAC2E,GAAN,CAAU0E,KAAV,CAAhB;;AACA3J,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9B,UAAI,OAAOpB,OAAO,CAACQ,MAAf,KAA0B,WAA9B,EAA2C;AACzCkH,QAAAA,IAAI,CAACC,IAAL,CAAU3H,OAAO,CAACQ,MAAlB;AACD;AACF,KAJD;;AAKAR,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,mCAAkC6I,KAAM,EAAtD;AACA7K,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,KAHD;AAID;;AACD,QAAMmB,OAAN;AACA,SAAOkF,IAAP;AACD;AAED,OAAO,eAAekC,iCAAf,CAAiD3G,OAAjD,EAAkE;AAAE;AACzE,QAAMyE,IAAI,GAAG,MAAMmC,4BAA4B,CAAC5G,OAAD,CAA/C;AACA,SAAOyE,IAAI,CAACc,MAAZ;AACD;AAED,OAAO,eAAeqB,4BAAf,CAA4C5G,OAA5C,EAAiF;AAAE;AACxF,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAI+C,SAAJ,CAAe,oFAAmF,OAAO/C,OAAQ,GAAjH,CAAN;AACD;;AACD,QAAM3C,KAAK,GAAG,MAAM8B,0BAA0B,EAA9C;AACA,QAAMyB,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,oBAAZ,CAAd,CALsF,CAMtF;;AACA,QAAM7D,OAAO,GAAG6D,KAAK,CAACM,UAAN,CAAiBJ,WAAW,CAACC,IAAZ,CAAiB,CAACf,OAAD,EAAUvD,mBAAV,CAAjB,CAAjB,CAAhB;AACA,QAAMgI,IAAI,GAAG,EAAb;AACA,QAAM,IAAI1G,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnC,YAAM+C,MAAM,GAAG/C,KAAK,CAACd,MAAN,CAAaC,MAA5B;;AACA,UAAI4D,MAAJ,EAAY;AACVsD,QAAAA,IAAI,CAACC,IAAL,CAAUvD,MAAM,CAACe,KAAjB;AACAf,QAAAA,MAAM,CAACE,QAAP;AACD,OAHD,MAGO;AACLrD,QAAAA,OAAO;AACR;AACF,KARD;;AASAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,wDAAuDmC,OAAQ,EAA7E;AACAnE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,wDAAuDiE,OAAQ,EAA1E,CAAD,CAAN;AACD,KAJD;AAKD,GAfK,CAAN;AAgBA,SAAOyE,IAAP;AACD;AAED,OAAO,eAAeoC,uBAAf,CAAuC9G,EAAvC,EAAkD4C,IAAlD,EAAgE;AAAE;AACvE,MAAI,OAAO5C,EAAP,KAAc,QAAlB,EAA4B;AAC1B,UAAM,IAAIgD,SAAJ,CAAe,+EAA8E,OAAOhD,EAAG,GAAvG,CAAN;AACD;;AACD,MAAI,OAAO4C,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAII,SAAJ,CAAe,iFAAgF,OAAOJ,IAAK,GAA3G,CAAN;AACD;;AACD,QAAMtF,KAAK,GAAG,MAAMyB,2BAA2B,EAA/C;AACA,QAAM/B,OAAO,GAAGM,KAAK,CAAC+E,GAAN,CAAU;AAAErC,IAAAA,EAAF;AAAM4C,IAAAA;AAAN,GAAV,CAAhB;AACA,QAAM,IAAI5E,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO;AACR,KAFD;;AAGAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,6CAA4CkC,EAAG,EAA7D;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,6CAA4CgE,EAAG,EAA1D,CAAD,CAAN;AACD,KAJD;AAKD,GATK,CAAN;AAUD;AAED,OAAO,eAAe+G,uBAAf,CAAuC/G,EAAvC,EAAkD;AACvD,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,UAAM,IAAIgD,SAAJ,CAAe,+EAA8E,OAAOhD,EAAG,GAAvG,CAAN;AACD;;AACD,QAAM1C,KAAK,GAAG,MAAM0B,0BAA0B,EAA9C;AACA,QAAMhC,OAAO,GAAGM,KAAK,CAAC2E,GAAN,CAAUjC,EAAV,CAAhB;AACA,QAAMgH,QAAQ,GAAG,MAAM,IAAIhJ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtDlB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO,CAACjB,OAAO,CAACQ,MAAT,CAAP;AACD,KAFD;;AAGAR,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,6CAA4CkC,EAAG,EAA7D;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,6CAA4CgE,EAAG,EAA1D,CAAD,CAAN;AACD,KAJD;AAKD,GATsB,CAAvB;AAUA,SAAO,OAAOgH,QAAP,KAAoB,WAApB,GAAkCA,QAAQ,CAACpE,IAA3C,GAAkDc,SAAzD;AACD;AAED,OAAO,eAAeuD,0BAAf,CAA0CjH,EAA1C,EAAqD;AAC1D,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,UAAM,IAAIgD,SAAJ,CAAe,+EAA8E,OAAOhD,EAAG,GAAvG,CAAN;AACD;;AACD,QAAM1C,KAAK,GAAG,MAAMyB,2BAA2B,EAA/C;AACA,QAAM/B,OAAO,GAAGM,KAAK,CAAC6C,MAAN,CAAaH,EAAb,CAAhB;AACA,SAAO,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO;AACR,KAFD;;AAGAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,sCAAqCkC,EAAG,EAAtD;AACAlE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,sCAAqCgE,EAAG,EAAnD,CAAD,CAAN;AACD,KAJD;AAKD,GATM,CAAP;AAUD;AAED,OAAO,eAAekH,cAAf,CAA8BjH,OAA9B,EAA8C;AACnD,QAAM3C,KAAK,GAAG,MAAM8B,0BAA0B,EAA9C;AACA,QAAMyB,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,oBAAZ,CAAd,CAFmD,CAGnD;;AACA,QAAMsG,cAAc,GAAGtG,KAAK,CAACC,UAAN,CAAiBC,WAAW,CAACC,IAAZ,CAAiB,CAACf,OAAD,EAAUxD,kBAAV,CAAjB,CAAjB,CAAvB,CAJmD,CAKnD;;AACA,QAAM2K,eAAe,GAAGvG,KAAK,CAACC,UAAN,CAAiBC,WAAW,CAACC,IAAZ,CAAiB,CAACf,OAAD,EAAUvD,mBAAV,CAAjB,CAAjB,CAAxB,CANmD,CAOnD;;AACA,QAAM2K,cAAc,GAAGxG,KAAK,CAACC,UAAN,CAAiBC,WAAW,CAACC,IAAZ,CAAiB,CAACf,OAAD,EAAUtD,kBAAV,CAAjB,CAAjB,CAAvB,CARmD,CASnD;;AACA,QAAM2K,YAAY,GAAGzG,KAAK,CAACC,UAAN,CAAiBC,WAAW,CAACC,IAAZ,CAAiB,CAACf,OAAD,EAAUrD,gBAAV,CAAjB,CAAjB,CAArB,CAVmD,CAWnD;;AACA,QAAM2K,cAAc,GAAG1G,KAAK,CAACC,UAAN,CAAiBC,WAAW,CAACC,IAAZ,CAAiB,CAACf,OAAD,EAAUpD,kBAAV,CAAjB,CAAjB,CAAvB,CAZmD,CAanD;;AACA,QAAM2K,uBAAuB,GAAG3G,KAAK,CAACC,UAAN,CAAiBC,WAAW,CAACC,IAAZ,CAAiB,CAACf,OAAD,EAAUnD,6BAAV,CAAjB,CAAjB,CAAhC;AACA,QAAM2K,mBAAmB,GAAG,IAAIzJ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC3DiJ,IAAAA,cAAc,CAAC/I,SAAf,GAA2B,UAAUC,KAAV,EAAiB;AAC1CJ,MAAAA,OAAO,CAACI,KAAK,CAACd,MAAN,CAAaC,MAAb,CAAoBgI,MAArB,CAAP;AACD,KAFD;;AAGA2B,IAAAA,cAAc,CAAChJ,OAAf,GAAyB,UAAUE,KAAV,EAAiB;AACxCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,+CAA8CmC,OAAQ,EAApE;AACAnE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,+CAA8CiE,OAAQ,EAAjE,CAAD,CAAN;AACD,KAJD;AAKD,GAT2B,CAA5B;AAUA,QAAMyH,oBAAoB,GAAG,IAAI1J,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC5DkJ,IAAAA,eAAe,CAAChJ,SAAhB,GAA4B,UAAUC,KAAV,EAAiB;AAC3CJ,MAAAA,OAAO,CAACI,KAAK,CAACd,MAAN,CAAaC,MAAb,CAAoBgI,MAArB,CAAP;AACD,KAFD;;AAGA4B,IAAAA,eAAe,CAACjJ,OAAhB,GAA0B,UAAUE,KAAV,EAAiB;AACzCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,+CAA8CmC,OAAQ,EAApE;AACAnE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,+CAA8CiE,OAAQ,EAAjE,CAAD,CAAN;AACD,KAJD;AAKD,GAT4B,CAA7B;AAUA,QAAM0H,mBAAmB,GAAG,IAAI3J,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC3DmJ,IAAAA,cAAc,CAACjJ,SAAf,GAA2B,UAAUC,KAAV,EAAiB;AAC1CJ,MAAAA,OAAO,CAACI,KAAK,CAACd,MAAN,CAAaC,MAAb,CAAoBgI,MAArB,CAAP;AACD,KAFD;;AAGA6B,IAAAA,cAAc,CAAClJ,OAAf,GAAyB,UAAUE,KAAV,EAAiB;AACxCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,+CAA8CmC,OAAQ,EAApE;AACAnE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,+CAA8CiE,OAAQ,EAAjE,CAAD,CAAN;AACD,KAJD;AAKD,GAT2B,CAA5B;AAUA,QAAM2H,iBAAiB,GAAG,IAAI5J,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACzDoJ,IAAAA,YAAY,CAAClJ,SAAb,GAAyB,UAAUC,KAAV,EAAiB;AACxCJ,MAAAA,OAAO,CAACI,KAAK,CAACd,MAAN,CAAaC,MAAb,CAAoBgI,MAArB,CAAP;AACD,KAFD;;AAGA8B,IAAAA,YAAY,CAACnJ,OAAb,GAAuB,UAAUE,KAAV,EAAiB;AACtCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,+CAA8CmC,OAAQ,EAApE;AACAnE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,+CAA8CiE,OAAQ,EAAjE,CAAD,CAAN;AACD,KAJD;AAKD,GATyB,CAA1B;AAUA,QAAM4H,mBAAmB,GAAG,IAAI7J,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC3DqJ,IAAAA,cAAc,CAACnJ,SAAf,GAA2B,UAAUC,KAAV,EAAiB;AAC1CJ,MAAAA,OAAO,CAACI,KAAK,CAACd,MAAN,CAAaC,MAAb,CAAoBgI,MAArB,CAAP;AACD,KAFD;;AAGA+B,IAAAA,cAAc,CAACpJ,OAAf,GAAyB,UAAUE,KAAV,EAAiB;AACxCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,+CAA8CmC,OAAQ,EAApE;AACAnE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,+CAA8CiE,OAAQ,EAAjE,CAAD,CAAN;AACD,KAJD;AAKD,GAT2B,CAA5B;AAUA,QAAM6H,4BAA4B,GAAG,IAAI9J,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpEsJ,IAAAA,uBAAuB,CAACpJ,SAAxB,GAAoC,UAAUC,KAAV,EAAiB;AACnDJ,MAAAA,OAAO,CAACI,KAAK,CAACd,MAAN,CAAaC,MAAb,CAAoBgI,MAArB,CAAP;AACD,KAFD;;AAGAgC,IAAAA,uBAAuB,CAACrJ,OAAxB,GAAkC,UAAUE,KAAV,EAAiB;AACjDvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,+CAA8CmC,OAAQ,EAApE;AACAnE,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,+CAA8CiE,OAAQ,EAAjE,CAAD,CAAN;AACD,KAJD;AAKD,GAToC,CAArC;AAUA,QAAM,CACJ8H,YADI,EAEJC,aAFI,EAGJC,YAHI,EAIJC,UAJI,EAKJC,YALI,EAMJC,qBANI,IAOF,MAAMpK,OAAO,CAACqK,GAAR,CAAY,CACpBZ,mBADoB,EAEpBC,oBAFoB,EAGpBC,mBAHoB,EAIpBC,iBAJoB,EAKpBC,mBALoB,EAMpBC,4BANoB,CAAZ,CAPV;;AAeA,MAAIC,YAAY,GAAG,CAAf,IAAoBI,YAAY,GAAG,CAAvC,EAA0C;AACxC,WAAO9L,kBAAP;AACD;;AACD,MAAI6L,UAAU,GAAG,CAAb,IAAkBD,YAAY,GAAG,CAAjC,IAAsCG,qBAAqB,GAAG,CAAlE,EAAqE;AACnE,WAAO9L,oBAAP;AACD;;AACD,MAAI0L,aAAa,GAAG,CAApB,EAAuB;AACrB,WAAOzL,qBAAP;AACD;;AACD,SAAOC,kBAAP;AACD;AAED,OAAO,eAAe8L,YAAf,CAA4B3B,KAA5B,EAA0C4B,GAA1C,EAAsDC,QAAtD,EAAuE;AAC5E,MAAI,OAAO7B,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAI3D,SAAJ,CAAe,uEAAsE,OAAO2D,KAAM,GAAlG,CAAN;AACD;;AACD,MAAI,OAAO4B,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIvF,SAAJ,CAAe,qEAAoE,OAAOuF,GAAI,GAA9F,CAAN;AACD;;AACD,MAAI,OAAOC,QAAP,KAAoB,QAAxB,EAAkC;AAChC,UAAM,IAAIxF,SAAJ,CAAe,0EAAyE,OAAOwF,QAAS,GAAxG,CAAN;AACD;;AACD,QAAMlL,KAAK,GAAG,MAAMuB,gCAAgC,EAApD;AACA,QAAM7B,OAAO,GAAGM,KAAK,CAAC+E,GAAN,CAAU;AACxBsE,IAAAA,KADwB;AAExB4B,IAAAA,GAFwB;AAGxBC,IAAAA;AAHwB,GAAV,CAAhB;AAKA,SAAO,IAAIxK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,YAAY;AAC9BH,MAAAA,OAAO;AACR,KAFD;;AAGAjB,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,8CAA6C6I,KAAM,cAAa4B,GAAI,oBAAmBC,QAAS,GAA9G;AACA1M,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,8CAA6C2K,KAAM,cAAa4B,GAAI,oBAAmBC,QAAS,GAA3G,CAAD,CAAN;AACD,KAJD;AAKD,GATM,CAAP;AAUD;AAED,OAAO,eAAeC,sBAAf,CAAsCF,GAAtC,EAAkD;AACvD,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIvF,SAAJ,CAAe,qEAAoE,OAAOuF,GAAI,GAA9F,CAAN;AACD;;AACD,QAAMjL,KAAK,GAAG,MAAMwB,+BAA+B,EAAnD;AACA,QAAM+B,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,UAAZ,CAAd,CALuD,CAMvD;;AACA,QAAM7D,OAAO,GAAG6D,KAAK,CAACa,MAAN,CAAaX,WAAW,CAACC,IAAZ,CAAiBuH,GAAjB,CAAb,CAAhB;AACA,SAAO,IAAIvK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtClB,IAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnC,YAAMqK,GAAwB,GAAG,IAAIC,GAAJ,CAAQtK,KAAK,CAACd,MAAN,CAAaC,MAAb,CAAoBkL,GAApB,CAAyBE,CAAD,IAAO,CAACA,CAAC,CAACjC,KAAH,EAAUiC,CAAC,CAACJ,QAAZ,CAA/B,CAAR,CAAjC;AACAvK,MAAAA,OAAO,CAACyK,GAAD,CAAP;AACD,KAHD;;AAIA1L,IAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,MAAAA,MAAM,CAACgC,KAAP,CAAc,8CAA6CyK,GAAI,EAA/D;AACAzM,MAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACAH,MAAAA,MAAM,CAAC,IAAIlC,KAAJ,CAAW,8CAA6CuM,GAAI,EAA5D,CAAD,CAAN;AACD,KAJD;AAKD,GAVM,CAAP;AAWD;AAGD,OAAO,eAAeM,kDAAf,CAAkEN,GAAlE,EAA8E;AACnF,QAAMG,GAAG,GAAG,MAAMD,sBAAsB,CAACF,GAAD,CAAxC;;AACA,OAAK,MAAM5B,KAAX,IAAoB+B,GAAG,CAACI,IAAJ,EAApB,EAAgC;AAC9B,UAAM1E,iCAAiC,CAACuC,KAAD,CAAvC;AACD;AACF;AAED,OAAO,eAAeoC,UAAf,CAA0BR,GAA1B,EAAsC;AAC3C,QAAMG,GAAG,GAAG,MAAMD,sBAAsB,CAACF,GAAD,CAAxC;;AACA,MAAIG,GAAG,CAACM,IAAJ,KAAa,CAAjB,EAAoB;AAClB,WAAO,EAAP;AACD;;AACD,QAAMtE,IAAI,GAAG,MAAM+B,iBAAiB,CAAC,CAAC,GAAGiC,GAAG,CAACI,IAAJ,EAAJ,CAAD,CAApC;AACA,QAAMG,OAAO,GAAG,EAAhB;;AACA,OAAK,MAAM;AAAEjJ,IAAAA,EAAF;AAAMyF,IAAAA;AAAN,GAAX,IAA2Bf,IAA3B,EAAiC;AAC/B,UAAM8D,QAAQ,GAAGE,GAAG,CAACzG,GAAJ,CAAQjC,EAAR,CAAjB;;AACA,QAAI,OAAOwI,QAAP,KAAoB,QAAxB,EAAkC;AAChC;AACD;;AACD,SAAK,MAAMhL,MAAX,IAAqBjC,QAAQ,CAAC;AAAEkH,MAAAA,IAAI,EAAE+F,QAAR;AAAkBU,MAAAA,IAAI,EAAEzD;AAAxB,KAAD,CAA7B,EAA+D;AAC7DwD,MAAAA,OAAO,CAACtE,IAAR,CAAanH,MAAb;AACD;AACF;;AACD,SAAOyL,OAAP;AACD;AAED,OAAO,eAAeE,SAAf,CAAyBZ,GAAzB,EAAqC;AAC1C,QAAMU,OAAO,GAAG,MAAMF,UAAU,CAACR,GAAD,CAAhC;AACA,SAAOU,OAAO,CAAC,CAAD,CAAd;AACD;;AAED,SAAS5I,iCAAT,CAA2CsG,KAA3C,EAAyD;AACvD1J,EAAAA,IAAI,CAACmM,cAAL,CAAoB,MAAMC,sBAAsB,CAAC1C,KAAD,CAAtB,CAA8B2C,KAA9B,CAAqCxL,KAAD,IAAW;AACvEhC,IAAAA,MAAM,CAACgC,KAAP,CAAc,6CAA4C6I,KAAM,eAAhE;AACA7K,IAAAA,MAAM,CAACyN,UAAP,CAAkBzL,KAAlB;AACD,GAHyB,CAA1B;AAID;;AAED,OAAO,eAAeuL,sBAAf,CAAsC1C,KAAtC,EAAoD;AACzD,QAAM,CAACrJ,KAAD,EAAQkC,OAAR,IAAmB,MAAMK,qDAAqD,EAApF;AACA,QAAMgB,KAAK,GAAGvD,KAAK,CAACuD,KAAN,CAAY,YAAZ,CAAd,CAFyD,CAGzD;;AACA,QAAM7D,OAAO,GAAG6D,KAAK,CAACC,UAAN,CAAiBC,WAAW,CAACC,IAAZ,CAAiB2F,KAAjB,CAAjB,CAAhB;;AACA3J,EAAAA,OAAO,CAACoB,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACnC,SAAK,MAAM2B,EAAX,IAAiB3B,KAAK,CAACd,MAAN,CAAaC,MAA9B,EAAsC;AACpC,YAAM0C,aAAa,GAAG5C,KAAK,CAAC6C,MAAN,CAAaH,EAAb,CAAtB;;AACAE,MAAAA,aAAa,CAAC/B,OAAd,GAAwB,UAAUqL,WAAV,EAAuB;AAC7C1N,QAAAA,MAAM,CAACgC,KAAP,CAAc,gEAA+D6I,KAAM,EAAnF;AACA7K,QAAAA,MAAM,CAAC6C,WAAP,CAAmB6K,WAAnB;AACD,OAHD;AAID;AACF,GARD;;AASAxM,EAAAA,OAAO,CAACmB,OAAR,GAAkB,UAAUE,KAAV,EAAiB;AACjCvC,IAAAA,MAAM,CAACgC,KAAP,CAAc,yDAAwD6I,KAAM,EAA5E;AACA7K,IAAAA,MAAM,CAAC6C,WAAP,CAAmBN,KAAnB;AACD,GAHD;;AAIA,QAAMmB,OAAN;AACD","sourcesContent":["// @flow\n\nimport { JSONPath } from 'jsonpath-plus';\nimport merge from 'lodash/merge';\nimport unset from 'lodash/unset';\nimport EventEmitter from 'events';\nimport makeLogger from './logger';\n\n// Local job emitter is for this process only,\n// jobEmitter is bridged when a MessagePort is open\nexport const localJobEmitter = new EventEmitter();\nexport const jobEmitter = new EventEmitter();\n\nconst logger = makeLogger('Jobs Database');\n\nexport class JobDoesNotExistError extends Error {\n  constructor(message:string) {\n    super(message);\n    this.name = 'JobDoesNotExistError';\n  }\n}\n\nexport class CleanupDoesNotExistError extends Error {\n  constructor(message:string) {\n    super(message);\n    this.name = 'CleanupDoesNotExistError';\n  }\n}\n\nexport type Job = {\n  id: number,\n  queueId:string,\n  type:string,\n  args:Array<any>,\n  attempt: number,\n  created: number,\n  status: number,\n  startAfter: number\n};\n\n\ntype Cleanup = {\n  id: number,\n  queueId:string,\n  data: Object,\n  attempt: number,\n  startAfter: number\n};\n\nexport const QUEUE_ERROR_STATUS = 0;\nexport const QUEUE_PENDING_STATUS = 1;\nexport const QUEUE_COMPLETE_STATUS = 2;\nexport const QUEUE_EMPTY_STATUS = 3;\n\nexport const JOB_ABORTED_STATUS = 2;\nexport const JOB_COMPLETE_STATUS = 1;\nexport const JOB_PENDING_STATUS = 0;\nexport const JOB_ERROR_STATUS = -1;\nexport const JOB_CLEANUP_STATUS = -2;\nexport const JOB_CLEANUP_AND_REMOVE_STATUS = -3;\n\nexport const databasePromise = (async () => {\n  const request = self.indexedDB.open('battery-queue-04', 1);\n\n  request.onupgradeneeded = function (e) {\n    try {\n      const store = e.target.result.createObjectStore('jobs', { keyPath: 'id', autoIncrement: true });\n      store.createIndex('statusIndex', 'status', { unique: false });\n      store.createIndex('queueIdIndex', 'queueId', { unique: false });\n      store.createIndex('queueIdTypeIndex', ['queueId', 'type'], { unique: false });\n      store.createIndex('statusQueueIdIndex', ['queueId', 'status'], { unique: false });\n      store.createIndex('createdIndex', 'created', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      e.target.result.createObjectStore('metadata', { keyPath: 'id' });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      const store = e.target.result.createObjectStore('cleanups', { keyPath: 'id' });\n      store.createIndex('queueIdIndex', 'queueId', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      e.target.result.createObjectStore('auth-data', { keyPath: 'id' });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      const store = e.target.result.createObjectStore('arg-lookup', { keyPath: 'id', autoIncrement: true });\n      store.createIndex('jobIdIndex', 'jobId', { unique: false });\n      store.createIndex('keyIndex', 'key', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n  };\n\n  const db = await new Promise((resolve, reject) => {\n    request.onerror = () => {\n      reject(new Error('Unable to open database'));\n    };\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n  });\n\n  return db;\n})();\n\nasync function getReadWriteObjectStore(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readwrite');\n  const objectStore = transaction.objectStore(name);\n  transaction.onabort = (event) => {\n    logger.error(`Read-write \"${name}\" transaction was aborted`);\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error(`Error in read-write \"${name}\" transaction`);\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyObjectStore(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readonly');\n  const objectStore = transaction.objectStore(name);\n  transaction.onabort = (event) => {\n    logger.error(`Read-only \"${name}\" transaction was aborted`);\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error(`Error in read-only \"${name}\" transaction`);\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nfunction getReadWriteArgLookupObjectStore() {\n  return getReadWriteObjectStore('arg-lookup');\n}\n\nfunction getReadOnlyArgLookupObjectStore() {\n  return getReadOnlyObjectStore('arg-lookup');\n}\n\nfunction getReadWriteAuthObjectStore() {\n  return getReadWriteObjectStore('auth-data');\n}\n\nfunction getReadOnlyAuthObjectStore() {\n  return getReadOnlyObjectStore('auth-data');\n}\n\nfunction getReadWriteMetadataObjectStore() {\n  return getReadWriteObjectStore('metadata');\n}\n\nfunction getReadOnlyMetadataObjectStore() {\n  return getReadOnlyObjectStore('metadata');\n}\n\nfunction getReadWriteJobsObjectStore() {\n  return getReadWriteObjectStore('jobs');\n}\n\nfunction getReadOnlyJobsObjectStore() {\n  return getReadOnlyObjectStore('jobs');\n}\n\nfunction getReadWriteCleanupsObjectStore() {\n  return getReadWriteObjectStore('cleanups');\n}\n\nfunction getReadOnlyCleanupsObjectStore() {\n  return getReadOnlyObjectStore('cleanups');\n}\n\nasync function getReadWriteObjectStoreAndTransactionPromise(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readwrite');\n  const objectStore = transaction.objectStore(name);\n  const promise = new Promise((resolve, reject) => {\n    transaction.onabort = (event) => {\n      logger.error(`Read-write \"${name}\" transaction was aborted`);\n      logger.errorObject(event);\n      reject(new Error(`Read-write \"${name}\" transaction was aborted`));\n    };\n    transaction.onerror = (event) => {\n      logger.error(`Error in read-write \"${name}\" transaction`);\n      logger.errorObject(event);\n      reject(new Error(`Error in read-write \"${name}\" transaction`));\n    };\n    transaction.oncomplete = () => {\n      resolve();\n    };\n  });\n  return [objectStore, promise];\n}\n\nasync function getReadOnlyObjectStoreAndTransactionPromise(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readonly');\n  const objectStore = transaction.objectStore(name);\n  const promise = new Promise((resolve, reject) => {\n    transaction.onabort = (event) => {\n      logger.error(`Read-write \"${name}\" transaction was aborted`);\n      logger.errorObject(event);\n      reject(new Error(`Read-write \"${name}\" transaction was aborted`));\n    };\n    transaction.onerror = (event) => {\n      logger.error(`Error in read-write \"${name}\" transaction`);\n      logger.errorObject(event);\n      reject(new Error(`Error in read-write \"${name}\" transaction`));\n    };\n    transaction.oncomplete = () => {\n      resolve();\n    };\n  });\n  return [objectStore, promise];\n}\n\n\nfunction getReadWriteJobsObjectStoreAndTransactionPromise() {\n  return getReadWriteObjectStoreAndTransactionPromise('jobs');\n}\n\nfunction getReadOnlyJobsObjectStoreAndTransactionPromise() {\n  return getReadOnlyObjectStoreAndTransactionPromise('jobs');\n}\n\nfunction getReadWriteArgLookupObjectStoreAndTransactionPromise() {\n  return getReadWriteObjectStoreAndTransactionPromise('arg-lookup');\n}\n\nfunction getReadWriteMetadataObjectStoreAndTransactionPromise() {\n  return getReadWriteObjectStoreAndTransactionPromise('metadata');\n}\n\nfunction removeJobFromObjectStore(store:IDBObjectStore, id:number, queueId:string) {\n  const deleteRequest = store.delete(id);\n  deleteRequest.onsuccess = function () {\n    localJobEmitter.emit('jobDelete', id, queueId);\n    jobEmitter.emit('jobDelete', id, queueId);\n    removeArgLookupsForJobAsMicrotask(id);\n  };\n  deleteRequest.onerror = function (event) {\n    logger.error(`Request error while removing job ${id} in queue ${queueId} from database`);\n    logger.errorObject(event);\n  };\n}\n\nasync function clearAllMetadataInDatabase() {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing queue data database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing queue data database'));\n    };\n  });\n}\n\nasync function clearJobsDatabase() {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing jobs database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing jobs database'));\n    };\n  });\n  localJobEmitter.emit('jobsClear');\n  jobEmitter.emit('jobsClear');\n}\n\nasync function clearCleanupsDatabase() {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing cleanups database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing cleanups database'));\n    };\n  });\n}\n\nexport async function clearDatabase() {\n  await clearJobsDatabase();\n  await clearCleanupsDatabase();\n  await clearAllMetadataInDatabase();\n}\n\nexport async function removeJobsWithQueueIdAndTypeFromDatabase(queueId:string, type:string) {\n  const [store, promise] = await getReadWriteJobsObjectStoreAndTransactionPromise();\n  const index = store.index('queueIdTypeIndex');\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.only([queueId, type]));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      removeJobFromObjectStore(store, id, queueId);\n    }\n  };\n  request.onerror = function (event) {\n    logger.error(`Request error while removing jobs with queue ${queueId} and type ${type} from jobs database`);\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nexport async function removeQueueIdFromJobsDatabase(queueId:string) {\n  const [store, promise] = await getReadWriteJobsObjectStoreAndTransactionPromise();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.only(queueId));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      removeJobFromObjectStore(store, id, queueId);\n    }\n  };\n  request.onerror = function (event) {\n    logger.error(`Request error while removing queue ${queueId} from jobs database`);\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nasync function removeQueueIdFromCleanupsDatabase(queueId:string) {\n  const store = await getReadWriteCleanupsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only(queueId));\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        store.delete(cursor.primaryKey);\n        cursor.continue();\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while removing queue ${queueId} from jobs database`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while removing queue ${queueId} from jobs database`));\n    };\n  });\n}\n\nexport async function removeQueueIdFromDatabase(queueId:string) {\n  await removeQueueIdFromJobsDatabase(queueId);\n  await removeQueueIdFromCleanupsDatabase(queueId);\n}\n\nexport async function removeCompletedExpiredItemsFromDatabase(maxAge:number) {\n  const [store, promise] = await getReadWriteJobsObjectStoreAndTransactionPromise();\n  const index = store.index('createdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.bound(0, Date.now() - maxAge));\n  request.onsuccess = function (event) {\n    for (const { id, queueId, status } of event.target.result) {\n      if (status !== JOB_COMPLETE_STATUS) {\n        continue;\n      }\n      removeJobFromObjectStore(store, id, queueId);\n    }\n  };\n  request.onerror = function (event) {\n    logger.error('Request error while removing completed exired items from jobs database');\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nexport async function updateJobInDatabase(id:number, transform:(Job | void) => Job | void | false):Promise<Job | void> {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      let newValue;\n      const value = request.result;\n      try {\n        newValue = transform(value);\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else if (newValue === false) {\n        if (typeof value !== 'undefined') {\n          const { queueId, type } = value;\n          const deleteRequest = store.delete(id);\n          deleteRequest.onsuccess = function () {\n            localJobEmitter.emit('jobDelete', id, queueId);\n            jobEmitter.emit('jobDelete', id, queueId);\n            removeArgLookupsForJobAsMicrotask(id);\n            resolve();\n          };\n          deleteRequest.onerror = function (event) {\n            logger.error(`Delete request error while updating job ${id} in queue ${queueId} and type ${type} in jobs database`);\n            logger.errorObject(event);\n            reject(new Error(`Delete request error while updating job ${id} in queue ${queueId} and type ${type} from jobs database`));\n          };\n        }\n      } else {\n        const putRequest = store.put(newValue);\n        const { queueId, type, status } = newValue;\n        putRequest.onsuccess = function () {\n          localJobEmitter.emit('jobUpdate', id, queueId, type, status);\n          jobEmitter.emit('jobUpdate', id, queueId, type, status);\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating job ${id} in queue ${queueId} and type ${type} in jobs database`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating job ${id} in queue ${queueId} and type ${type} from jobs database`));\n        };\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id}`));\n    };\n  });\n}\n\nexport async function getJobFromDatabase(id:number):Promise<Job | void> {\n  const store = await getReadOnlyJobsObjectStore();\n  const request = store.get(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id}`));\n    };\n  });\n}\n\nexport async function updateCleanupInDatabase(id:number, transform:(Cleanup | void) => Object):Promise<Cleanup | void> {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      let newValue;\n      try {\n        newValue = transform(request.result);\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else {\n        const putRequest = store.put(newValue);\n        putRequest.onsuccess = function () {\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating ${id} cleanup`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating ${id} cleanup`));\n        };\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id} cleanup`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id} cleanup`));\n    };\n  });\n}\n\nexport async function removePathFromCleanupDataInDatabase(id:number, path:Array<string>) {\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      return;\n    }\n    const { queueId, attempt, startAfter } = value;\n    const data = Object.assign({}, value.data);\n    unset(data, path);\n    return { // eslint-disable-line consistent-return\n      id,\n      queueId,\n      attempt,\n      startAfter,\n      data,\n    };\n  });\n}\n\n\nexport async function updateCleanupValuesInDatabase(id:number, queueId:string, data:Object) {\n  if (typeof id !== 'number') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof data !== 'object') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"data\" argument type \"${typeof data}\"`);\n  }\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    const combinedData = typeof value === 'undefined' ? data : merge({}, value.data, data);\n    return {\n      id,\n      queueId,\n      attempt: 0,\n      startAfter: Date.now(),\n      data: combinedData,\n    };\n  });\n}\n\nexport async function silentlyRemoveJobFromDatabase(id:number) {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.delete(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Delete request error while removing job ${id} from database`);\n      logger.errorObject(event);\n      reject(new Error(`Delete request error while removing job ${id} from database`));\n    };\n  });\n}\n\nexport async function removeJobFromDatabase(id:number) {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      const job = request.result;\n      if (typeof job === 'undefined') {\n        resolve();\n        return;\n      }\n      const { queueId, type } = job;\n      const deleteRequest = store.delete(id);\n      deleteRequest.onsuccess = function () {\n        localJobEmitter.emit('jobDelete', id, queueId);\n        jobEmitter.emit('jobDelete', id, queueId);\n        removeArgLookupsForJobAsMicrotask(id);\n        resolve();\n      };\n      deleteRequest.onerror = function (event) {\n        logger.error(`Delete request error while removing job ${id} in queue ${queueId} with type ${type} from database`);\n        logger.errorObject(event);\n        reject(new Error(`Delete request error while removing job ${id} in queue ${queueId} with type ${type} from database`));\n      };\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id} before removing from database`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id} before removing from database`));\n    };\n  });\n}\n\nexport async function removeCleanupFromDatabase(id:number) {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while removing cleanup data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Error while removing cleanup data for ${id}`));\n    };\n  });\n}\n\nexport async function getCleanupFromDatabase(id:number):Promise<Cleanup | void> {\n  const store = await getReadOnlyCleanupsObjectStore();\n  const request = store.get(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id}`));\n    };\n  });\n}\n\nexport async function getMetadataFromDatabase(id:string) {\n  const store = await getReadOnlyMetadataObjectStore();\n  const request = store.get(id);\n  const response = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id} metadata`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id} metadata`));\n    };\n  });\n  return typeof response !== 'undefined' ? response.metadata : undefined;\n}\n\nexport async function clearMetadataInDatabase(id:string) {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while clearing ${id} metadata`);\n      logger.errorObject(event);\n      reject(new Error(`Error while clearing ${id} metadata`));\n    };\n  });\n}\n\nexport async function setMetadataInDatabase(id:string, metadata:Object) {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.put({\n    id,\n    metadata,\n  });\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while setting ${id} metadata`);\n      logger.errorObject(event);\n      reject(new Error(`Error while setting ${id} metadata`));\n    };\n  });\n}\n\nexport async function updateMetadataInDatabase(id:string, metadata:Object) {\n  const [store, promise] = await getReadWriteMetadataObjectStoreAndTransactionPromise();\n  const request = store.get(id);\n  request.onsuccess = function () {\n    const response = request.result;\n    if (typeof response === 'undefined') {\n      const putRequest = store.put({\n        id,\n        metadata,\n      });\n      putRequest.onerror = function (event) {\n        logger.error(`Error in put request while updating ${id} metadata`);\n        logger.errorObject(event);\n      };\n    } else {\n      const putRequest = store.put({\n        id,\n        metadata: merge({}, response.metadata, metadata),\n      });\n      putRequest.onerror = function (event) {\n        logger.error(`Error in put request while updating ${id} metadata`);\n        logger.errorObject(event);\n      };\n    }\n  };\n  request.onerror = function (event) {\n    logger.error(`Error while updating ${id} metadata`);\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nexport function markJobStatusInDatabase(id:number, status:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to mark job ${id} as status ${status} in database, job does not exist`);\n    }\n    value.status = status; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport function markJobCompleteInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_COMPLETE_STATUS);\n}\n\nexport function markJobPendingInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_PENDING_STATUS);\n}\n\nexport function markJobErrorInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_ERROR_STATUS);\n}\n\nexport function markJobCleanupInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_CLEANUP_STATUS);\n}\n\nexport function markJobAbortedInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_ABORTED_STATUS);\n}\n\nexport function markJobCleanupAndRemoveInDatabase(id:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to mark job ${id} as status ${JOB_CLEANUP_AND_REMOVE_STATUS} in database, job does not exist`);\n    }\n    if (value.status === JOB_PENDING_STATUS) {\n      return false;\n    }\n    if (value.status === JOB_ABORTED_STATUS) {\n      return false;\n    }\n    value.status = JOB_CLEANUP_AND_REMOVE_STATUS; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport function markJobAsAbortedOrRemoveFromDatabase(id:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      return;\n    }\n    if (value.status === JOB_ERROR_STATUS) {\n      value.status = JOB_ABORTED_STATUS; // eslint-disable-line no-param-reassign\n      return value; // eslint-disable-line consistent-return\n    }\n    if (value.status === JOB_CLEANUP_STATUS) {\n      value.status = JOB_ABORTED_STATUS; // eslint-disable-line no-param-reassign\n      return value; // eslint-disable-line consistent-return\n    }\n    if (value.status === JOB_CLEANUP_AND_REMOVE_STATUS) {\n      return false; // eslint-disable-line consistent-return\n    }\n    throw new Error(`Unable to mark job ${id} as aborted or remove after cleanup, unable to handle status ${value.status}`);\n  });\n}\n\nexport function markJobStartAfterInDatabase(id:number, startAfter:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to mark job ${id} start-after time to ${new Date(startAfter).toLocaleString()} in database, job does not exist`);\n    }\n    if (startAfter < value.startAfter) {\n      return;\n    }\n    value.startAfter = startAfter; // eslint-disable-line no-param-reassign\n    return value; // eslint-disable-line consistent-return\n  });\n}\n\nexport function markCleanupStartAfterInDatabase(id:number, startAfter:number) {\n  return updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      throw new CleanupDoesNotExistError(`Unable to mark cleanup ${id} start-after time to ${new Date(startAfter).toLocaleString()} in database, cleanup does not exist`);\n    }\n    if (startAfter < value.startAfter) {\n      return;\n    }\n    value.startAfter = startAfter; // eslint-disable-line  no-param-reassign\n    return value; // eslint-disable-line consistent-return\n  });\n}\n\nexport async function markQueueForCleanupInDatabase(queueId:string) {\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only(queueId));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        const value = Object.assign({}, cursor.value);\n        switch (value.status) {\n          case JOB_ERROR_STATUS:\n            value.status = JOB_CLEANUP_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_COMPLETE_STATUS:\n            value.status = JOB_CLEANUP_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_PENDING_STATUS:\n            value.status = JOB_ABORTED_STATUS;\n            break;\n          case JOB_CLEANUP_STATUS:\n            cursor.continue();\n            return;\n          case JOB_ABORTED_STATUS:\n            cursor.continue();\n            return;\n          default:\n            logger.warn(`Unhandled job status ${value.status}`);\n            cursor.continue();\n            return;\n        }\n        const updateRequest = cursor.update(value);\n        updateRequest.onsuccess = function () {\n          localJobEmitter.emit('jobUpdate', value.id, value.queueId, value.type, value.status);\n          jobEmitter.emit('jobUpdate', value.id, value.queueId, value.type, value.status);\n          cursor.continue();\n        };\n        updateRequest.onerror = function (event2) {\n          logger.error(`Update request error while marking queue ${queueId} error`);\n          logger.errorObject(event2);\n          cursor.continue();\n        };\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while marking queue ${queueId} error`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while marking queue ${queueId} error`));\n    };\n  });\n  return jobs;\n}\n\nexport async function incrementJobAttemptInDatabase(id:number) {\n  await updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to increment attempts for job ${id} in database, job does not exist`);\n    }\n    value.attempt += 1; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport async function incrementCleanupAttemptInDatabase(id:number, queueId:string) {\n  let attempt = 1;\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      return {\n        id,\n        queueId,\n        attempt: 1,\n        startAfter: Date.now(),\n        data: {},\n      };\n    }\n    attempt = value.attempt + 1;\n    value.attempt = attempt; // eslint-disable-line no-param-reassign\n    return value;\n  });\n  return attempt;\n}\n\nexport async function bulkEnqueueToDatabase(queueId: string, items:Array<[string, Array<any>]>, delay: number) { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (!Array.isArray(items)) {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"items\" argument type \"${typeof items}\"`);\n  }\n  for (let i = 0; i < items.length; i += 1) {\n    const [type, args] = items[i];\n    if (typeof type !== 'string') {\n      throw new TypeError(`Unable to bulk enqueue in database, received invalid items[${i}] \"type\" argument type \"${typeof type}\"`);\n    }\n    if (!Array.isArray(args)) {\n      throw new TypeError(`Unable to bulk enqueue in database, received invalid items[${i}] \"args\" argument type \"${typeof args}\"`);\n    }\n  }\n  if (typeof delay !== 'number') {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"delay\" argument type \"${typeof delay}\"`);\n  }\n  const ids = [];\n  const store = await getReadWriteJobsObjectStore();\n  await new Promise((resolve, reject) => {\n    for (let i = 0; i < items.length; i += 1) {\n      const [type, args] = items[i];\n      const value = {\n        queueId,\n        type,\n        args,\n        attempt: 0,\n        created: Date.now(),\n        status: JOB_PENDING_STATUS,\n        startAfter: Date.now() + delay,\n      };\n      const request = store.put(value);\n      request.onsuccess = function () {\n        const id = request.result;\n        ids.push(request.result);\n        localJobEmitter.emit('jobAdd', id, queueId, type);\n        jobEmitter.emit('jobAdd', id, queueId, type);\n        resolve(request.result);\n      };\n      request.onerror = function (event) {\n        logger.error(`Request error while bulk enqueueing ${items.length} ${items.length === 1 ? 'job' : 'jobs'} in queue ${queueId}`);\n        logger.errorObject(event);\n        reject(new Error(`Request error while bulk enqueueing ${items.length} ${items.length === 1 ? 'job' : 'jobs'} in queue ${queueId}`));\n      };\n    }\n  });\n  return ids;\n}\n\nexport async function enqueueToDatabase(queueId: string, type: string, args: Array<any>, delay: number) { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof type !== 'string') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"type\" argument type \"${typeof type}\"`);\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"args\" argument type \"${typeof args}\"`);\n  }\n  if (typeof delay !== 'number') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"delay\" argument type \"${typeof delay}\"`);\n  }\n  const value = {\n    queueId,\n    type,\n    args,\n    attempt: 0,\n    created: Date.now(),\n    status: JOB_PENDING_STATUS,\n    startAfter: Date.now() + delay,\n  };\n  const store = await getReadWriteJobsObjectStore();\n\n  const request = store.put(value);\n  const id = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while enqueueing ${type} job`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while enqueueing ${type} job`));\n    };\n  });\n  localJobEmitter.emit('jobAdd', id, queueId, type);\n  jobEmitter.emit('jobAdd', id, queueId, type);\n  return id;\n}\n\nexport async function restoreJobToDatabaseForCleanupAndRemove(id:number, queueId: string, type: string, args: Array<any>) { // eslint-disable-line no-underscore-dangle\n  if (typeof id !== 'number') {\n    throw new TypeError(`Unable to restore to database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to restore to database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof type !== 'string') {\n    throw new TypeError(`Unable to restore to database, received invalid \"type\" argument type \"${typeof type}\"`);\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError(`Unable to restore to database, received invalid \"args\" argument type \"${typeof args}\"`);\n  }\n  const value = {\n    id,\n    queueId,\n    type,\n    args,\n    attempt: 1,\n    created: Date.now(),\n    status: JOB_CLEANUP_AND_REMOVE_STATUS,\n    startAfter: Date.now(),\n  };\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.put(value);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while enqueueing ${type} job`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while enqueueing ${type} job`));\n    };\n  });\n  localJobEmitter.emit('jobAdd', id, queueId, type);\n  jobEmitter.emit('jobAdd', id, queueId, type);\n  return id;\n}\n\nexport async function dequeueFromDatabase():Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.bound(JOB_CLEANUP_AND_REMOVE_STATUS, JOB_PENDING_STATUS));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error('Request error while dequeing');\n      logger.errorObject(event);\n      reject(new Error('Request error while dequeing'));\n    };\n  });\n  return jobs;\n}\n\nexport function getContiguousIds(ids:Array<number>) {\n  ids.sort((a, b) => a - b);\n  const points = [[0, ids[0] - 1]];\n  for (let i = 0; i < ids.length; i += 1) {\n    if (ids[i] + 1 !== ids[i + 1]) {\n      if (i + 1 >= ids.length) {\n        points.push([ids[i] + 1, Infinity]);\n      } else {\n        points.push([ids[i] + 1, ids[i + 1] - 1]);\n      }\n    }\n  }\n  return points;\n}\n\nexport async function dequeueFromDatabaseNotIn(ids:Array<number>):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (ids.length === 0) {\n    return dequeueFromDatabase();\n  }\n  const [store, promise] = await getReadOnlyJobsObjectStoreAndTransactionPromise();\n  const index = store.index('statusIndex');\n  const jobs = [];\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.bound(JOB_CLEANUP_AND_REMOVE_STATUS, JOB_PENDING_STATUS));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      if (ids.includes(id)) {\n        continue;\n      }\n      const getRequest = store.get(id);\n      getRequest.onsuccess = function () {\n        jobs.push(getRequest.result);\n      };\n      getRequest.onerror = function (event2) {\n        logger.error(`Request error while getting job ${id}`);\n        logger.errorObject(event2);\n      };\n    }\n  };\n  request.onerror = function (event) {\n    logger.error('Request error while dequeing');\n    logger.errorObject(event);\n  };\n  await promise;\n  return jobs;\n}\n\nexport async function getJobsInQueueFromDatabase(queueId: string):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to get jobs in queue from database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(queueId));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error('Request error while dequeing');\n      logger.errorObject(event);\n      reject(new Error('Request error while dequeing'));\n    };\n  });\n  return jobs;\n}\n\nexport async function getJobsInDatabase(jobIds: Array<number>):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (!Array.isArray(jobIds)) {\n    throw new TypeError(`Unable to get jobs from database, received invalid \"jobIds\" argument type \"${typeof jobIds}\"`);\n  }\n  const [store, promise] = await getReadOnlyJobsObjectStoreAndTransactionPromise();\n  const jobs = [];\n  for (const jobId of jobIds) {\n    const request = store.get(jobId);\n    request.onsuccess = function () {\n      if (typeof request.result !== 'undefined') {\n        jobs.push(request.result);\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting job ${jobId}`);\n      logger.errorObject(event);\n    };\n  }\n  await promise;\n  return jobs;\n}\n\nexport async function getCompletedJobsCountFromDatabase(queueId: string) { // eslint-disable-line no-underscore-dangle\n  const jobs = await getCompletedJobsFromDatabase(queueId);\n  return jobs.length;\n}\n\nexport async function getCompletedJobsFromDatabase(queueId: string):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to get completed jobs database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusQueueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only([queueId, JOB_COMPLETE_STATUS]));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        jobs.push(cursor.value);\n        cursor.continue();\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting completed jobs for queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting completed jobs for queue ${queueId}`));\n    };\n  });\n  return jobs;\n}\n\nexport async function storeAuthDataInDatabase(id:string, data: Object) { // eslint-disable-line no-underscore-dangle\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof data !== 'object') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"data\" argument type \"${typeof data}\"`);\n  }\n  const store = await getReadWriteAuthObjectStore();\n  const request = store.put({ id, data });\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while storing auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while storing auth data for ${id}`));\n    };\n  });\n}\n\nexport async function getAuthDataFromDatabase(id:string) {\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  const store = await getReadOnlyAuthObjectStore();\n  const request = store.get(id);\n  const authData = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting auth data for ${id}`));\n    };\n  });\n  return typeof authData !== 'undefined' ? authData.data : undefined;\n}\n\nexport async function removeAuthDataFromDatabase(id:string) {\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  const store = await getReadWriteAuthObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while removing auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Error while removing auth data for ${id}`));\n    };\n  });\n}\n\nexport async function getQueueStatus(queueId:string) {\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusQueueIdIndex');\n  // $FlowFixMe\n  const abortedRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_ABORTED_STATUS]));\n  // $FlowFixMe\n  const completeRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_COMPLETE_STATUS]));\n  // $FlowFixMe\n  const pendingRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_PENDING_STATUS]));\n  // $FlowFixMe\n  const errorRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_ERROR_STATUS]));\n  // $FlowFixMe\n  const cleanupRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_CLEANUP_STATUS]));\n  // $FlowFixMe\n  const cleanupAndRemoveRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_CLEANUP_AND_REMOVE_STATUS]));\n  const abortedCountPromise = new Promise((resolve, reject) => {\n    abortedRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    abortedRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const completeCountPromise = new Promise((resolve, reject) => {\n    completeRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    completeRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const pendingCountPromise = new Promise((resolve, reject) => {\n    pendingRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    pendingRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const errorCountPromise = new Promise((resolve, reject) => {\n    errorRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    errorRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const cleanupCountPromise = new Promise((resolve, reject) => {\n    cleanupRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    cleanupRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const cleanupAndRemoveCountPromise = new Promise((resolve, reject) => {\n    cleanupAndRemoveRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    cleanupAndRemoveRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const [\n    abortedCount,\n    completeCount,\n    pendingCount,\n    errorCount,\n    cleanupCount,\n    cleanupAndRemoveCount,\n  ] = await Promise.all([\n    abortedCountPromise,\n    completeCountPromise,\n    pendingCountPromise,\n    errorCountPromise,\n    cleanupCountPromise,\n    cleanupAndRemoveCountPromise,\n  ]);\n  if (abortedCount > 0 || cleanupCount > 0) {\n    return QUEUE_ERROR_STATUS;\n  }\n  if (errorCount > 0 || pendingCount > 0 || cleanupAndRemoveCount > 0) {\n    return QUEUE_PENDING_STATUS;\n  }\n  if (completeCount > 0) {\n    return QUEUE_COMPLETE_STATUS;\n  }\n  return QUEUE_EMPTY_STATUS;\n}\n\nexport async function addArgLookup(jobId:number, key:string, jsonPath:string) {\n  if (typeof jobId !== 'number') {\n    throw new TypeError(`Unable add argument lookup, received invalid \"jobId\" argument type \"${typeof jobId}\"`);\n  }\n  if (typeof key !== 'string') {\n    throw new TypeError(`Unable add argument lookup, received invalid \"key\" argument type \"${typeof key}\"`);\n  }\n  if (typeof jsonPath !== 'string') {\n    throw new TypeError(`Unable add argument lookup, received invalid \"jsonPath\" argument type \"${typeof jsonPath}\"`);\n  }\n  const store = await getReadWriteArgLookupObjectStore();\n  const request = store.put({\n    jobId,\n    key,\n    jsonPath,\n  });\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while adding argument lookup for job ${jobId} with key \"${key}\" and JSON path \"${jsonPath}\"`);\n      logger.errorObject(event);\n      reject(new Error(`Error while adding argument lookup for job ${jobId} with key \"${key}\" and JSON path \"${jsonPath}\"`));\n    };\n  });\n}\n\nexport async function getArgLookupJobPathMap(key:string) {\n  if (typeof key !== 'string') {\n    throw new TypeError(`Unable to lookup arguments, received invalid \"key\" argument type \"${typeof key}\"`);\n  }\n  const store = await getReadOnlyArgLookupObjectStore();\n  const index = store.index('keyIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(key));\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const map: Map<number, string> = new Map(event.target.result.map((x) => [x.jobId, x.jsonPath]));\n      resolve(map);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error looking up arguments for key ${key}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error looking up arguments for key ${key}`));\n    };\n  });\n}\n\n\nexport async function markJobsWithArgLookupKeyCleanupAndRemoveInDatabase(key:string) {\n  const map = await getArgLookupJobPathMap(key);\n  for (const jobId of map.keys()) {\n    await markJobCleanupAndRemoveInDatabase(jobId);\n  }\n}\n\nexport async function lookupArgs(key:string) {\n  const map = await getArgLookupJobPathMap(key);\n  if (map.size === 0) {\n    return [];\n  }\n  const jobs = await getJobsInDatabase([...map.keys()]);\n  const results = [];\n  for (const { id, args } of jobs) {\n    const jsonPath = map.get(id);\n    if (typeof jsonPath !== 'string') {\n      continue;\n    }\n    for (const result of JSONPath({ path: jsonPath, json: args })) {\n      results.push(result);\n    }\n  }\n  return results;\n}\n\nexport async function lookupArg(key:string) {\n  const results = await lookupArgs(key);\n  return results[0];\n}\n\nfunction removeArgLookupsForJobAsMicrotask(jobId:number) {\n  self.queueMicrotask(() => removeArgLookupsForJob(jobId).catch((error) => {\n    logger.error(`Unable to remove argument lookups for job ${jobId} in microtask`);\n    logger.errorStack(error);\n  }));\n}\n\nexport async function removeArgLookupsForJob(jobId:number) {\n  const [store, promise] = await getReadWriteArgLookupObjectStoreAndTransactionPromise();\n  const index = store.index('jobIdIndex');\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.only(jobId));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      const deleteRequest = store.delete(id);\n      deleteRequest.onerror = function (deleteEvent) {\n        logger.error(`Delete request error while removing argument lookups for job ${jobId}`);\n        logger.errorObject(deleteEvent);\n      };\n    }\n  };\n  request.onerror = function (event) {\n    logger.error(`Request error while removing argument lookups for job ${jobId}`);\n    logger.errorObject(event);\n  };\n  await promise;\n}\n"],"file":"database.js"}
{"version":3,"sources":["../../src/database.js"],"names":["JSONPath","merge","unset","uniq","EventEmitter","makeLogger","localJobEmitter","jobEmitter","logger","JobDoesNotExistError","Error","constructor","message","name","CleanupDoesNotExistError","QUEUE_ERROR_STATUS","QUEUE_PENDING_STATUS","QUEUE_COMPLETE_STATUS","QUEUE_EMPTY_STATUS","JOB_ABORTED_STATUS","JOB_COMPLETE_STATUS","JOB_PENDING_STATUS","JOB_ERROR_STATUS","JOB_CLEANUP_STATUS","JOB_CLEANUP_AND_REMOVE_STATUS","databasePromise","request","self","indexedDB","open","onupgradeneeded","e","store","target","result","createObjectStore","keyPath","autoIncrement","createIndex","unique","error","db","Promise","resolve","reject","onerror","onsuccess","event","getReadWriteObjectStore","database","transaction","durability","objectStore","onabort","errorObject","getReadOnlyObjectStore","getReadWriteArgLookupObjectStore","getReadOnlyArgLookupObjectStore","getReadWriteAuthObjectStore","getReadOnlyAuthObjectStore","getReadWriteMetadataObjectStore","getReadOnlyMetadataObjectStore","getReadWriteJobsObjectStore","getReadOnlyJobsObjectStore","getReadWriteCleanupsObjectStore","getReadOnlyCleanupsObjectStore","getReadWriteJobCleanupAndArgLookupStores","getReadOnlyObjectStoreAndTransactionPromise","promise","oncomplete","getReadOnlyJobsObjectStoreAndTransactionPromise","removeJobCleanupAndArgLookup","jobsObjectStore","cleanupsObjectStore","argLookupObjectStore","jobId","queueId","onSuccess","onError","jobDeleteRequest","delete","emit","cleanupDeleteRequest","argLookupJobIdIndex","index","argLookupJobRequest","getAllKeys","IDBKeyRange","only","id","argLookupDeleteRequest","deleteEvent","clearAllMetadataInDatabase","clear","commit","clearJobsDatabase","clearCleanupsDatabase","clearDatabase","removeJobsWithQueueIdAndTypeFromDatabase","type","jobIds","i","length","removeQueueFromDatabase","removeCompletedExpiredItemsFromDatabase","maxAge","getAll","bound","Date","now","jobs","updateJobInDatabase","transform","get","newValue","value","deleteRequest","removeArgLookupsAndCleanupsForJobAsMicrotask","status","putRequest","put","getJobFromDatabase","updateCleanupInDatabase","removePathFromCleanupDataInDatabase","path","attempt","startAfter","data","Object","assign","updateCleanupValuesInDatabase","TypeError","combinedData","silentlyRemoveJobFromDatabase","removeJobFromDatabase","job","removeCleanupFromDatabase","getCleanupFromDatabase","getMetadataFromDatabase","response","metadata","undefined","clearMetadataInDatabase","setMetadataInDatabase","updateMetadataInDatabase","markJobStatusInDatabase","markJobCompleteInDatabase","markJobPendingInDatabase","markJobErrorInDatabase","markJobCleanupInDatabase","markJobAbortedInDatabase","markJobCompleteThenRemoveFromDatabase","markJobCleanupAndRemoveInDatabase","markJobAsAbortedOrRemoveFromDatabase","markJobStartAfterInDatabase","toLocaleString","markCleanupStartAfterInDatabase","markQueueForCleanupInDatabase","lastRequest","push","warn","event2","markQueueJobsGreaterThanIdCleanupAndRemoveInDatabase","shouldRemove","markQueueForCleanupAndRemoveInDatabase","markQueueJobsGreaterThanIdPendingInDatabase","markQueuePendingInDatabase","getGreatestJobIdFromQueueInDatabase","openCursor","cursor","incrementJobAttemptInDatabase","incrementCleanupAttemptInDatabase","bulkEnqueueToDatabase","items","delay","Array","isArray","args","ids","created","enqueueToDatabase","restoreJobToDatabaseForCleanupAndRemove","dequeueFromDatabase","getContiguousIds","sort","a","b","points","Infinity","dequeueFromDatabaseNotIn","includes","getRequest","getJobsWithTypeFromDatabase","getJobsInQueueFromDatabase","getJobsInDatabase","getCompletedJobsCountFromDatabase","getCompletedJobsFromDatabase","storeAuthDataInDatabase","getAuthDataFromDatabase","authData","removeAuthDataFromDatabase","getQueueStatus","abortedRequest","completeRequest","pendingRequest","errorRequest","cleanupRequest","cleanupAndRemoveRequest","abortedCountPromise","completeCountPromise","pendingCountPromise","errorCountPromise","cleanupCountPromise","cleanupAndRemoveCountPromise","abortedCount","completeCount","pendingCount","errorCount","cleanupCount","cleanupAndRemoveCount","all","addArgLookup","key","jsonPath","getArgLookupJobPathMap","map","Map","x","markJobsWithArgLookupKeyCleanupAndRemoveInDatabase","lookupArgs","argLookupIndex","argLookupRequest","results","argLookupEvent","argLookups","jobRequest","json","lookupArg","jobsArgLookupsAndCleanupsToRemove","removeArgLookupsAndCleanupsForJob","slice","queueMicrotask","UNLOAD_DATA_ID","updateUnloadDataInDatabase","getUnloadDataFromDatabase","clearUnloadDataInDatabase"],"mappings":"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","sourcesContent":["// @flow\n\nimport { JSONPath } from 'jsonpath-plus';\nimport merge from 'lodash/merge';\nimport unset from 'lodash/unset';\nimport uniq from 'lodash/uniq';\nimport EventEmitter from 'events';\nimport makeLogger from './logger';\n\n// Local job emitter is for this process only,\n// jobEmitter is bridged when a MessagePort is open\nexport const localJobEmitter = new EventEmitter();\nexport const jobEmitter = new EventEmitter();\n\nconst logger = makeLogger('Jobs Database');\n\nexport class JobDoesNotExistError extends Error {\n  constructor(message:string) {\n    super(message);\n    this.name = 'JobDoesNotExistError';\n  }\n}\n\nexport class CleanupDoesNotExistError extends Error {\n  constructor(message:string) {\n    super(message);\n    this.name = 'CleanupDoesNotExistError';\n  }\n}\n\nexport type Job = {\n  id: number,\n  queueId:string,\n  type:string,\n  args:Array<any>,\n  attempt: number,\n  created: number,\n  status: number,\n  startAfter: number\n};\n\n\ntype Cleanup = {\n  id: number,\n  queueId:string,\n  data: Object,\n  attempt: number,\n  startAfter: number\n};\n\nexport const QUEUE_ERROR_STATUS = 0;\nexport const QUEUE_PENDING_STATUS = 1;\nexport const QUEUE_COMPLETE_STATUS = 2;\nexport const QUEUE_EMPTY_STATUS = 3;\n\nexport const JOB_ABORTED_STATUS = 2;\nexport const JOB_COMPLETE_STATUS = 1;\nexport const JOB_PENDING_STATUS = 0;\nexport const JOB_ERROR_STATUS = -1;\nexport const JOB_CLEANUP_STATUS = -2;\nexport const JOB_CLEANUP_AND_REMOVE_STATUS = -3;\n\nexport const databasePromise = (async () => {\n  const request = self.indexedDB.open('battery-queue-08', 1);\n\n  request.onupgradeneeded = function (e) {\n    try {\n      const store = e.target.result.createObjectStore('jobs', { keyPath: 'id', autoIncrement: true });\n      store.createIndex('statusIndex', 'status', { unique: false });\n      store.createIndex('queueIdIndex', 'queueId', { unique: false });\n      store.createIndex('queueIdTypeIndex', ['queueId', 'type'], { unique: false });\n      store.createIndex('typeIndex', 'type', { unique: false });\n      store.createIndex('statusQueueIdIndex', ['queueId', 'status'], { unique: false });\n      store.createIndex('statusCreatedIndex', ['status', 'created'], { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      e.target.result.createObjectStore('metadata', { keyPath: 'id' });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      const store = e.target.result.createObjectStore('cleanups', { keyPath: 'id' });\n      store.createIndex('queueIdIndex', 'queueId', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      e.target.result.createObjectStore('auth-data', { keyPath: 'id' });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      const store = e.target.result.createObjectStore('arg-lookup', { keyPath: 'id', autoIncrement: true });\n      store.createIndex('jobIdIndex', 'jobId', { unique: false });\n      store.createIndex('keyIndex', 'key', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n  };\n\n  const db = await new Promise((resolve, reject) => {\n    request.onerror = () => {\n      reject(new Error('Unable to open database'));\n    };\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n  });\n\n  return db;\n})();\n\nasync function getReadWriteObjectStore(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readwrite', { durability: 'relaxed' });\n  const objectStore = transaction.objectStore(name);\n  transaction.onabort = (event) => {\n    logger.error(`Read-write \"${name}\" transaction was aborted`);\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error(`Error in read-write \"${name}\" transaction`);\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyObjectStore(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readonly', { durability: 'relaxed' });\n  const objectStore = transaction.objectStore(name);\n  transaction.onabort = (event) => {\n    logger.error(`Read-only \"${name}\" transaction was aborted`);\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error(`Error in read-only \"${name}\" transaction`);\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nfunction getReadWriteArgLookupObjectStore() {\n  return getReadWriteObjectStore('arg-lookup');\n}\n\nfunction getReadOnlyArgLookupObjectStore() {\n  return getReadOnlyObjectStore('arg-lookup');\n}\n\nfunction getReadWriteAuthObjectStore() {\n  return getReadWriteObjectStore('auth-data');\n}\n\nfunction getReadOnlyAuthObjectStore() {\n  return getReadOnlyObjectStore('auth-data');\n}\n\nfunction getReadWriteMetadataObjectStore() {\n  return getReadWriteObjectStore('metadata');\n}\n\nfunction getReadOnlyMetadataObjectStore() {\n  return getReadOnlyObjectStore('metadata');\n}\n\nfunction getReadWriteJobsObjectStore() {\n  return getReadWriteObjectStore('jobs');\n}\n\nfunction getReadOnlyJobsObjectStore() {\n  return getReadOnlyObjectStore('jobs');\n}\n\nfunction getReadWriteCleanupsObjectStore() {\n  return getReadWriteObjectStore('cleanups');\n}\n\nfunction getReadOnlyCleanupsObjectStore() {\n  return getReadOnlyObjectStore('cleanups');\n}\n\nasync function getReadWriteJobCleanupAndArgLookupStores() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['jobs', 'cleanups', 'arg-lookup'], 'readwrite', { durability: 'relaxed' });\n  transaction.onabort = (event) => {\n    logger.error('Read-write \\'jobs\\', \\'cleanups\\', and \\'arg-lookup\\' transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-write \\'jobs\\', \\'cleanups\\', and \\'arg-lookup\\' transaction');\n    logger.errorObject(event);\n  };\n  return [transaction.objectStore('jobs'), transaction.objectStore('cleanups'), transaction.objectStore('arg-lookup')];\n}\n\nasync function getReadOnlyObjectStoreAndTransactionPromise(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readonly', { durability: 'relaxed' });\n  const objectStore = transaction.objectStore(name);\n  const promise = new Promise((resolve, reject) => {\n    transaction.onabort = (event) => {\n      logger.error(`Read-write \"${name}\" transaction was aborted`);\n      logger.errorObject(event);\n      reject(new Error(`Read-write \"${name}\" transaction was aborted`));\n    };\n    transaction.onerror = (event) => {\n      logger.error(`Error in read-write \"${name}\" transaction`);\n      logger.errorObject(event);\n      reject(new Error(`Error in read-write \"${name}\" transaction`));\n    };\n    transaction.oncomplete = () => {\n      resolve();\n    };\n  });\n  return [objectStore, promise];\n}\n\n\nfunction getReadOnlyJobsObjectStoreAndTransactionPromise() {\n  return getReadOnlyObjectStoreAndTransactionPromise('jobs');\n}\n\n\nfunction removeJobCleanupAndArgLookup(jobsObjectStore:IDBObjectStore, cleanupsObjectStore:IDBObjectStore, argLookupObjectStore:IDBObjectStore, jobId:number, queueId:string, onSuccess?:() => void, onError?:(Error) => void) {\n  const jobDeleteRequest = jobsObjectStore.delete(jobId);\n  localJobEmitter.emit('jobDelete', jobId, queueId);\n  jobEmitter.emit('jobDelete', jobId, queueId);\n  jobDeleteRequest.onerror = function (event) {\n    logger.error(`Request error while removing job ${jobId} in queue ${queueId} from database`);\n    logger.errorObject(event);\n    if (typeof onError === 'function') {\n      onError(new Error(`Request error while removing job ${jobId} in queue ${queueId} from database`));\n    }\n  };\n  const cleanupDeleteRequest = cleanupsObjectStore.delete(jobId);\n  cleanupDeleteRequest.onerror = function (event) {\n    logger.error(`Request error while removing cleanup for job ${jobId} in queue ${queueId} from database`);\n    logger.errorObject(event);\n    if (typeof onError === 'function') {\n      onError(new Error(`Request error while removing cleanup for job ${jobId} in queue ${queueId} from database`));\n    }\n  };\n  const argLookupJobIdIndex = argLookupObjectStore.index('jobIdIndex');\n  // $FlowFixMe\n  const argLookupJobRequest = argLookupJobIdIndex.getAllKeys(IDBKeyRange.only(jobId));\n  argLookupJobRequest.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      const argLookupDeleteRequest = argLookupObjectStore.delete(id);\n      argLookupDeleteRequest.onerror = function (deleteEvent) {\n        logger.error(`Delete request error while removing argument lookups for job ${jobId} in queue ${queueId} from database`);\n        logger.errorObject(deleteEvent);\n        if (typeof onError === 'function') {\n          onError(new Error(`Delete request error while removing argument lookups for job ${jobId} in queue ${queueId} from database`));\n        }\n      };\n    }\n    if (typeof onSuccess === 'function') {\n      onSuccess();\n    }\n  };\n  argLookupJobRequest.onerror = function (event) {\n    logger.error(`Request error while removing argument lookups for job ${jobId} in queue ${queueId} from database`);\n    logger.errorObject(event);\n    if (typeof onError === 'function') {\n      onError(new Error(`Request error while removing argument lookups for job ${jobId} in queue ${queueId} from database`));\n    }\n  };\n}\n\nasync function clearAllMetadataInDatabase() {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing queue data database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing queue data database'));\n    };\n    store.transaction.commit();\n  });\n}\n\nasync function clearJobsDatabase() {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.clear();\n  localJobEmitter.emit('jobsClear');\n  jobEmitter.emit('jobsClear');\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing jobs database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing jobs database'));\n    };\n    store.transaction.commit();\n  });\n}\n\nasync function clearCleanupsDatabase() {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing cleanups database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing cleanups database'));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function clearDatabase() {\n  await clearJobsDatabase();\n  await clearCleanupsDatabase();\n  await clearAllMetadataInDatabase();\n}\n\nexport async function removeJobsWithQueueIdAndTypeFromDatabase(queueId:string, type:string) {\n  const [jobsObjectStore, cleanupsObjectStore, argLookupObjectStore] = await getReadWriteJobCleanupAndArgLookupStores();\n  const index = jobsObjectStore.index('queueIdTypeIndex');\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.only([queueId, type]));\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const jobIds = event.target.result;\n      for (let i = 0; i < jobIds.length; i += 1) {\n        const jobId = jobIds[i];\n        if (i === jobIds.length - 1) {\n          removeJobCleanupAndArgLookup(jobsObjectStore, cleanupsObjectStore, argLookupObjectStore, jobId, queueId, resolve, reject);\n        } else {\n          removeJobCleanupAndArgLookup(jobsObjectStore, cleanupsObjectStore, argLookupObjectStore, jobId, queueId);\n        }\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while removing jobs with queue ${queueId} and type ${type} from jobs database`);\n      logger.errorObject(event);\n    };\n  });\n}\n\nexport async function removeQueueFromDatabase(queueId:string) {\n  const [jobsObjectStore, cleanupsObjectStore, argLookupObjectStore] = await getReadWriteJobCleanupAndArgLookupStores();\n  const index = jobsObjectStore.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.only(queueId));\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const jobIds = event.target.result;\n      for (let i = 0; i < jobIds.length; i += 1) {\n        const jobId = jobIds[i];\n        if (i === jobIds.length - 1) {\n          removeJobCleanupAndArgLookup(jobsObjectStore, cleanupsObjectStore, argLookupObjectStore, jobId, queueId, () => {\n            jobsObjectStore.transaction.commit();\n            resolve();\n          }, reject);\n        } else {\n          removeJobCleanupAndArgLookup(jobsObjectStore, cleanupsObjectStore, argLookupObjectStore, jobId, queueId);\n        }\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while removing queue ${queueId} from jobs database`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while removing queue ${queueId} from jobs database`));\n    };\n  });\n}\n\nexport async function removeCompletedExpiredItemsFromDatabase(maxAge:number) {\n  const [jobsObjectStore, cleanupsObjectStore, argLookupObjectStore] = await getReadWriteJobCleanupAndArgLookupStores();\n  const index = jobsObjectStore.index('statusCreatedIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.bound([JOB_COMPLETE_STATUS, 0], [JOB_COMPLETE_STATUS, Date.now() - maxAge]));\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const jobs = event.target.result;\n      for (let i = 0; i < jobs.length; i += 1) {\n        const { id: jobId, queueId } = jobs[i];\n        if (i === jobs.length - 1) {\n          removeJobCleanupAndArgLookup(jobsObjectStore, cleanupsObjectStore, argLookupObjectStore, jobId, queueId, () => {\n            jobsObjectStore.transaction.commit();\n            resolve();\n          }, reject);\n        } else {\n          removeJobCleanupAndArgLookup(jobsObjectStore, cleanupsObjectStore, argLookupObjectStore, jobId, queueId);\n        }\n      }\n      if (jobs.length === 0) {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while removing completed jobs with age > ${maxAge}ms`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while removing completed jobs with age > ${maxAge}ms`));\n    };\n  });\n}\n\nexport async function updateJobInDatabase(id:number, transform:(Job | void) => Job | void | false):Promise<Job | void> {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      let newValue;\n      const value = request.result;\n      try {\n        newValue = transform(value);\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else if (newValue === false) {\n        if (typeof value !== 'undefined') {\n          const { queueId, type } = value;\n          const deleteRequest = store.delete(id);\n          localJobEmitter.emit('jobDelete', id, queueId);\n          jobEmitter.emit('jobDelete', id, queueId);\n          deleteRequest.onsuccess = function () {\n            removeArgLookupsAndCleanupsForJobAsMicrotask(id);\n            resolve();\n          };\n          deleteRequest.onerror = function (event) {\n            logger.error(`Delete request error while updating job ${id} in queue ${queueId} and type ${type} in jobs database`);\n            logger.errorObject(event);\n            reject(new Error(`Delete request error while updating job ${id} in queue ${queueId} and type ${type} from jobs database`));\n          };\n        }\n      } else {\n        const { queueId, type, status } = newValue;\n        const putRequest = store.put(newValue);\n        localJobEmitter.emit('jobUpdate', id, queueId, type, status);\n        jobEmitter.emit('jobUpdate', id, queueId, type, status);\n        putRequest.onsuccess = function () {\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating job ${id} in queue ${queueId} and type ${type} in jobs database`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating job ${id} in queue ${queueId} and type ${type} from jobs database`));\n        };\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id}`));\n    };\n  });\n}\n\nexport async function getJobFromDatabase(id:number):Promise<Job | void> {\n  const store = await getReadOnlyJobsObjectStore();\n  const request = store.get(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function updateCleanupInDatabase(id:number, transform:(Cleanup | void) => Object):Promise<Cleanup | void> {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      let newValue;\n      try {\n        newValue = transform(request.result);\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else {\n        const putRequest = store.put(newValue);\n        putRequest.onsuccess = function () {\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating ${id} cleanup`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating ${id} cleanup`));\n        };\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id} cleanup`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id} cleanup`));\n    };\n  });\n}\n\nexport async function removePathFromCleanupDataInDatabase(id:number, path:Array<string>) {\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      return;\n    }\n    const { queueId, attempt, startAfter } = value;\n    const data = Object.assign({}, value.data);\n    unset(data, path);\n    return { // eslint-disable-line consistent-return\n      id,\n      queueId,\n      attempt,\n      startAfter,\n      data,\n    };\n  });\n}\n\n\nexport async function updateCleanupValuesInDatabase(id:number, queueId:string, data:Object) {\n  if (typeof id !== 'number') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof data !== 'object') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"data\" argument type \"${typeof data}\"`);\n  }\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    const combinedData = typeof value === 'undefined' ? data : merge({}, value.data, data);\n    return {\n      id,\n      queueId,\n      attempt: 0,\n      startAfter: Date.now(),\n      data: combinedData,\n    };\n  });\n}\n\nexport async function silentlyRemoveJobFromDatabase(id:number) {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.delete(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Delete request error while removing job ${id} from database`);\n      logger.errorObject(event);\n      reject(new Error(`Delete request error while removing job ${id} from database`));\n    };\n    store.transaction.commit();\n  });\n}\n\n\nexport async function removeJobFromDatabase(jobId:number) {\n  const [jobsObjectStore, cleanupsObjectStore, argLookupObjectStore] = await getReadWriteJobCleanupAndArgLookupStores();\n  const request = jobsObjectStore.get(jobId);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      const job = request.result;\n      if (typeof job === 'undefined') {\n        resolve();\n        jobsObjectStore.transaction.commit();\n        return;\n      }\n      removeJobCleanupAndArgLookup(jobsObjectStore, cleanupsObjectStore, argLookupObjectStore, job.id, job.queueId, () => {\n        resolve();\n      }, reject);\n      jobsObjectStore.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting job ${jobId} before removing from database`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting job ${jobId} before removing from database`));\n    };\n  });\n}\n\nexport async function removeCleanupFromDatabase(id:number) {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while removing cleanup data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Error while removing cleanup data for ${id}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getCleanupFromDatabase(id:number):Promise<Cleanup | void> {\n  const store = await getReadOnlyCleanupsObjectStore();\n  const request = store.get(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getMetadataFromDatabase(id:string) {\n  const store = await getReadOnlyMetadataObjectStore();\n  const request = store.get(id);\n  const response = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id} metadata`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id} metadata`));\n    };\n    store.transaction.commit();\n  });\n  return typeof response !== 'undefined' ? response.metadata : undefined;\n}\n\nexport async function clearMetadataInDatabase(id:string) {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while clearing ${id} metadata`);\n      logger.errorObject(event);\n      reject(new Error(`Error while clearing ${id} metadata`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function setMetadataInDatabase(id:string, metadata:Object) {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.put({\n    id,\n    metadata,\n  });\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while setting ${id} metadata`);\n      logger.errorObject(event);\n      reject(new Error(`Error while setting ${id} metadata`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function updateMetadataInDatabase(id:string, transform:(Object | void) => Object | void | false):Promise<Object | void> {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      let newValue;\n      const response = request.result;\n      const value = typeof response !== 'undefined' ? response.metadata : undefined;\n      try {\n        newValue = transform(value);\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else if (newValue === false) {\n        if (typeof value !== 'undefined') {\n          const deleteRequest = store.delete(id);\n          deleteRequest.onsuccess = function () {\n            resolve();\n          };\n          deleteRequest.onerror = function (event) {\n            logger.error(`Delete request error while updating ${id} in metadata database`);\n            logger.errorObject(event);\n            reject(new Error(`Delete request error while updating ${id} in metadata database`));\n          };\n        }\n      } else {\n        const putRequest = store.put({\n          id,\n          metadata: newValue,\n        });\n        putRequest.onsuccess = function () {\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating ${id} in metadata database`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating ${id} in metadata database`));\n        };\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id} in metadata database`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id} in metadata database`));\n    };\n  });\n}\n\nexport function markJobStatusInDatabase(id:number, status:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to mark job ${id} as status ${status} in database, job does not exist`);\n    }\n    value.status = status; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport function markJobCompleteInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_COMPLETE_STATUS);\n}\n\nexport function markJobPendingInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_PENDING_STATUS);\n}\n\nexport function markJobErrorInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_ERROR_STATUS);\n}\n\nexport function markJobCleanupInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_CLEANUP_STATUS);\n}\n\nexport function markJobAbortedInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_ABORTED_STATUS);\n}\n\nexport async function markJobCompleteThenRemoveFromDatabase(id:number):Promise<void> {\n  const [jobsObjectStore, cleanupsObjectStore, argLookupObjectStore] = await getReadWriteJobCleanupAndArgLookupStores();\n  const request = jobsObjectStore.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      const value = request.result;\n      if (typeof value !== 'undefined') {\n        const { queueId, type } = value;\n        localJobEmitter.emit('jobUpdate', id, queueId, type, JOB_COMPLETE_STATUS);\n        jobEmitter.emit('jobUpdate', id, queueId, type, JOB_COMPLETE_STATUS);\n        removeJobCleanupAndArgLookup(jobsObjectStore, cleanupsObjectStore, argLookupObjectStore, id, queueId, () => {\n          jobsObjectStore.transaction.commit();\n          resolve();\n        });\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while marking job ${id} complete then removing from jobs database`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while marking job ${id} complete then removing from jobs database`));\n    };\n  });\n}\n\nexport function markJobCleanupAndRemoveInDatabase(id:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to mark job ${id} as status ${JOB_CLEANUP_AND_REMOVE_STATUS} in database, job does not exist`);\n    }\n    if (value.status === JOB_PENDING_STATUS) {\n      return false;\n    }\n    if (value.status === JOB_ABORTED_STATUS) {\n      return false;\n    }\n    value.status = JOB_CLEANUP_AND_REMOVE_STATUS; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport function markJobAsAbortedOrRemoveFromDatabase(id:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      return;\n    }\n    if (value.status === JOB_ERROR_STATUS) {\n      value.status = JOB_ABORTED_STATUS; // eslint-disable-line no-param-reassign\n      return value; // eslint-disable-line consistent-return\n    }\n    if (value.status === JOB_CLEANUP_STATUS) {\n      value.status = JOB_ABORTED_STATUS; // eslint-disable-line no-param-reassign\n      return value; // eslint-disable-line consistent-return\n    }\n    if (value.status === JOB_CLEANUP_AND_REMOVE_STATUS) {\n      return false; // eslint-disable-line consistent-return\n    }\n    throw new Error(`Unable to mark job ${id} as aborted or remove after cleanup, unable to handle status ${value.status}`);\n  });\n}\n\nexport function markJobStartAfterInDatabase(id:number, startAfter:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to mark job ${id} start-after time to ${new Date(startAfter).toLocaleString()} in database, job does not exist`);\n    }\n    if (startAfter < value.startAfter) {\n      return;\n    }\n    value.startAfter = startAfter; // eslint-disable-line no-param-reassign\n    return value; // eslint-disable-line consistent-return\n  });\n}\n\nexport function markCleanupStartAfterInDatabase(id:number, startAfter:number) {\n  return updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      throw new CleanupDoesNotExistError(`Unable to mark cleanup ${id} start-after time to ${new Date(startAfter).toLocaleString()} in database, cleanup does not exist`);\n    }\n    if (startAfter < value.startAfter) {\n      return;\n    }\n    value.startAfter = startAfter; // eslint-disable-line  no-param-reassign\n    return value; // eslint-disable-line consistent-return\n  });\n}\n\nexport async function markQueueForCleanupInDatabase(queueId:string) {\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(queueId));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const length = event.target.result.length;\n      let lastRequest;\n      for (let i = 0; i < length; i += 1) {\n        const value = Object.assign({}, event.target.result[i]);\n        switch (value.status) {\n          case JOB_ERROR_STATUS:\n            value.status = JOB_CLEANUP_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_COMPLETE_STATUS:\n            value.status = JOB_CLEANUP_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_PENDING_STATUS:\n            value.status = JOB_ABORTED_STATUS;\n            break;\n          case JOB_CLEANUP_STATUS:\n            jobs.push(value);\n            continue;\n          case JOB_CLEANUP_AND_REMOVE_STATUS:\n            jobs.push(value);\n            continue;\n          case JOB_ABORTED_STATUS:\n            continue;\n          default:\n            logger.warn(`Unhandled job status ${value.status} while marking queue ${queueId} for cleanup`);\n            continue;\n        }\n        const putRequest = store.put(value);\n        localJobEmitter.emit('jobUpdate', value.id, value.queueId, value.type, value.status);\n        jobEmitter.emit('jobUpdate', value.id, value.queueId, value.type, value.status);\n        lastRequest = putRequest;\n        putRequest.onerror = function (event2) {\n          logger.error(`Put request error while marking queue ${queueId} for cleanup`);\n          logger.errorObject(event2);\n          reject(new Error(`Put request error while marking queue ${queueId} for cleanup`));\n        };\n      }\n      if (typeof lastRequest !== 'undefined') {\n        lastRequest.onsuccess = function () {\n          resolve();\n        };\n      } else {\n        resolve();\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while marking queue ${queueId} for cleanup`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while marking queue ${queueId} for cleanup`));\n    };\n  });\n  return jobs;\n}\n\nexport async function markQueueJobsGreaterThanIdCleanupAndRemoveInDatabase(queueId:string, jobId:number) {\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(queueId));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const length = event.target.result.length;\n      let lastRequest;\n      for (let i = 0; i < length; i += 1) {\n        const value = Object.assign({}, event.target.result[i]);\n        if (value.id <= jobId) {\n          continue;\n        }\n        let shouldRemove = false;\n        switch (value.status) {\n          case JOB_ERROR_STATUS:\n            value.status = JOB_CLEANUP_AND_REMOVE_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_COMPLETE_STATUS:\n            value.status = JOB_CLEANUP_AND_REMOVE_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_PENDING_STATUS:\n            shouldRemove = true;\n            break;\n          case JOB_CLEANUP_STATUS:\n            value.status = JOB_CLEANUP_AND_REMOVE_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_CLEANUP_AND_REMOVE_STATUS:\n            jobs.push(value);\n            continue;\n          case JOB_ABORTED_STATUS:\n            shouldRemove = true;\n            break;\n          default:\n            logger.warn(`Unhandled job status ${value.status} while marking queue ${queueId} for cleanup and removal`);\n            continue;\n        }\n        const { id, type, status } = value;\n        if (shouldRemove) {\n          const deleteRequest = store.delete(id);\n          localJobEmitter.emit('jobDelete', id, queueId);\n          jobEmitter.emit('jobDelete', id, queueId);\n          removeArgLookupsAndCleanupsForJobAsMicrotask(id);\n          lastRequest = deleteRequest;\n          deleteRequest.onerror = function (event2) {\n            logger.error(`Delete request error while marking queue ${queueId} for cleanup and removal`);\n            logger.errorObject(event2);\n            reject(new Error(`Delete request error while marking queue ${queueId} for cleanup and removal`));\n          };\n        } else {\n          const putRequest = store.put(value);\n          localJobEmitter.emit('jobUpdate', id, queueId, type, status);\n          jobEmitter.emit('jobUpdate', id, queueId, type, status);\n          lastRequest = putRequest;\n          putRequest.onerror = function (event2) {\n            logger.error(`Put request error while marking queue ${queueId} for cleanup and removal`);\n            logger.errorObject(event2);\n            reject(new Error(`Put request error while marking queue ${queueId} for cleanup and removal`));\n          };\n        }\n      }\n      if (typeof lastRequest !== 'undefined') {\n        lastRequest.onsuccess = function () {\n          resolve();\n        };\n      } else {\n        resolve();\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while marking queue ${queueId} for cleanup and removal`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while marking queue ${queueId} for cleanup and removal`));\n    };\n  });\n  return jobs;\n}\n\nexport function markQueueForCleanupAndRemoveInDatabase(queueId:string) {\n  return markQueueJobsGreaterThanIdCleanupAndRemoveInDatabase(queueId, -1);\n}\n\nexport async function markQueueJobsGreaterThanIdPendingInDatabase(queueId:string, jobId:number) {\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(queueId));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const length = event.target.result.length;\n      let lastRequest;\n      for (let i = 0; i < length; i += 1) {\n        const value = Object.assign({}, event.target.result[i]);\n        if (value.id <= jobId) {\n          continue;\n        }\n        switch (value.status) {\n          case JOB_ERROR_STATUS:\n            value.attempt = 0;\n            jobs.push(value);\n            break;\n          case JOB_COMPLETE_STATUS:\n            continue;\n          case JOB_PENDING_STATUS:\n            value.attempt = 0;\n            jobs.push(value);\n            break;\n          case JOB_CLEANUP_STATUS:\n            value.attempt = 0;\n            jobs.push(value);\n            break;\n          case JOB_CLEANUP_AND_REMOVE_STATUS:\n            jobs.push(value);\n            continue;\n          case JOB_ABORTED_STATUS:\n            value.attempt = 0;\n            value.status = JOB_PENDING_STATUS;\n            jobs.push(value);\n            break;\n          default:\n            logger.warn(`Unhandled job status ${value.status} while marking queue ${queueId} as pending`);\n            continue;\n        }\n        const { id, type, status } = value;\n        const putRequest = store.put(value);\n        localJobEmitter.emit('jobUpdate', id, queueId, type, status);\n        jobEmitter.emit('jobUpdate', id, queueId, type, status);\n        lastRequest = putRequest;\n        putRequest.onerror = function (event2) {\n          logger.error(`Put request error while marking queue ${queueId} as pending`);\n          logger.errorObject(event2);\n          reject(new Error(`Put request error while marking queue ${queueId} as pending`));\n        };\n      }\n      if (typeof lastRequest !== 'undefined') {\n        lastRequest.onsuccess = function () {\n          resolve();\n        };\n      } else {\n        resolve();\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while marking queue ${queueId} as pending`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while marking queue ${queueId} as pending`));\n    };\n  });\n  return jobs;\n}\n\n\nexport function markQueuePendingInDatabase(queueId:string) {\n  return markQueueJobsGreaterThanIdPendingInDatabase(queueId, -1);\n}\n\nexport async function getGreatestJobIdFromQueueInDatabase(queueId:string) {\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only(queueId), 'prev');\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        resolve(cursor.value.id || 0);\n      } else {\n        resolve(0);\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting the greatest job ID in queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting the greatest job ID in queue ${queueId}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function incrementJobAttemptInDatabase(id:number) {\n  await updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to increment attempts for job ${id} in database, job does not exist`);\n    }\n    value.attempt += 1; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport async function incrementCleanupAttemptInDatabase(id:number, queueId:string) {\n  let attempt = 1;\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      return {\n        id,\n        queueId,\n        attempt: 1,\n        startAfter: Date.now(),\n        data: {},\n      };\n    }\n    attempt = value.attempt + 1;\n    value.attempt = attempt; // eslint-disable-line no-param-reassign\n    return value;\n  });\n  return attempt;\n}\n\nexport async function bulkEnqueueToDatabase(queueId: string, items:Array<[string, Array<any>]>, delay: number) { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (!Array.isArray(items)) {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"items\" argument type \"${typeof items}\"`);\n  }\n  for (let i = 0; i < items.length; i += 1) {\n    const [type, args] = items[i];\n    if (typeof type !== 'string') {\n      throw new TypeError(`Unable to bulk enqueue in database, received invalid items[${i}] \"type\" argument type \"${typeof type}\"`);\n    }\n    if (!Array.isArray(args)) {\n      throw new TypeError(`Unable to bulk enqueue in database, received invalid items[${i}] \"args\" argument type \"${typeof args}\"`);\n    }\n  }\n  if (typeof delay !== 'number') {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"delay\" argument type \"${typeof delay}\"`);\n  }\n  const ids = [];\n  const store = await getReadWriteJobsObjectStore();\n  await new Promise((resolve, reject) => {\n    for (let i = 0; i < items.length; i += 1) {\n      const [type, args] = items[i];\n      const value = {\n        queueId,\n        type,\n        args,\n        attempt: 0,\n        created: Date.now(),\n        status: JOB_PENDING_STATUS,\n        startAfter: Date.now() + delay,\n      };\n      const request = store.put(value);\n      request.onsuccess = function () {\n        const id = request.result;\n        ids.push(request.result);\n        localJobEmitter.emit('jobAdd', id, queueId, type);\n        jobEmitter.emit('jobAdd', id, queueId, type);\n        resolve(request.result);\n      };\n      request.onerror = function (event) {\n        logger.error(`Request error while bulk enqueueing ${items.length} ${items.length === 1 ? 'job' : 'jobs'} in queue ${queueId}`);\n        logger.errorObject(event);\n        reject(new Error(`Request error while bulk enqueueing ${items.length} ${items.length === 1 ? 'job' : 'jobs'} in queue ${queueId}`));\n      };\n    }\n    store.transaction.commit();\n  });\n  return ids;\n}\n\nexport async function enqueueToDatabase(queueId: string, type: string, args: Array<any>, delay: number) { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof type !== 'string') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"type\" argument type \"${typeof type}\"`);\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"args\" argument type \"${typeof args}\"`);\n  }\n  if (typeof delay !== 'number') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"delay\" argument type \"${typeof delay}\"`);\n  }\n  const value = {\n    queueId,\n    type,\n    args,\n    attempt: 0,\n    created: Date.now(),\n    status: JOB_PENDING_STATUS,\n    startAfter: Date.now() + delay,\n  };\n  const store = await getReadWriteJobsObjectStore();\n\n  const request = store.put(value);\n  const id = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while enqueueing ${type} job`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while enqueueing ${type} job`));\n    };\n    store.transaction.commit();\n  });\n  localJobEmitter.emit('jobAdd', id, queueId, type);\n  jobEmitter.emit('jobAdd', id, queueId, type);\n  return id;\n}\n\nexport async function restoreJobToDatabaseForCleanupAndRemove(id:number, queueId: string, type: string, args: Array<any>) { // eslint-disable-line no-underscore-dangle\n  if (typeof id !== 'number') {\n    throw new TypeError(`Unable to restore to database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to restore to database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof type !== 'string') {\n    throw new TypeError(`Unable to restore to database, received invalid \"type\" argument type \"${typeof type}\"`);\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError(`Unable to restore to database, received invalid \"args\" argument type \"${typeof args}\"`);\n  }\n  const value = {\n    id,\n    queueId,\n    type,\n    args,\n    attempt: 1,\n    created: Date.now(),\n    status: JOB_CLEANUP_AND_REMOVE_STATUS,\n    startAfter: Date.now(),\n  };\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.put(value);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while enqueueing ${type} job`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while enqueueing ${type} job`));\n    };\n    store.transaction.commit();\n  });\n  localJobEmitter.emit('jobAdd', id, queueId, type);\n  jobEmitter.emit('jobAdd', id, queueId, type);\n  return id;\n}\n\nexport async function dequeueFromDatabase():Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.bound(JOB_CLEANUP_AND_REMOVE_STATUS, JOB_PENDING_STATUS));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error('Request error while dequeing');\n      logger.errorObject(event);\n      reject(new Error('Request error while dequeing'));\n    };\n    store.transaction.commit();\n  });\n  return jobs;\n}\n\nexport function getContiguousIds(ids:Array<number>) {\n  ids.sort((a, b) => a - b);\n  const points = [[0, ids[0] - 1]];\n  for (let i = 0; i < ids.length; i += 1) {\n    if (ids[i] + 1 !== ids[i + 1]) {\n      if (i + 1 >= ids.length) {\n        points.push([ids[i] + 1, Infinity]);\n      } else {\n        points.push([ids[i] + 1, ids[i + 1] - 1]);\n      }\n    }\n  }\n  return points;\n}\n\nexport async function dequeueFromDatabaseNotIn(ids:Array<number>):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (ids.length === 0) {\n    return dequeueFromDatabase();\n  }\n  const [store, promise] = await getReadOnlyJobsObjectStoreAndTransactionPromise();\n  const index = store.index('statusIndex');\n  const jobs = [];\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.bound(JOB_CLEANUP_AND_REMOVE_STATUS, JOB_PENDING_STATUS));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      if (ids.includes(id)) {\n        continue;\n      }\n      const getRequest = store.get(id);\n      getRequest.onsuccess = function () {\n        jobs.push(getRequest.result);\n      };\n      getRequest.onerror = function (event2) {\n        logger.error(`Request error while getting job ${id}`);\n        logger.errorObject(event2);\n      };\n    }\n    store.transaction.commit();\n  };\n  request.onerror = function (event) {\n    logger.error('Request error while dequeing');\n    logger.errorObject(event);\n  };\n  await promise;\n  return jobs;\n}\n\nexport async function getJobsWithTypeFromDatabase(type:string):Promise<Array<Job>> {\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('typeIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(type));\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting jobs with type ${type} from jobs database`);\n      logger.errorObject(event);\n      reject(new Error(`Error while getting jobs with type ${type} from jobs database`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getJobsInQueueFromDatabase(queueId: string):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to get jobs in queue from database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(queueId));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error('Request error while dequeing');\n      logger.errorObject(event);\n      reject(new Error('Request error while dequeing'));\n    };\n    store.transaction.commit();\n  });\n  return jobs;\n}\n\nexport async function getJobsInDatabase(jobIds: Array<number>):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (!Array.isArray(jobIds)) {\n    throw new TypeError(`Unable to get jobs from database, received invalid \"jobIds\" argument type \"${typeof jobIds}\"`);\n  }\n  const [store, promise] = await getReadOnlyJobsObjectStoreAndTransactionPromise();\n  const jobs = [];\n  for (const jobId of jobIds) {\n    const request = store.get(jobId);\n    request.onsuccess = function () {\n      if (typeof request.result !== 'undefined') {\n        jobs.push(request.result);\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting job ${jobId}`);\n      logger.errorObject(event);\n    };\n  }\n  store.transaction.commit();\n  await promise;\n  return jobs;\n}\n\nexport async function getCompletedJobsCountFromDatabase(queueId: string) { // eslint-disable-line no-underscore-dangle\n  const jobs = await getCompletedJobsFromDatabase(queueId);\n  return jobs.length;\n}\n\n\nexport async function getCompletedJobsFromDatabase(queueId: string):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to get completed jobs database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusQueueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only([queueId, JOB_COMPLETE_STATUS]));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting completed jobs for queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting completed jobs for queue ${queueId}`));\n    };\n    store.transaction.commit();\n  });\n  return jobs;\n}\n\n\nexport async function storeAuthDataInDatabase(id:string, data: Object) { // eslint-disable-line no-underscore-dangle\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof data !== 'object') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"data\" argument type \"${typeof data}\"`);\n  }\n  const store = await getReadWriteAuthObjectStore();\n  const request = store.put({ id, data });\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while storing auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while storing auth data for ${id}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getAuthDataFromDatabase(id:string) {\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  const store = await getReadOnlyAuthObjectStore();\n  const request = store.get(id);\n  const authData = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting auth data for ${id}`));\n    };\n    store.transaction.commit();\n  });\n  return typeof authData !== 'undefined' ? authData.data : undefined;\n}\n\nexport async function removeAuthDataFromDatabase(id:string) {\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  const store = await getReadWriteAuthObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while removing auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Error while removing auth data for ${id}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getQueueStatus(queueId:string) {\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusQueueIdIndex');\n  // $FlowFixMe\n  const abortedRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_ABORTED_STATUS]));\n  // $FlowFixMe\n  const completeRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_COMPLETE_STATUS]));\n  // $FlowFixMe\n  const pendingRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_PENDING_STATUS]));\n  // $FlowFixMe\n  const errorRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_ERROR_STATUS]));\n  // $FlowFixMe\n  const cleanupRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_CLEANUP_STATUS]));\n  // $FlowFixMe\n  const cleanupAndRemoveRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_CLEANUP_AND_REMOVE_STATUS]));\n  const abortedCountPromise = new Promise((resolve, reject) => {\n    abortedRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    abortedRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const completeCountPromise = new Promise((resolve, reject) => {\n    completeRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    completeRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const pendingCountPromise = new Promise((resolve, reject) => {\n    pendingRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    pendingRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const errorCountPromise = new Promise((resolve, reject) => {\n    errorRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    errorRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const cleanupCountPromise = new Promise((resolve, reject) => {\n    cleanupRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    cleanupRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const cleanupAndRemoveCountPromise = new Promise((resolve, reject) => {\n    cleanupAndRemoveRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    cleanupAndRemoveRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  store.transaction.commit();\n  const [\n    abortedCount,\n    completeCount,\n    pendingCount,\n    errorCount,\n    cleanupCount,\n    cleanupAndRemoveCount,\n  ] = await Promise.all([\n    abortedCountPromise,\n    completeCountPromise,\n    pendingCountPromise,\n    errorCountPromise,\n    cleanupCountPromise,\n    cleanupAndRemoveCountPromise,\n  ]);\n  if (abortedCount > 0 || cleanupCount > 0) {\n    return QUEUE_ERROR_STATUS;\n  }\n  if (errorCount > 0 || pendingCount > 0 || cleanupAndRemoveCount > 0) {\n    return QUEUE_PENDING_STATUS;\n  }\n  if (completeCount > 0) {\n    return QUEUE_COMPLETE_STATUS;\n  }\n  return QUEUE_EMPTY_STATUS;\n}\n\nexport async function addArgLookup(jobId:number, key:string, jsonPath:string) {\n  if (typeof jobId !== 'number') {\n    throw new TypeError(`Unable add argument lookup, received invalid \"jobId\" argument type \"${typeof jobId}\"`);\n  }\n  if (typeof key !== 'string') {\n    throw new TypeError(`Unable add argument lookup, received invalid \"key\" argument type \"${typeof key}\"`);\n  }\n  if (typeof jsonPath !== 'string') {\n    throw new TypeError(`Unable add argument lookup, received invalid \"jsonPath\" argument type \"${typeof jsonPath}\"`);\n  }\n  const store = await getReadWriteArgLookupObjectStore();\n  const request = store.put({\n    jobId,\n    key,\n    jsonPath,\n  });\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while adding argument lookup for job ${jobId} with key \"${key}\" and JSON path \"${jsonPath}\"`);\n      logger.errorObject(event);\n      reject(new Error(`Error while adding argument lookup for job ${jobId} with key \"${key}\" and JSON path \"${jsonPath}\"`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getArgLookupJobPathMap(key:string) {\n  if (typeof key !== 'string') {\n    throw new TypeError(`Unable to lookup arguments, received invalid \"key\" argument type \"${typeof key}\"`);\n  }\n  const store = await getReadOnlyArgLookupObjectStore();\n  const index = store.index('keyIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(key));\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const map: Map<number, string> = new Map(event.target.result.map((x) => [x.jobId, x.jsonPath]));\n      resolve(map);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error looking up arguments for key ${key}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error looking up arguments for key ${key}`));\n    };\n    store.transaction.commit();\n  });\n}\n\n\nexport async function markJobsWithArgLookupKeyCleanupAndRemoveInDatabase(key:string) {\n  if (typeof key !== 'string') {\n    throw new TypeError(`Unable to lookup arguments, received invalid \"key\" argument type \"${typeof key}\"`);\n  }\n  const store = await getReadOnlyArgLookupObjectStore();\n  const index = store.index('keyIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(key));\n  const jobIds = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(uniq(event.target.result.map((x) => x.jobId)));\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error looking up arguments for key ${key}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error looking up arguments for key ${key}`));\n    };\n    store.transaction.commit();\n  });\n  await Promise.all(jobIds.map(markJobCleanupAndRemoveInDatabase));\n}\n\nexport async function lookupArgs(key:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction(['arg-lookup', 'jobs'], 'readonly', { durability: 'relaxed' });\n  const argLookupObjectStore = transaction.objectStore('arg-lookup');\n  transaction.onabort = (event) => {\n    logger.error('Read-only lookupArgs transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-only lookupArgs transaction');\n    logger.errorObject(event);\n  };\n  const argLookupIndex = argLookupObjectStore.index('keyIndex');\n  // $FlowFixMe\n  const argLookupRequest = argLookupIndex.getAll(IDBKeyRange.only(key));\n  const results = [];\n  return new Promise((resolve, reject) => {\n    argLookupRequest.onsuccess = function (argLookupEvent) {\n      const argLookups = argLookupEvent.target.result;\n      if (argLookups.length === 0) {\n        resolve([]);\n        transaction.commit();\n        return;\n      }\n      const jobsObjectStore = transaction.objectStore('jobs');\n      for (let i = 0; i < argLookups.length; i += 1) {\n        const { jobId, jsonPath } = argLookups[i];\n        const jobRequest = jobsObjectStore.get(jobId);\n        jobRequest.onsuccess = function () {\n          if (typeof jobRequest.result === 'undefined') {\n            return;\n          }\n          const { args } = jobRequest.result;\n          for (const result of JSONPath({ path: jsonPath, json: args })) {\n            results.push(result);\n          }\n          if (i === argLookups.length - 1) {\n            resolve(results);\n          }\n        };\n        jobRequest.onerror = function (event) {\n          logger.error(`Request error while getting job ${jobId}`);\n          logger.errorObject(event);\n          reject(new Error(`Request error looking up jobs for key ${key}`));\n        };\n      }\n      transaction.commit();\n    };\n    argLookupRequest.onerror = function (event) {\n      logger.error(`Request error looking up arguments for key ${key}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error looking up arguments for key ${key}`));\n    };\n  });\n}\n\nexport async function lookupArg(key:string) {\n  const results = await lookupArgs(key);\n  return results[0];\n}\n\nconst jobsArgLookupsAndCleanupsToRemove = [];\n\nasync function removeArgLookupsAndCleanupsForJob() {\n  if (jobsArgLookupsAndCleanupsToRemove.length === 0) {\n    return;\n  }\n  const jobIds = jobsArgLookupsAndCleanupsToRemove.slice();\n  jobsArgLookupsAndCleanupsToRemove.length = 0;\n  const database = await databasePromise;\n  const transaction = database.transaction(['cleanups', 'arg-lookup'], 'readwrite', { durability: 'relaxed' });\n  transaction.onabort = (event) => {\n    logger.error('Read-write \"cleanups\", and \"arg-lookup\" transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-write \"cleanups\" and \"arg-lookup\" transaction');\n    logger.errorObject(event);\n  };\n  const cleanupsObjectStore = transaction.objectStore('cleanups');\n  const argLookupObjectStore = transaction.objectStore('arg-lookup');\n  const argLookupJobIdIndex = argLookupObjectStore.index('jobIdIndex');\n  for (const jobId of jobIds) {\n    const cleanupDeleteRequest = cleanupsObjectStore.delete(jobId);\n    cleanupDeleteRequest.onerror = function (event) {\n      logger.error(`Request error while removing cleanups for job ${jobId} from database`);\n      logger.errorObject(event);\n    };\n    // $FlowFixMe\n    const argLookupJobRequest = argLookupJobIdIndex.getAllKeys(IDBKeyRange.only(jobId));\n    argLookupJobRequest.onsuccess = function (event) {\n      for (const id of event.target.result) {\n        const argLookupDeleteRequest = argLookupObjectStore.delete(id);\n        argLookupDeleteRequest.onerror = function (deleteEvent) {\n          logger.error(`Delete request error while removing argument lookups for job ${jobId} from database`);\n          logger.errorObject(deleteEvent);\n        };\n      }\n      transaction.commit();\n    };\n    argLookupJobRequest.onerror = function (event) {\n      logger.error(`Request error while removing argument lookups for job ${jobId} from database`);\n      logger.errorObject(event);\n    };\n  }\n}\n\nexport function removeArgLookupsAndCleanupsForJobAsMicrotask(jobId:number) {\n  jobsArgLookupsAndCleanupsToRemove.push(jobId);\n  self.queueMicrotask(removeArgLookupsAndCleanupsForJob);\n}\n\nconst UNLOAD_DATA_ID = '_UNLOAD_DATA';\n\nexport function updateUnloadDataInDatabase(transform:(Object | void) => Object | void | false):Promise<Object | void> {\n  return updateMetadataInDatabase(UNLOAD_DATA_ID, transform);\n}\n\nexport function getUnloadDataFromDatabase() {\n  return getMetadataFromDatabase(UNLOAD_DATA_ID);\n}\n\nexport function clearUnloadDataInDatabase() {\n  return clearMetadataInDatabase(UNLOAD_DATA_ID);\n}\n\n"],"file":"database.js"}
{"version":3,"sources":["../../src/database.js"],"names":["merge","unset","makeLogger","logger","JOB_ABORTED_STATUS","JOB_COMPLETE_STATUS","JOB_PENDING_STATUS","JOB_ERROR_STATUS","JOB_CLEANUP_STATUS","databasePromise","request","self","indexedDB","open","onupgradeneeded","e","store","target","result","createObjectStore","keyPath","autoIncrement","createIndex","unique","error","name","db","Promise","resolve","reject","onerror","Error","onsuccess","event","getReadWriteAuthObjectStore","console","log","database","transaction","objectStore","onabort","errorObject","getReadOnlyAuthObjectStore","getReadWriteQueueDataObjectStore","getReadOnlyQueueDataObjectStore","getReadWriteJobsObjectStore","getReadOnlyJobsObjectStore","getReadWriteCleanupsObjectStore","getReadOnlyCleanupsObjectStore","clearQueueDataDatabase","clear","clearJobsDatabase","clearCleanupsDatabase","clearDatabase","removeJobsWithQueueIdAndTypeFromDatabase","queueId","type","index","openCursor","IDBKeyRange","only","cursor","delete","primaryKey","continue","removeQueueIdFromJobsDatabase","removeQueueIdFromCleanupsDatabase","removeQueueIdFromDatabase","removeCompletedExpiredItemsFromDatabase","maxAge","bound","Date","now","queueIds","Set","add","value","updateJobInDatabase","id","transform","get","newValue","putRequest","put","getJobFromDatabase","updateCleanupInDatabase","removePathFromCleanupDataInDatabase","path","attempt","startAfter","data","Object","assign","updateCleanupValuesInDatabase","TypeError","combinedData","removeCleanupFromDatabase","getCleanupFromDatabase","getQueueDataFromDatabase","queueData","undefined","updateQueueDataInDatabase","markJobStatusInDatabase","status","markJobCompleteInDatabase","markJobPendingInDatabase","markJobErrorInDatabase","markJobCleanupInDatabase","markJobAbortedInDatabase","markJobStartAfterInDatabase","toLocaleString","markCleanupStartAfterInDatabase","markQueueForCleanupInDatabase","jobs","push","warn","updateRequest","update","event2","incrementJobAttemptInDatabase","incrementCleanupAttemptInDatabase","bulkEnqueueToDatabase","items","delay","Array","isArray","i","length","args","created","enqueueToDatabase","dequeueFromDatabase","getAll","getContiguousIds","ids","sort","a","b","points","Infinity","dequeueFromDatabaseNotIn","promise","oncomplete","getAllKeys","includes","getRequest","getCompletedJobsCountFromDatabase","getCompletedJobsFromDatabase","storeAuthDataInDatabase","getAuthDataFromDatabase","authData","removeAuthDataFromDatabase"],"mappings":"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","sourcesContent":["// @flow\n\nimport merge from 'lodash/merge';\nimport unset from 'lodash/unset';\nimport makeLogger from './logger';\n\nconst logger = makeLogger('Jobs Database');\n\nexport type Job = {\n  id: number,\n  queueId:string,\n  type:string,\n  args:Array<any>,\n  attempt: number,\n  created: number,\n  status: number,\n  startAfter: number\n};\n\n\ntype Cleanup = {\n  id: number,\n  queueId:string,\n  data: Object,\n  attempt: number,\n  startAfter: number\n};\n\n\nexport const JOB_ABORTED_STATUS = 2;\nexport const JOB_COMPLETE_STATUS = 1;\nexport const JOB_PENDING_STATUS = 0;\nexport const JOB_ERROR_STATUS = -1;\nexport const JOB_CLEANUP_STATUS = -2;\n\nexport const databasePromise = (async () => {\n  const request = self.indexedDB.open('battery-queue-01', 2);\n\n  request.onupgradeneeded = function (e) {\n    try {\n      const store = e.target.result.createObjectStore('jobs', { keyPath: 'id', autoIncrement: true });\n      store.createIndex('statusIndex', 'status', { unique: false });\n      store.createIndex('queueIdIndex', 'queueId', { unique: false });\n      store.createIndex('queueIdTypeIndex', ['queueId', 'type'], { unique: false });\n      store.createIndex('statusQueueIdIndex', ['queueId', 'status'], { unique: false });\n      store.createIndex('statusCreatedIndex', ['status', 'created'], { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      e.target.result.createObjectStore('queue-data', { keyPath: 'queueId' });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      const store = e.target.result.createObjectStore('cleanups', { keyPath: 'id' });\n      store.createIndex('queueIdIndex', 'queueId', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      e.target.result.createObjectStore('auth-data', { keyPath: 'id' });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n  };\n\n  const db = await new Promise((resolve, reject) => {\n    request.onerror = () => {\n      reject(new Error('Unable to open database'));\n    };\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n  });\n\n  return db;\n})();\n\nasync function getReadWriteAuthObjectStore() {\n  console.log('getReadWriteAuthObjectStore');\n  const database = await databasePromise;\n  const transaction = database.transaction(['auth-data'], 'readwrite');\n  const objectStore = transaction.objectStore('auth-data');\n  transaction.onabort = (event) => {\n    logger.error('Read-write auth transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-write auth transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyAuthObjectStore() {\n  console.log('getReadOnlyAuthObjectStore');\n  const database = await databasePromise;\n  const transaction = database.transaction(['auth-data'], 'readonly');\n  const objectStore = transaction.objectStore('auth-data');\n  transaction.onabort = (event) => {\n    logger.error('Read-only auth transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-only auth transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadWriteQueueDataObjectStore() {\n  console.log('getReadWriteQueueDataObjectStore');\n  const database = await databasePromise;\n  const transaction = database.transaction(['queue-data'], 'readwrite');\n  const objectStore = transaction.objectStore('queue-data');\n  transaction.onabort = (event) => {\n    logger.error('Read-write queue data transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-write queue data transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyQueueDataObjectStore() {\n  console.log('getReadOnlyQueueDataObjectStore');\n  const database = await databasePromise;\n  const transaction = database.transaction(['queue-data'], 'readonly');\n  const objectStore = transaction.objectStore('queue-data');\n  transaction.onabort = (event) => {\n    logger.error('Read-only queue data transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-only queue data transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\n\nasync function getReadWriteJobsObjectStore() {\n  console.log('getReadWriteJobsObjectStore');\n  const database = await databasePromise;\n  const transaction = database.transaction(['jobs'], 'readwrite');\n  const objectStore = transaction.objectStore('jobs');\n  transaction.onabort = (event) => {\n    logger.error('Read-write jobs transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-write jobs transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyJobsObjectStore() {\n  console.log('getReadOnlyJobsObjectStore');\n  const database = await databasePromise;\n  const transaction = database.transaction(['jobs'], 'readonly');\n  const objectStore = transaction.objectStore('jobs');\n  transaction.onabort = (event) => {\n    logger.error('Read-only jobs transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-only jobs transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadWriteCleanupsObjectStore() {\n  console.log('getReadWriteCleanupsObjectStore');\n  const database = await databasePromise;\n  const transaction = database.transaction(['cleanups'], 'readwrite');\n  const objectStore = transaction.objectStore('cleanups');\n  transaction.onabort = (event) => {\n    logger.error('Read-write cleanups transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-write cleanups transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyCleanupsObjectStore() {\n  console.log('getReadOnlyCleanupsObjectStore');\n  const database = await databasePromise;\n  const transaction = database.transaction(['cleanups'], 'readonly');\n  const objectStore = transaction.objectStore('cleanups');\n  transaction.onabort = (event) => {\n    logger.error('Read-only cleanups transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-only cleanups transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function clearQueueDataDatabase() {\n  console.log('clearQueueDataDatabase');\n  const store = await getReadWriteQueueDataObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing queue data database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing queue data database'));\n    };\n  });\n}\n\nasync function clearJobsDatabase() {\n  console.log('clearJobsDatabase');\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing jobs database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing jobs database'));\n    };\n  });\n}\n\nasync function clearCleanupsDatabase() {\n  console.log('clearCleanupsDatabase');\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing cleanups database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing cleanups database'));\n    };\n  });\n}\n\nexport async function clearDatabase() {\n  console.log('clearDatabase');\n  await clearJobsDatabase();\n  await clearCleanupsDatabase();\n  await clearQueueDataDatabase();\n}\n\nexport async function removeJobsWithQueueIdAndTypeFromDatabase(queueId:string, type:string) {\n  console.log('removeJobsWithQueueIdAndTypeFromDatabase');\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('queueIdTypeIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only([queueId, type]));\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        store.delete(cursor.primaryKey);\n        cursor.continue();\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while removing jobs with queue ${queueId} and type ${type} from jobs database`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while removing jobs with queue ${queueId} and type ${type} from jobs database`));\n    };\n  });\n}\n\nasync function removeQueueIdFromJobsDatabase(queueId:string) {\n  console.log('removeQueueIdFromJobsDatabase');\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only(queueId));\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        store.delete(cursor.primaryKey);\n        cursor.continue();\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while removing queue ${queueId} from jobs database`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while removing queue ${queueId} from jobs database`));\n    };\n  });\n}\n\nasync function removeQueueIdFromCleanupsDatabase(queueId:string) {\n  console.log('removeQueueIdFromCleanupsDatabase');\n  const store = await getReadWriteCleanupsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only(queueId));\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        store.delete(cursor.primaryKey);\n        cursor.continue();\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while removing queue ${queueId} from jobs database`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while removing queue ${queueId} from jobs database`));\n    };\n  });\n}\n\nexport async function removeQueueIdFromDatabase(queueId:string) {\n  console.log('removeQueueIdFromDatabase');\n  await removeQueueIdFromJobsDatabase(queueId);\n  await removeQueueIdFromCleanupsDatabase(queueId);\n}\n\nexport async function removeCompletedExpiredItemsFromDatabase(maxAge:number) {\n  console.log('removeCompletedExpiredItemsFromDatabase');\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('statusCreatedIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.bound([JOB_COMPLETE_STATUS, 0], [JOB_COMPLETE_STATUS, Date.now() - maxAge]));\n  const queueIds = new Set();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        queueIds.add(cursor.value.queueId);\n        store.delete(cursor.primaryKey);\n        cursor.continue();\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error('Request error while removing completed exired items from jobs database');\n      logger.errorObject(event);\n      reject(new Error('Request error while removing completed exired items from jobs database'));\n    };\n  });\n  for (const queueId of queueIds) {\n    await removeQueueIdFromDatabase(queueId);\n  }\n}\n\nexport async function updateJobInDatabase(id:number, transform:(Job | void) => Object):Promise<Job | void> {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      const newValue = transform(request.result);\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else {\n        const putRequest = store.put(newValue);\n        putRequest.onsuccess = function () {\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating ${id}`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating ${id}`));\n        };\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id}`));\n    };\n  });\n}\n\nexport async function getJobFromDatabase(id:number):Promise<Job | void> {\n  console.log('getJobFromDatabase');\n  const store = await getReadOnlyJobsObjectStore();\n  const request = store.get(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id}`));\n    };\n  });\n}\n\nexport async function updateCleanupInDatabase(id:number, transform:(Cleanup | void) => Object):Promise<Cleanup | void> {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      const newValue = transform(request.result);\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else {\n        const putRequest = store.put(newValue);\n        putRequest.onsuccess = function () {\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating ${id} cleanup`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating ${id} cleanup`));\n        };\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id} cleanup`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id} cleanup`));\n    };\n  });\n}\n\nexport async function removePathFromCleanupDataInDatabase(id:number, path:Array<string>) {\n  console.log('removePathFromCleanupDataInDatabase');\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      return;\n    }\n    const { queueId, attempt, startAfter } = value;\n    const data = Object.assign({}, value.data);\n    unset(data, path);\n    return { // eslint-disable-line consistent-return\n      id,\n      queueId,\n      attempt,\n      startAfter,\n      data,\n    };\n  });\n}\n\n\nexport async function updateCleanupValuesInDatabase(id:number, queueId:string, data:Object) {\n  console.log('updateCleanupValuesInDatabase');\n  if (typeof id !== 'number') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof data !== 'object') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"data\" argument type \"${typeof data}\"`);\n  }\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    const combinedData = typeof value === 'undefined' ? data : merge({}, value.data, data);\n    return {\n      id,\n      queueId,\n      attempt: 0,\n      startAfter: Date.now(),\n      data: combinedData,\n    };\n  });\n}\n\nexport async function removeCleanupFromDatabase(id:number) {\n  console.log('removeCleanupFromDatabase');\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while removing cleanup data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Error while removing cleanup data for ${id}`));\n    };\n  });\n}\n\nexport async function getCleanupFromDatabase(id:number):Promise<Cleanup | void> {\n  console.log('getCleanupFromDatabase');\n  const store = await getReadOnlyCleanupsObjectStore();\n  const request = store.get(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id}`));\n    };\n  });\n}\n\nexport async function getQueueDataFromDatabase(queueId:string) {\n  console.log('getQueueDataFromDatabase');\n  const store = await getReadOnlyQueueDataObjectStore();\n  const request = store.get(queueId);\n  const queueData = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting queue ${queueId} data`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting queue ${queueId} data`));\n    };\n  });\n  return typeof queueData !== 'undefined' ? queueData.data : undefined;\n}\n\nexport async function updateQueueDataInDatabase(queueId:string, data:Object) {\n  console.log('updateQueueDataInDatabase');\n  const value = await getQueueDataFromDatabase(queueId);\n  const store = await getReadWriteQueueDataObjectStore();\n  const request = store.put({\n    queueId,\n    data: merge({}, value, data),\n  });\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while updating queue ${queueId} data`);\n      logger.errorObject(event);\n      reject(new Error(`Error while updating queue ${queueId} data`));\n    };\n  });\n}\n\nexport async function markJobStatusInDatabase(id:number, status:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new Error(`Unable to mark job ${id} as status ${status} in database, job does not exist`);\n    }\n    value.status = status; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport function markJobCompleteInDatabase(id:number) {\n  console.log('markJobCompleteInDatabase', id);\n  return markJobStatusInDatabase(id, JOB_COMPLETE_STATUS);\n}\n\nexport function markJobPendingInDatabase(id:number) {\n  console.log('markJobPendingInDatabase', id);\n  return markJobStatusInDatabase(id, JOB_PENDING_STATUS);\n}\n\nexport function markJobErrorInDatabase(id:number) {\n  console.log('markJobErrorInDatabase', id);\n  return markJobStatusInDatabase(id, JOB_ERROR_STATUS);\n}\n\nexport function markJobCleanupInDatabase(id:number) {\n  console.log('markJobCleanupInDatabase', id);\n  return markJobStatusInDatabase(id, JOB_CLEANUP_STATUS);\n}\n\nexport function markJobAbortedInDatabase(id:number) {\n  console.log('markJobAbortedInDatabase', id);\n  return markJobStatusInDatabase(id, JOB_ABORTED_STATUS);\n}\n\nexport async function markJobStartAfterInDatabase(id:number, startAfter:number) {\n  console.log('markJobStartAfterInDatabase', id);\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new Error(`Unable to mark job ${id} start-after time to ${new Date(startAfter).toLocaleString()} in database, job does not exist`);\n    }\n    if (startAfter < value.startAfter) {\n      return;\n    }\n    value.startAfter = startAfter; // eslint-disable-line no-param-reassign\n    return value; // eslint-disable-line consistent-return\n  });\n}\n\nexport async function markCleanupStartAfterInDatabase(id:number, startAfter:number) {\n  console.log('markCleanupStartAfterInDatabase');\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      throw new Error(`Unable to mark cleanup ${id} start-after time to ${new Date(startAfter).toLocaleString()} in database, cleanup does not exist`);\n    }\n    if (startAfter < value.startAfter) {\n      return;\n    }\n    value.startAfter = startAfter; // eslint-disable-line  no-param-reassign\n    return value; // eslint-disable-line consistent-return\n  });\n}\n\nexport async function markQueueForCleanupInDatabase(queueId:string) {\n  console.log('markQueueForCleanupInDatabase');\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only(queueId));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        const value = Object.assign({}, cursor.value);\n        switch (value.status) {\n          case JOB_ERROR_STATUS:\n            value.status = JOB_CLEANUP_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_COMPLETE_STATUS:\n            value.status = JOB_CLEANUP_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_PENDING_STATUS:\n            value.status = JOB_ABORTED_STATUS;\n            break;\n          case JOB_CLEANUP_STATUS:\n            cursor.continue();\n            return;\n          case JOB_ABORTED_STATUS:\n            cursor.continue();\n            return;\n          default:\n            logger.warn(`Unhandled job status ${value.status}`);\n            cursor.continue();\n            return;\n        }\n        const updateRequest = cursor.update(value);\n        updateRequest.onsuccess = function () {\n          cursor.continue();\n        };\n        updateRequest.onerror = function (event2) {\n          logger.error(`Update request error while marking queue ${queueId} error`);\n          logger.errorObject(event2);\n          cursor.continue();\n        };\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while marking queue ${queueId} error`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while marking queue ${queueId} error`));\n    };\n  });\n  return jobs;\n}\n\nexport async function incrementJobAttemptInDatabase(id:number) {\n  console.log('incrementJobAttemptInDatabase');\n  await updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new Error(`Unable to increment attempts for job ${id} in database, job does not exist`);\n    }\n    value.attempt += 1; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport async function incrementCleanupAttemptInDatabase(id:number, queueId:string) {\n  console.log('incrementCleanupAttemptInDatabase');\n  let attempt = 1;\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      return {\n        id,\n        queueId,\n        attempt: 1,\n        startAfter: Date.now(),\n        data: {},\n      };\n    }\n    attempt = value.attempt + 1;\n    value.attempt = attempt; // eslint-disable-line no-param-reassign\n    return value;\n  });\n  return attempt;\n}\n\nexport async function bulkEnqueueToDatabase(queueId: string, items:Array<[string, Array<any>]>, delay: number) { // eslint-disable-line no-underscore-dangle\n  console.log('bulkEnqueueToDatabase');\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (!Array.isArray(items)) {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"items\" argument type \"${typeof items}\"`);\n  }\n  for (let i = 0; i < items.length; i += 1) {\n    const [type, args] = items[i];\n    if (typeof type !== 'string') {\n      throw new TypeError(`Unable to bulk enqueue in database, received invalid items[${i}] \"type\" argument type \"${typeof type}\"`);\n    }\n    if (!Array.isArray(args)) {\n      throw new TypeError(`Unable to bulk enqueue in database, received invalid items[${i}] \"args\" argument type \"${typeof args}\"`);\n    }\n  }\n  if (typeof delay !== 'number') {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"delay\" argument type \"${typeof delay}\"`);\n  }\n  const store = await getReadWriteJobsObjectStore();\n  await new Promise((resolve, reject) => {\n    for (let i = 0; i < items.length; i += 1) {\n      const [type, args] = items[i];\n      const value = {\n        queueId,\n        type,\n        args,\n        attempt: 0,\n        created: Date.now(),\n        status: JOB_PENDING_STATUS,\n        startAfter: Date.now() + delay,\n      };\n      const request = store.put(value);\n      if (i === items.length - 1) {\n        request.onsuccess = function () {\n          resolve(request.result);\n        };\n        request.onerror = function (event) {\n          logger.error(`Request error while bulk enqueueing ${items.length} ${items.length === 1 ? 'job' : 'jobs'} in queue ${queueId}`);\n          logger.errorObject(event);\n          reject(new Error(`Request error while bulk enqueueing ${items.length} ${items.length === 1 ? 'job' : 'jobs'} in queue ${queueId}`));\n        };\n      }\n    }\n  });\n}\n\nexport async function enqueueToDatabase(queueId: string, type: string, args: Array<any>, delay: number) { // eslint-disable-line no-underscore-dangle\n  console.log('enqueueToDatabase');\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof type !== 'string') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"type\" argument type \"${typeof type}\"`);\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"args\" argument type \"${typeof args}\"`);\n  }\n  if (typeof delay !== 'number') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"delay\" argument type \"${typeof delay}\"`);\n  }\n  const value = {\n    queueId,\n    type,\n    args,\n    attempt: 0,\n    created: Date.now(),\n    status: JOB_PENDING_STATUS,\n    startAfter: Date.now() + delay,\n  };\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.put(value);\n  const id = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while enqueueing ${type} job`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while enqueueing ${type} job`));\n    };\n  });\n  return id;\n}\n\nexport async function dequeueFromDatabase():Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  console.log('dequeueFromDatabase');\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.bound(JOB_CLEANUP_STATUS, JOB_PENDING_STATUS));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error('Request error while dequeing');\n      logger.errorObject(event);\n      reject(new Error('Request error while dequeing'));\n    };\n  });\n  return jobs;\n}\n\nexport function getContiguousIds(ids:Array<number>) {\n  console.log('getContiguousIds');\n  ids.sort((a, b) => a - b);\n  const points = [[0, ids[0] - 1]];\n  for (let i = 0; i < ids.length; i += 1) {\n    if (ids[i] + 1 !== ids[i + 1]) {\n      if (i + 1 >= ids.length) {\n        points.push([ids[i] + 1, Infinity]);\n      } else {\n        points.push([ids[i] + 1, ids[i + 1] - 1]);\n      }\n    }\n  }\n  return points;\n}\n\nexport async function dequeueFromDatabaseNotIn(ids:Array<number>):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  console.log('dequeueFromDatabaseNotIn');\n  if (ids.length === 0) {\n    return dequeueFromDatabase();\n  }\n  const database = await databasePromise;\n  const transaction = database.transaction(['jobs'], 'readonly');\n  const store = transaction.objectStore('jobs');\n  const index = store.index('statusIndex');\n  const jobs = [];\n  const promise = new Promise((resolve, reject) => {\n    transaction.onabort = (event) => {\n      logger.error('Read-write jobs transaction was aborted');\n      logger.errorObject(event);\n      reject(new Error('Read-write jobs transaction was aborted'));\n    };\n    transaction.onerror = (event) => {\n      logger.error('Error in read-write jobs transaction');\n      logger.errorObject(event);\n      reject(new Error('Error in read-write jobs transaction'));\n    };\n    transaction.oncomplete = () => {\n      resolve();\n    };\n  });\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.bound(JOB_CLEANUP_STATUS, JOB_PENDING_STATUS));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      if (ids.includes(id)) {\n        continue;\n      }\n      const getRequest = store.get(id);\n      getRequest.onsuccess = function () {\n        jobs.push(getRequest.result);\n      };\n      getRequest.onerror = function (event2) {\n        logger.error(`Request error while getting job ${id}`);\n        logger.errorObject(event2);\n      };\n    }\n  };\n  request.onerror = function (event) {\n    logger.error('Request error while dequeing');\n    logger.errorObject(event);\n  };\n  await promise;\n  return jobs;\n}\n\nexport async function getCompletedJobsCountFromDatabase(queueId: string) { // eslint-disable-line no-underscore-dangle\n  console.log('getCompletedJobsCountFromDatabase');\n  const jobs = await getCompletedJobsFromDatabase(queueId);\n  return jobs.length;\n}\n\nexport async function getCompletedJobsFromDatabase(queueId: string):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  console.log('getCompletedJobsFromDatabase');\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to get completed jobs database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusQueueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only([queueId, JOB_COMPLETE_STATUS]));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        jobs.push(cursor.value);\n        cursor.continue();\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting completed jobs for queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting completed jobs for queue ${queueId}`));\n    };\n  });\n  return jobs;\n}\n\nexport async function storeAuthDataInDatabase(id:string, data: Object) { // eslint-disable-line no-underscore-dangle\n  console.log('storeAuthDataInDatabase');\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof data !== 'object') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"data\" argument type \"${typeof data}\"`);\n  }\n  const store = await getReadWriteAuthObjectStore();\n  const request = store.put({ id, data });\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while storing auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while storing auth data for ${id}`));\n    };\n  });\n}\n\nexport async function getAuthDataFromDatabase(id:string) {\n  console.log('getAuthDataFromDatabase');\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  const store = await getReadOnlyAuthObjectStore();\n  const request = store.get(id);\n  const authData = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting auth data for ${id}`));\n    };\n  });\n  return typeof authData !== 'undefined' ? authData.data : undefined;\n}\n\nexport async function removeAuthDataFromDatabase(id:string) {\n  console.log('removeAuthDataFromDatabase');\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  const store = await getReadWriteAuthObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while removing auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Error while removing auth data for ${id}`));\n    };\n  });\n}\n"],"file":"database.js"}
{"version":3,"sources":["../../src/database.js"],"names":["JSONPath","merge","unset","uniq","EventEmitter","makeLogger","localJobEmitter","jobEmitter","logger","JobDoesNotExistError","Error","constructor","message","name","CleanupDoesNotExistError","QUEUE_ERROR_STATUS","QUEUE_PENDING_STATUS","QUEUE_COMPLETE_STATUS","QUEUE_EMPTY_STATUS","JOB_ABORTED_STATUS","JOB_COMPLETE_STATUS","JOB_PENDING_STATUS","JOB_ERROR_STATUS","JOB_CLEANUP_STATUS","JOB_CLEANUP_AND_REMOVE_STATUS","databasePromise","request","self","indexedDB","open","onupgradeneeded","e","store","target","result","createObjectStore","keyPath","autoIncrement","createIndex","unique","error","db","Promise","resolve","reject","onerror","onsuccess","event","getReadWriteObjectStore","database","transaction","durability","objectStore","onabort","errorObject","getReadOnlyObjectStore","getReadWriteArgLookupObjectStore","getReadOnlyArgLookupObjectStore","getReadWriteAuthObjectStore","getReadOnlyAuthObjectStore","getReadWriteMetadataObjectStore","getReadOnlyMetadataObjectStore","getReadWriteJobsObjectStore","getReadOnlyJobsObjectStore","getReadWriteCleanupsObjectStore","getReadOnlyCleanupsObjectStore","getReadWriteObjectStoreAndTransactionPromise","promise","oncomplete","getReadOnlyObjectStoreAndTransactionPromise","getReadWriteJobsObjectStoreAndTransactionPromise","getReadOnlyJobsObjectStoreAndTransactionPromise","getReadWriteArgLookupObjectStoreAndTransactionPromise","removeJobFromObjectStore","id","queueId","deleteRequest","delete","emit","removeArgLookupsForJobAsMicrotask","clearAllMetadataInDatabase","clear","commit","clearJobsDatabase","clearCleanupsDatabase","clearDatabase","removeJobsWithQueueIdAndTypeFromDatabase","type","index","getAllKeys","IDBKeyRange","only","removeQueueFromDatabase","jobsObjectStore","cleanupsObjectStore","argLookupObjectStore","queueIdIndex","argLookupJobIdIndex","jobIds","jobId","jobDeleteRequest","cleanupDeleteRequest","argLookupJobRequest","argLookupDeleteRequest","deleteEvent","removeCompletedExpiredItemsFromDatabase","maxAge","getAll","bound","Date","now","status","updateJobInDatabase","transform","get","newValue","value","putRequest","put","getJobFromDatabase","updateCleanupInDatabase","removePathFromCleanupDataInDatabase","path","attempt","startAfter","data","Object","assign","updateCleanupValuesInDatabase","TypeError","combinedData","silentlyRemoveJobFromDatabase","removeJobFromDatabase","job","removeCleanupFromDatabase","getCleanupFromDatabase","getMetadataFromDatabase","response","metadata","undefined","clearMetadataInDatabase","setMetadataInDatabase","updateMetadataInDatabase","markJobStatusInDatabase","markJobCompleteInDatabase","markJobPendingInDatabase","markJobErrorInDatabase","markJobCleanupInDatabase","markJobAbortedInDatabase","markJobCompleteThenRemoveFromDatabase","markJobCleanupAndRemoveInDatabase","markJobAsAbortedOrRemoveFromDatabase","markJobStartAfterInDatabase","toLocaleString","markCleanupStartAfterInDatabase","markQueueForCleanupInDatabase","jobs","length","lastRequest","i","push","warn","event2","markQueueJobsGreaterThanIdCleanupAndRemoveInDatabase","shouldRemove","markQueueForCleanupAndRemoveInDatabase","getGreatestJobIdFromQueueInDatabase","openCursor","cursor","incrementJobAttemptInDatabase","incrementCleanupAttemptInDatabase","bulkEnqueueToDatabase","items","delay","Array","isArray","args","ids","created","enqueueToDatabase","restoreJobToDatabaseForCleanupAndRemove","dequeueFromDatabase","getContiguousIds","sort","a","b","points","Infinity","dequeueFromDatabaseNotIn","includes","getRequest","getJobsWithTypeFromDatabase","getJobsInQueueFromDatabase","getJobsInDatabase","getCompletedJobsCountFromDatabase","getCompletedJobsFromDatabase","storeAuthDataInDatabase","getAuthDataFromDatabase","authData","removeAuthDataFromDatabase","getQueueStatus","abortedRequest","completeRequest","pendingRequest","errorRequest","cleanupRequest","cleanupAndRemoveRequest","abortedCountPromise","completeCountPromise","pendingCountPromise","errorCountPromise","cleanupCountPromise","cleanupAndRemoveCountPromise","abortedCount","completeCount","pendingCount","errorCount","cleanupCount","cleanupAndRemoveCount","all","addArgLookup","key","jsonPath","getArgLookupJobPathMap","map","Map","x","markJobsWithArgLookupKeyCleanupAndRemoveInDatabase","lookupArgs","argLookupIndex","argLookupRequest","results","argLookupEvent","argLookups","jobRequest","json","lookupArg","queueMicrotask","removeArgLookupsForJob","catch","errorStack","UNLOAD_DATA_ID","updateUnloadDataInDatabase","getUnloadDataFromDatabase","clearUnloadDataInDatabase"],"mappings":"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","sourcesContent":["// @flow\n\nimport { JSONPath } from 'jsonpath-plus';\nimport merge from 'lodash/merge';\nimport unset from 'lodash/unset';\nimport uniq from 'lodash/uniq';\nimport EventEmitter from 'events';\nimport makeLogger from './logger';\n\n// Local job emitter is for this process only,\n// jobEmitter is bridged when a MessagePort is open\nexport const localJobEmitter = new EventEmitter();\nexport const jobEmitter = new EventEmitter();\n\nconst logger = makeLogger('Jobs Database');\n\nexport class JobDoesNotExistError extends Error {\n  constructor(message:string) {\n    super(message);\n    this.name = 'JobDoesNotExistError';\n  }\n}\n\nexport class CleanupDoesNotExistError extends Error {\n  constructor(message:string) {\n    super(message);\n    this.name = 'CleanupDoesNotExistError';\n  }\n}\n\nexport type Job = {\n  id: number,\n  queueId:string,\n  type:string,\n  args:Array<any>,\n  attempt: number,\n  created: number,\n  status: number,\n  startAfter: number\n};\n\n\ntype Cleanup = {\n  id: number,\n  queueId:string,\n  data: Object,\n  attempt: number,\n  startAfter: number\n};\n\nexport const QUEUE_ERROR_STATUS = 0;\nexport const QUEUE_PENDING_STATUS = 1;\nexport const QUEUE_COMPLETE_STATUS = 2;\nexport const QUEUE_EMPTY_STATUS = 3;\n\nexport const JOB_ABORTED_STATUS = 2;\nexport const JOB_COMPLETE_STATUS = 1;\nexport const JOB_PENDING_STATUS = 0;\nexport const JOB_ERROR_STATUS = -1;\nexport const JOB_CLEANUP_STATUS = -2;\nexport const JOB_CLEANUP_AND_REMOVE_STATUS = -3;\n\nexport const databasePromise = (async () => {\n  const request = self.indexedDB.open('battery-queue-07', 1);\n\n  request.onupgradeneeded = function (e) {\n    try {\n      const store = e.target.result.createObjectStore('jobs', { keyPath: 'id', autoIncrement: true });\n      store.createIndex('statusIndex', 'status', { unique: false });\n      store.createIndex('queueIdIndex', 'queueId', { unique: false });\n      store.createIndex('queueIdTypeIndex', ['queueId', 'type'], { unique: false });\n      store.createIndex('typeIndex', 'type', { unique: false });\n      store.createIndex('statusQueueIdIndex', ['queueId', 'status'], { unique: false });\n      store.createIndex('createdIndex', 'created', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      e.target.result.createObjectStore('metadata', { keyPath: 'id' });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      const store = e.target.result.createObjectStore('cleanups', { keyPath: 'id' });\n      store.createIndex('queueIdIndex', 'queueId', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      e.target.result.createObjectStore('auth-data', { keyPath: 'id' });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      const store = e.target.result.createObjectStore('arg-lookup', { keyPath: 'id', autoIncrement: true });\n      store.createIndex('jobIdIndex', 'jobId', { unique: false });\n      store.createIndex('keyIndex', 'key', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n  };\n\n  const db = await new Promise((resolve, reject) => {\n    request.onerror = () => {\n      reject(new Error('Unable to open database'));\n    };\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n  });\n\n  return db;\n})();\n\nasync function getReadWriteObjectStore(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readwrite', { durability: 'relaxed' });\n  const objectStore = transaction.objectStore(name);\n  transaction.onabort = (event) => {\n    logger.error(`Read-write \"${name}\" transaction was aborted`);\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error(`Error in read-write \"${name}\" transaction`);\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyObjectStore(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readonly', { durability: 'relaxed' });\n  const objectStore = transaction.objectStore(name);\n  transaction.onabort = (event) => {\n    logger.error(`Read-only \"${name}\" transaction was aborted`);\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error(`Error in read-only \"${name}\" transaction`);\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nfunction getReadWriteArgLookupObjectStore() {\n  return getReadWriteObjectStore('arg-lookup');\n}\n\nfunction getReadOnlyArgLookupObjectStore() {\n  return getReadOnlyObjectStore('arg-lookup');\n}\n\nfunction getReadWriteAuthObjectStore() {\n  return getReadWriteObjectStore('auth-data');\n}\n\nfunction getReadOnlyAuthObjectStore() {\n  return getReadOnlyObjectStore('auth-data');\n}\n\nfunction getReadWriteMetadataObjectStore() {\n  return getReadWriteObjectStore('metadata');\n}\n\nfunction getReadOnlyMetadataObjectStore() {\n  return getReadOnlyObjectStore('metadata');\n}\n\nfunction getReadWriteJobsObjectStore() {\n  return getReadWriteObjectStore('jobs');\n}\n\nfunction getReadOnlyJobsObjectStore() {\n  return getReadOnlyObjectStore('jobs');\n}\n\nfunction getReadWriteCleanupsObjectStore() {\n  return getReadWriteObjectStore('cleanups');\n}\n\nfunction getReadOnlyCleanupsObjectStore() {\n  return getReadOnlyObjectStore('cleanups');\n}\n\nasync function getReadWriteObjectStoreAndTransactionPromise(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readwrite', { durability: 'relaxed' });\n  const objectStore = transaction.objectStore(name);\n  const promise = new Promise((resolve, reject) => {\n    transaction.onabort = (event) => {\n      logger.error(`Read-write \"${name}\" transaction was aborted`);\n      logger.errorObject(event);\n      reject(new Error(`Read-write \"${name}\" transaction was aborted`));\n    };\n    transaction.onerror = (event) => {\n      logger.error(`Error in read-write \"${name}\" transaction`);\n      logger.errorObject(event);\n      reject(new Error(`Error in read-write \"${name}\" transaction`));\n    };\n    transaction.oncomplete = () => {\n      resolve();\n    };\n  });\n  return [objectStore, promise];\n}\n\nasync function getReadOnlyObjectStoreAndTransactionPromise(name:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction([name], 'readonly', { durability: 'relaxed' });\n  const objectStore = transaction.objectStore(name);\n  const promise = new Promise((resolve, reject) => {\n    transaction.onabort = (event) => {\n      logger.error(`Read-write \"${name}\" transaction was aborted`);\n      logger.errorObject(event);\n      reject(new Error(`Read-write \"${name}\" transaction was aborted`));\n    };\n    transaction.onerror = (event) => {\n      logger.error(`Error in read-write \"${name}\" transaction`);\n      logger.errorObject(event);\n      reject(new Error(`Error in read-write \"${name}\" transaction`));\n    };\n    transaction.oncomplete = () => {\n      resolve();\n    };\n  });\n  return [objectStore, promise];\n}\n\n\nfunction getReadWriteJobsObjectStoreAndTransactionPromise() {\n  return getReadWriteObjectStoreAndTransactionPromise('jobs');\n}\n\nfunction getReadOnlyJobsObjectStoreAndTransactionPromise() {\n  return getReadOnlyObjectStoreAndTransactionPromise('jobs');\n}\n\nfunction getReadWriteArgLookupObjectStoreAndTransactionPromise() {\n  return getReadWriteObjectStoreAndTransactionPromise('arg-lookup');\n}\n\nfunction removeJobFromObjectStore(store:IDBObjectStore, id:number, queueId:string) {\n  const deleteRequest = store.delete(id);\n  localJobEmitter.emit('jobDelete', id, queueId);\n  jobEmitter.emit('jobDelete', id, queueId);\n  deleteRequest.onsuccess = function () {\n    removeArgLookupsForJobAsMicrotask(id);\n  };\n  deleteRequest.onerror = function (event) {\n    logger.error(`Request error while removing job ${id} in queue ${queueId} from database`);\n    logger.errorObject(event);\n  };\n}\n\nasync function clearAllMetadataInDatabase() {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing queue data database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing queue data database'));\n    };\n    store.transaction.commit();\n  });\n}\n\nasync function clearJobsDatabase() {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.clear();\n  localJobEmitter.emit('jobsClear');\n  jobEmitter.emit('jobsClear');\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing jobs database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing jobs database'));\n    };\n    store.transaction.commit();\n  });\n}\n\nasync function clearCleanupsDatabase() {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing cleanups database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing cleanups database'));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function clearDatabase() {\n  await clearJobsDatabase();\n  await clearCleanupsDatabase();\n  await clearAllMetadataInDatabase();\n}\n\nexport async function removeJobsWithQueueIdAndTypeFromDatabase(queueId:string, type:string) {\n  const [store, promise] = await getReadWriteJobsObjectStoreAndTransactionPromise();\n  const index = store.index('queueIdTypeIndex');\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.only([queueId, type]));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      removeJobFromObjectStore(store, id, queueId);\n    }\n  };\n  request.onerror = function (event) {\n    logger.error(`Request error while removing jobs with queue ${queueId} and type ${type} from jobs database`);\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nexport async function removeQueueFromDatabase(queueId:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction(['jobs', 'cleanups', 'arg-lookup'], 'readwrite', { durability: 'relaxed' });\n  const jobsObjectStore = transaction.objectStore('jobs');\n  const cleanupsObjectStore = transaction.objectStore('cleanups');\n  const argLookupObjectStore = transaction.objectStore('arg-lookup');\n  const promise = new Promise((resolve, reject) => {\n    transaction.onabort = (event) => {\n      logger.error('Read-write remove queue transaction was aborted');\n      logger.errorObject(event);\n      reject(new Error('Read-write emove queue transaction was aborted'));\n    };\n    transaction.onerror = (event) => {\n      logger.error('Error in read-write remove queue transaction');\n      logger.errorObject(event);\n      reject(new Error('Error in read-write remove queue transaction'));\n    };\n    transaction.oncomplete = () => {\n      resolve();\n    };\n  });\n  const queueIdIndex = jobsObjectStore.index('queueIdIndex');\n  const argLookupJobIdIndex = argLookupObjectStore.index('jobIdIndex');\n  // $FlowFixMe\n  const request = queueIdIndex.getAllKeys(IDBKeyRange.only(queueId));\n\n  request.onsuccess = function ({ target: { result: jobIds } }) {\n    for (const jobId of jobIds) {\n      const jobDeleteRequest = jobsObjectStore.delete(jobId);\n      localJobEmitter.emit('jobDelete', jobId, queueId);\n      jobEmitter.emit('jobDelete', jobId, queueId);\n      jobDeleteRequest.onerror = function (event) {\n        logger.error(`Request error while removing job ${jobId} in queue ${queueId} from database`);\n        logger.errorObject(event);\n      };\n      const cleanupDeleteRequest = cleanupsObjectStore.delete(jobId);\n      cleanupDeleteRequest.onerror = function (event) {\n        logger.error(`Request error while removing cleanup for job ${jobId} in queue ${queueId} from database`);\n        logger.errorObject(event);\n      };\n      // $FlowFixMe\n      const argLookupJobRequest = argLookupJobIdIndex.getAllKeys(IDBKeyRange.only(jobId));\n      argLookupJobRequest.onsuccess = function (event) {\n        for (const id of event.target.result) {\n          const argLookupDeleteRequest = argLookupObjectStore.delete(id);\n          argLookupDeleteRequest.onerror = function (deleteEvent) {\n            logger.error(`Delete request error while removing argument lookups for job ${jobId} in queue ${queueId} from database`);\n            logger.errorObject(deleteEvent);\n          };\n        }\n      };\n      argLookupJobRequest.onerror = function (event) {\n        logger.error(`Request error while removing argument lookups for job ${jobId} in queue ${queueId} from database`);\n        logger.errorObject(event);\n      };\n    }\n  };\n  request.onerror = function (event) {\n    logger.error(`Request error while removing queue ${queueId} from jobs database`);\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nexport async function removeCompletedExpiredItemsFromDatabase(maxAge:number) {\n  const [store, promise] = await getReadWriteJobsObjectStoreAndTransactionPromise();\n  const index = store.index('createdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.bound(0, Date.now() - maxAge));\n  request.onsuccess = function (event) {\n    for (const { id, queueId, status } of event.target.result) {\n      if (status !== JOB_COMPLETE_STATUS) {\n        continue;\n      }\n      removeJobFromObjectStore(store, id, queueId);\n    }\n  };\n  request.onerror = function (event) {\n    logger.error('Request error while removing completed exired items from jobs database');\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nexport async function updateJobInDatabase(id:number, transform:(Job | void) => Job | void | false):Promise<Job | void> {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      let newValue;\n      const value = request.result;\n      try {\n        newValue = transform(value);\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else if (newValue === false) {\n        if (typeof value !== 'undefined') {\n          const { queueId, type } = value;\n          const deleteRequest = store.delete(id);\n          localJobEmitter.emit('jobDelete', id, queueId);\n          jobEmitter.emit('jobDelete', id, queueId);\n          deleteRequest.onsuccess = function () {\n            removeArgLookupsForJobAsMicrotask(id);\n            resolve();\n          };\n          deleteRequest.onerror = function (event) {\n            logger.error(`Delete request error while updating job ${id} in queue ${queueId} and type ${type} in jobs database`);\n            logger.errorObject(event);\n            reject(new Error(`Delete request error while updating job ${id} in queue ${queueId} and type ${type} from jobs database`));\n          };\n        }\n      } else {\n        const { queueId, type, status } = newValue;\n        const putRequest = store.put(newValue);\n        localJobEmitter.emit('jobUpdate', id, queueId, type, status);\n        jobEmitter.emit('jobUpdate', id, queueId, type, status);\n        putRequest.onsuccess = function () {\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating job ${id} in queue ${queueId} and type ${type} in jobs database`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating job ${id} in queue ${queueId} and type ${type} from jobs database`));\n        };\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id}`));\n    };\n  });\n}\n\nexport async function getJobFromDatabase(id:number):Promise<Job | void> {\n  const store = await getReadOnlyJobsObjectStore();\n  const request = store.get(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function updateCleanupInDatabase(id:number, transform:(Cleanup | void) => Object):Promise<Cleanup | void> {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      let newValue;\n      try {\n        newValue = transform(request.result);\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else {\n        const putRequest = store.put(newValue);\n        putRequest.onsuccess = function () {\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating ${id} cleanup`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating ${id} cleanup`));\n        };\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id} cleanup`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id} cleanup`));\n    };\n  });\n}\n\nexport async function removePathFromCleanupDataInDatabase(id:number, path:Array<string>) {\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      return;\n    }\n    const { queueId, attempt, startAfter } = value;\n    const data = Object.assign({}, value.data);\n    unset(data, path);\n    return { // eslint-disable-line consistent-return\n      id,\n      queueId,\n      attempt,\n      startAfter,\n      data,\n    };\n  });\n}\n\n\nexport async function updateCleanupValuesInDatabase(id:number, queueId:string, data:Object) {\n  if (typeof id !== 'number') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof data !== 'object') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"data\" argument type \"${typeof data}\"`);\n  }\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    const combinedData = typeof value === 'undefined' ? data : merge({}, value.data, data);\n    return {\n      id,\n      queueId,\n      attempt: 0,\n      startAfter: Date.now(),\n      data: combinedData,\n    };\n  });\n}\n\nexport async function silentlyRemoveJobFromDatabase(id:number) {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.delete(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Delete request error while removing job ${id} from database`);\n      logger.errorObject(event);\n      reject(new Error(`Delete request error while removing job ${id} from database`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function removeJobFromDatabase(id:number) {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      const job = request.result;\n      if (typeof job === 'undefined') {\n        resolve();\n        return;\n      }\n      const { queueId, type } = job;\n      const deleteRequest = store.delete(id);\n      localJobEmitter.emit('jobDelete', id, queueId);\n      jobEmitter.emit('jobDelete', id, queueId);\n      deleteRequest.onsuccess = function () {\n        removeArgLookupsForJobAsMicrotask(id);\n        resolve();\n      };\n      deleteRequest.onerror = function (event) {\n        logger.error(`Delete request error while removing job ${id} in queue ${queueId} with type ${type} from database`);\n        logger.errorObject(event);\n        reject(new Error(`Delete request error while removing job ${id} in queue ${queueId} with type ${type} from database`));\n      };\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id} before removing from database`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id} before removing from database`));\n    };\n  });\n}\n\nexport async function removeCleanupFromDatabase(id:number) {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while removing cleanup data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Error while removing cleanup data for ${id}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getCleanupFromDatabase(id:number):Promise<Cleanup | void> {\n  const store = await getReadOnlyCleanupsObjectStore();\n  const request = store.get(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getMetadataFromDatabase(id:string) {\n  const store = await getReadOnlyMetadataObjectStore();\n  const request = store.get(id);\n  const response = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id} metadata`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id} metadata`));\n    };\n    store.transaction.commit();\n  });\n  return typeof response !== 'undefined' ? response.metadata : undefined;\n}\n\nexport async function clearMetadataInDatabase(id:string) {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while clearing ${id} metadata`);\n      logger.errorObject(event);\n      reject(new Error(`Error while clearing ${id} metadata`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function setMetadataInDatabase(id:string, metadata:Object) {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.put({\n    id,\n    metadata,\n  });\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while setting ${id} metadata`);\n      logger.errorObject(event);\n      reject(new Error(`Error while setting ${id} metadata`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function updateMetadataInDatabase(id:string, transform:(Object | void) => Object | void | false):Promise<Object | void> {\n  const store = await getReadWriteMetadataObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      let newValue;\n      const response = request.result;\n      const value = typeof response !== 'undefined' ? response.metadata : undefined;\n      try {\n        newValue = transform(value);\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else if (newValue === false) {\n        if (typeof value !== 'undefined') {\n          const deleteRequest = store.delete(id);\n          deleteRequest.onsuccess = function () {\n            resolve();\n          };\n          deleteRequest.onerror = function (event) {\n            logger.error(`Delete request error while updating ${id} in metadata database`);\n            logger.errorObject(event);\n            reject(new Error(`Delete request error while updating ${id} in metadata database`));\n          };\n        }\n      } else {\n        const putRequest = store.put({\n          id,\n          metadata: newValue,\n        });\n        putRequest.onsuccess = function () {\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating ${id} in metadata database`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating ${id} in metadata database`));\n        };\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id} in metadata database`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id} in metadata database`));\n    };\n  });\n}\n\nexport function markJobStatusInDatabase(id:number, status:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to mark job ${id} as status ${status} in database, job does not exist`);\n    }\n    value.status = status; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport function markJobCompleteInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_COMPLETE_STATUS);\n}\n\nexport function markJobPendingInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_PENDING_STATUS);\n}\n\nexport function markJobErrorInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_ERROR_STATUS);\n}\n\nexport function markJobCleanupInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_CLEANUP_STATUS);\n}\n\nexport function markJobAbortedInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_ABORTED_STATUS);\n}\n\nexport async function markJobCompleteThenRemoveFromDatabase(id:number):Promise<void> {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      const value = request.result;\n      if (typeof value !== 'undefined') {\n        const { queueId, type } = value;\n        localJobEmitter.emit('jobUpdate', id, queueId, type, JOB_COMPLETE_STATUS);\n        jobEmitter.emit('jobUpdate', id, queueId, type, JOB_COMPLETE_STATUS);\n        const deleteRequest = store.delete(id);\n        deleteRequest.onsuccess = function () {\n          localJobEmitter.emit('jobDelete', id, queueId);\n          jobEmitter.emit('jobDelete', id, queueId);\n          removeArgLookupsForJobAsMicrotask(id);\n          resolve();\n        };\n        deleteRequest.onerror = function (event) {\n          logger.error(`Delete request error while marking job ${id} in queue ${queueId} with type ${type} complete then removing from jobs database`);\n          logger.errorObject(event);\n          reject(new Error(`Delete request error while marking job ${id} in queue ${queueId} with type ${type} complete then removing from jobs database`));\n        };\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while marking job ${id} complete then removing from jobs database`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while marking job ${id} complete then removing from jobs database`));\n    };\n  });\n}\n\nexport function markJobCleanupAndRemoveInDatabase(id:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to mark job ${id} as status ${JOB_CLEANUP_AND_REMOVE_STATUS} in database, job does not exist`);\n    }\n    if (value.status === JOB_PENDING_STATUS) {\n      return false;\n    }\n    if (value.status === JOB_ABORTED_STATUS) {\n      return false;\n    }\n    value.status = JOB_CLEANUP_AND_REMOVE_STATUS; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport function markJobAsAbortedOrRemoveFromDatabase(id:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      return;\n    }\n    if (value.status === JOB_ERROR_STATUS) {\n      value.status = JOB_ABORTED_STATUS; // eslint-disable-line no-param-reassign\n      return value; // eslint-disable-line consistent-return\n    }\n    if (value.status === JOB_CLEANUP_STATUS) {\n      value.status = JOB_ABORTED_STATUS; // eslint-disable-line no-param-reassign\n      return value; // eslint-disable-line consistent-return\n    }\n    if (value.status === JOB_CLEANUP_AND_REMOVE_STATUS) {\n      return false; // eslint-disable-line consistent-return\n    }\n    throw new Error(`Unable to mark job ${id} as aborted or remove after cleanup, unable to handle status ${value.status}`);\n  });\n}\n\nexport function markJobStartAfterInDatabase(id:number, startAfter:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to mark job ${id} start-after time to ${new Date(startAfter).toLocaleString()} in database, job does not exist`);\n    }\n    if (startAfter < value.startAfter) {\n      return;\n    }\n    value.startAfter = startAfter; // eslint-disable-line no-param-reassign\n    return value; // eslint-disable-line consistent-return\n  });\n}\n\nexport function markCleanupStartAfterInDatabase(id:number, startAfter:number) {\n  return updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      throw new CleanupDoesNotExistError(`Unable to mark cleanup ${id} start-after time to ${new Date(startAfter).toLocaleString()} in database, cleanup does not exist`);\n    }\n    if (startAfter < value.startAfter) {\n      return;\n    }\n    value.startAfter = startAfter; // eslint-disable-line  no-param-reassign\n    return value; // eslint-disable-line consistent-return\n  });\n}\n\nexport async function markQueueForCleanupInDatabase(queueId:string) {\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(queueId));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const length = event.target.result.length;\n      let lastRequest;\n      for (let i = 0; i < length; i += 1) {\n        const value = Object.assign({}, event.target.result[i]);\n        switch (value.status) {\n          case JOB_ERROR_STATUS:\n            value.status = JOB_CLEANUP_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_COMPLETE_STATUS:\n            value.status = JOB_CLEANUP_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_PENDING_STATUS:\n            value.status = JOB_ABORTED_STATUS;\n            break;\n          case JOB_CLEANUP_STATUS:\n            jobs.push(value);\n            continue;\n          case JOB_CLEANUP_AND_REMOVE_STATUS:\n            jobs.push(value);\n            continue;\n          case JOB_ABORTED_STATUS:\n            continue;\n          default:\n            logger.warn(`Unhandled job status ${value.status} while marking queue ${queueId} for cleanup`);\n            continue;\n        }\n        const putRequest = store.put(value);\n        localJobEmitter.emit('jobUpdate', value.id, value.queueId, value.type, value.status);\n        jobEmitter.emit('jobUpdate', value.id, value.queueId, value.type, value.status);\n        lastRequest = putRequest;\n        putRequest.onerror = function (event2) {\n          logger.error(`Put request error while marking queue ${queueId} for cleanup`);\n          logger.errorObject(event2);\n          reject(new Error(`Put request error while marking queue ${queueId} for cleanup`));\n        };\n      }\n      if (typeof lastRequest !== 'undefined') {\n        lastRequest.onsuccess = function () {\n          resolve();\n        };\n      } else {\n        resolve();\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while marking queue ${queueId} for cleanup`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while marking queue ${queueId} for cleanup`));\n    };\n  });\n  return jobs;\n}\n\nexport async function markQueueJobsGreaterThanIdCleanupAndRemoveInDatabase(queueId:string, jobId:number) {\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(queueId));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const length = event.target.result.length;\n      let lastRequest;\n      for (let i = 0; i < length; i += 1) {\n        const value = Object.assign({}, event.target.result[i]);\n        if (value.id <= jobId) {\n          continue;\n        }\n        let shouldRemove = false;\n        switch (value.status) {\n          case JOB_ERROR_STATUS:\n            value.status = JOB_CLEANUP_AND_REMOVE_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_COMPLETE_STATUS:\n            value.status = JOB_CLEANUP_AND_REMOVE_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_PENDING_STATUS:\n            shouldRemove = true;\n            break;\n          case JOB_CLEANUP_STATUS:\n            value.status = JOB_CLEANUP_AND_REMOVE_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_CLEANUP_AND_REMOVE_STATUS:\n            jobs.push(value);\n            continue;\n          case JOB_ABORTED_STATUS:\n            shouldRemove = true;\n            break;\n          default:\n            logger.warn(`Unhandled job status ${value.status} while marking queue ${queueId} for cleanup and removal`);\n            continue;\n        }\n        const { id, type, status } = value;\n        if (shouldRemove) {\n          const deleteRequest = store.delete(id);\n          localJobEmitter.emit('jobDelete', id, queueId);\n          jobEmitter.emit('jobDelete', id, queueId);\n          lastRequest = deleteRequest;\n          deleteRequest.onerror = function (event2) {\n            logger.error(`Delete request error while marking queue ${queueId} for cleanup and removal`);\n            logger.errorObject(event2);\n            reject(new Error(`Delete request error while marking queue ${queueId} for cleanup and removal`));\n          };\n        } else {\n          const putRequest = store.put(value);\n          localJobEmitter.emit('jobUpdate', id, queueId, type, status);\n          jobEmitter.emit('jobUpdate', id, queueId, type, status);\n          lastRequest = putRequest;\n          putRequest.onerror = function (event2) {\n            logger.error(`Put request error while marking queue ${queueId} for cleanup and removal`);\n            logger.errorObject(event2);\n            reject(new Error(`Put request error while marking queue ${queueId} for cleanup and removal`));\n          };\n        }\n      }\n      if (typeof lastRequest !== 'undefined') {\n        lastRequest.onsuccess = function () {\n          resolve();\n        };\n      } else {\n        resolve();\n      }\n      store.transaction.commit();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while marking queue ${queueId} for cleanup and removal`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while marking queue ${queueId} for cleanup and removal`));\n    };\n  });\n  return jobs;\n}\n\n\nexport function markQueueForCleanupAndRemoveInDatabase(queueId:string) {\n  return markQueueJobsGreaterThanIdCleanupAndRemoveInDatabase(queueId, -1);\n}\n\nexport async function getGreatestJobIdFromQueueInDatabase(queueId:string) {\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only(queueId), 'prev');\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        resolve(cursor.value.id || 0);\n      } else {\n        resolve(0);\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting the greatest job ID in queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting the greatest job ID in queue ${queueId}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function incrementJobAttemptInDatabase(id:number) {\n  await updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new JobDoesNotExistError(`Unable to increment attempts for job ${id} in database, job does not exist`);\n    }\n    value.attempt += 1; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport async function incrementCleanupAttemptInDatabase(id:number, queueId:string) {\n  let attempt = 1;\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      return {\n        id,\n        queueId,\n        attempt: 1,\n        startAfter: Date.now(),\n        data: {},\n      };\n    }\n    attempt = value.attempt + 1;\n    value.attempt = attempt; // eslint-disable-line no-param-reassign\n    return value;\n  });\n  return attempt;\n}\n\nexport async function bulkEnqueueToDatabase(queueId: string, items:Array<[string, Array<any>]>, delay: number) { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (!Array.isArray(items)) {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"items\" argument type \"${typeof items}\"`);\n  }\n  for (let i = 0; i < items.length; i += 1) {\n    const [type, args] = items[i];\n    if (typeof type !== 'string') {\n      throw new TypeError(`Unable to bulk enqueue in database, received invalid items[${i}] \"type\" argument type \"${typeof type}\"`);\n    }\n    if (!Array.isArray(args)) {\n      throw new TypeError(`Unable to bulk enqueue in database, received invalid items[${i}] \"args\" argument type \"${typeof args}\"`);\n    }\n  }\n  if (typeof delay !== 'number') {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"delay\" argument type \"${typeof delay}\"`);\n  }\n  const ids = [];\n  const store = await getReadWriteJobsObjectStore();\n  await new Promise((resolve, reject) => {\n    for (let i = 0; i < items.length; i += 1) {\n      const [type, args] = items[i];\n      const value = {\n        queueId,\n        type,\n        args,\n        attempt: 0,\n        created: Date.now(),\n        status: JOB_PENDING_STATUS,\n        startAfter: Date.now() + delay,\n      };\n      const request = store.put(value);\n      request.onsuccess = function () {\n        const id = request.result;\n        ids.push(request.result);\n        localJobEmitter.emit('jobAdd', id, queueId, type);\n        jobEmitter.emit('jobAdd', id, queueId, type);\n        resolve(request.result);\n      };\n      request.onerror = function (event) {\n        logger.error(`Request error while bulk enqueueing ${items.length} ${items.length === 1 ? 'job' : 'jobs'} in queue ${queueId}`);\n        logger.errorObject(event);\n        reject(new Error(`Request error while bulk enqueueing ${items.length} ${items.length === 1 ? 'job' : 'jobs'} in queue ${queueId}`));\n      };\n    }\n    store.transaction.commit();\n  });\n  return ids;\n}\n\nexport async function enqueueToDatabase(queueId: string, type: string, args: Array<any>, delay: number) { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof type !== 'string') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"type\" argument type \"${typeof type}\"`);\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"args\" argument type \"${typeof args}\"`);\n  }\n  if (typeof delay !== 'number') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"delay\" argument type \"${typeof delay}\"`);\n  }\n  const value = {\n    queueId,\n    type,\n    args,\n    attempt: 0,\n    created: Date.now(),\n    status: JOB_PENDING_STATUS,\n    startAfter: Date.now() + delay,\n  };\n  const store = await getReadWriteJobsObjectStore();\n\n  const request = store.put(value);\n  const id = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while enqueueing ${type} job`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while enqueueing ${type} job`));\n    };\n    store.transaction.commit();\n  });\n  localJobEmitter.emit('jobAdd', id, queueId, type);\n  jobEmitter.emit('jobAdd', id, queueId, type);\n  return id;\n}\n\nexport async function restoreJobToDatabaseForCleanupAndRemove(id:number, queueId: string, type: string, args: Array<any>) { // eslint-disable-line no-underscore-dangle\n  if (typeof id !== 'number') {\n    throw new TypeError(`Unable to restore to database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to restore to database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof type !== 'string') {\n    throw new TypeError(`Unable to restore to database, received invalid \"type\" argument type \"${typeof type}\"`);\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError(`Unable to restore to database, received invalid \"args\" argument type \"${typeof args}\"`);\n  }\n  const value = {\n    id,\n    queueId,\n    type,\n    args,\n    attempt: 1,\n    created: Date.now(),\n    status: JOB_CLEANUP_AND_REMOVE_STATUS,\n    startAfter: Date.now(),\n  };\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.put(value);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while enqueueing ${type} job`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while enqueueing ${type} job`));\n    };\n    store.transaction.commit();\n  });\n  localJobEmitter.emit('jobAdd', id, queueId, type);\n  jobEmitter.emit('jobAdd', id, queueId, type);\n  return id;\n}\n\nexport async function dequeueFromDatabase():Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.bound(JOB_CLEANUP_AND_REMOVE_STATUS, JOB_PENDING_STATUS));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error('Request error while dequeing');\n      logger.errorObject(event);\n      reject(new Error('Request error while dequeing'));\n    };\n    store.transaction.commit();\n  });\n  return jobs;\n}\n\nexport function getContiguousIds(ids:Array<number>) {\n  ids.sort((a, b) => a - b);\n  const points = [[0, ids[0] - 1]];\n  for (let i = 0; i < ids.length; i += 1) {\n    if (ids[i] + 1 !== ids[i + 1]) {\n      if (i + 1 >= ids.length) {\n        points.push([ids[i] + 1, Infinity]);\n      } else {\n        points.push([ids[i] + 1, ids[i + 1] - 1]);\n      }\n    }\n  }\n  return points;\n}\n\nexport async function dequeueFromDatabaseNotIn(ids:Array<number>):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (ids.length === 0) {\n    return dequeueFromDatabase();\n  }\n  const [store, promise] = await getReadOnlyJobsObjectStoreAndTransactionPromise();\n  const index = store.index('statusIndex');\n  const jobs = [];\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.bound(JOB_CLEANUP_AND_REMOVE_STATUS, JOB_PENDING_STATUS));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      if (ids.includes(id)) {\n        continue;\n      }\n      const getRequest = store.get(id);\n      getRequest.onsuccess = function () {\n        jobs.push(getRequest.result);\n      };\n      getRequest.onerror = function (event2) {\n        logger.error(`Request error while getting job ${id}`);\n        logger.errorObject(event2);\n      };\n    }\n    store.transaction.commit();\n  };\n  request.onerror = function (event) {\n    logger.error('Request error while dequeing');\n    logger.errorObject(event);\n  };\n  await promise;\n  return jobs;\n}\n\nexport async function getJobsWithTypeFromDatabase(type:string):Promise<Array<Job>> {\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('typeIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(type));\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting jobs with type ${type} from jobs database`);\n      logger.errorObject(event);\n      reject(new Error(`Error while getting jobs with type ${type} from jobs database`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getJobsInQueueFromDatabase(queueId: string):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to get jobs in queue from database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(queueId));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error('Request error while dequeing');\n      logger.errorObject(event);\n      reject(new Error('Request error while dequeing'));\n    };\n    store.transaction.commit();\n  });\n  return jobs;\n}\n\nexport async function getJobsInDatabase(jobIds: Array<number>):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (!Array.isArray(jobIds)) {\n    throw new TypeError(`Unable to get jobs from database, received invalid \"jobIds\" argument type \"${typeof jobIds}\"`);\n  }\n  const [store, promise] = await getReadOnlyJobsObjectStoreAndTransactionPromise();\n  const jobs = [];\n  for (const jobId of jobIds) {\n    const request = store.get(jobId);\n    request.onsuccess = function () {\n      if (typeof request.result !== 'undefined') {\n        jobs.push(request.result);\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting job ${jobId}`);\n      logger.errorObject(event);\n    };\n  }\n  store.transaction.commit();\n  await promise;\n  return jobs;\n}\n\nexport async function getCompletedJobsCountFromDatabase(queueId: string) { // eslint-disable-line no-underscore-dangle\n  const jobs = await getCompletedJobsFromDatabase(queueId);\n  return jobs.length;\n}\n\n\nexport async function getCompletedJobsFromDatabase(queueId: string):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to get completed jobs database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusQueueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only([queueId, JOB_COMPLETE_STATUS]));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting completed jobs for queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting completed jobs for queue ${queueId}`));\n    };\n    store.transaction.commit();\n  });\n  return jobs;\n}\n\n\nexport async function storeAuthDataInDatabase(id:string, data: Object) { // eslint-disable-line no-underscore-dangle\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof data !== 'object') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"data\" argument type \"${typeof data}\"`);\n  }\n  const store = await getReadWriteAuthObjectStore();\n  const request = store.put({ id, data });\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while storing auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while storing auth data for ${id}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getAuthDataFromDatabase(id:string) {\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  const store = await getReadOnlyAuthObjectStore();\n  const request = store.get(id);\n  const authData = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting auth data for ${id}`));\n    };\n    store.transaction.commit();\n  });\n  return typeof authData !== 'undefined' ? authData.data : undefined;\n}\n\nexport async function removeAuthDataFromDatabase(id:string) {\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  const store = await getReadWriteAuthObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while removing auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Error while removing auth data for ${id}`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getQueueStatus(queueId:string) {\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusQueueIdIndex');\n  // $FlowFixMe\n  const abortedRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_ABORTED_STATUS]));\n  // $FlowFixMe\n  const completeRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_COMPLETE_STATUS]));\n  // $FlowFixMe\n  const pendingRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_PENDING_STATUS]));\n  // $FlowFixMe\n  const errorRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_ERROR_STATUS]));\n  // $FlowFixMe\n  const cleanupRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_CLEANUP_STATUS]));\n  // $FlowFixMe\n  const cleanupAndRemoveRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_CLEANUP_AND_REMOVE_STATUS]));\n  const abortedCountPromise = new Promise((resolve, reject) => {\n    abortedRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    abortedRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const completeCountPromise = new Promise((resolve, reject) => {\n    completeRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    completeRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const pendingCountPromise = new Promise((resolve, reject) => {\n    pendingRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    pendingRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const errorCountPromise = new Promise((resolve, reject) => {\n    errorRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    errorRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const cleanupCountPromise = new Promise((resolve, reject) => {\n    cleanupRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    cleanupRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const cleanupAndRemoveCountPromise = new Promise((resolve, reject) => {\n    cleanupAndRemoveRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    cleanupAndRemoveRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  store.transaction.commit();\n  const [\n    abortedCount,\n    completeCount,\n    pendingCount,\n    errorCount,\n    cleanupCount,\n    cleanupAndRemoveCount,\n  ] = await Promise.all([\n    abortedCountPromise,\n    completeCountPromise,\n    pendingCountPromise,\n    errorCountPromise,\n    cleanupCountPromise,\n    cleanupAndRemoveCountPromise,\n  ]);\n  if (abortedCount > 0 || cleanupCount > 0) {\n    return QUEUE_ERROR_STATUS;\n  }\n  if (errorCount > 0 || pendingCount > 0 || cleanupAndRemoveCount > 0) {\n    return QUEUE_PENDING_STATUS;\n  }\n  if (completeCount > 0) {\n    return QUEUE_COMPLETE_STATUS;\n  }\n  return QUEUE_EMPTY_STATUS;\n}\n\nexport async function addArgLookup(jobId:number, key:string, jsonPath:string) {\n  if (typeof jobId !== 'number') {\n    throw new TypeError(`Unable add argument lookup, received invalid \"jobId\" argument type \"${typeof jobId}\"`);\n  }\n  if (typeof key !== 'string') {\n    throw new TypeError(`Unable add argument lookup, received invalid \"key\" argument type \"${typeof key}\"`);\n  }\n  if (typeof jsonPath !== 'string') {\n    throw new TypeError(`Unable add argument lookup, received invalid \"jsonPath\" argument type \"${typeof jsonPath}\"`);\n  }\n  const store = await getReadWriteArgLookupObjectStore();\n  const request = store.put({\n    jobId,\n    key,\n    jsonPath,\n  });\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while adding argument lookup for job ${jobId} with key \"${key}\" and JSON path \"${jsonPath}\"`);\n      logger.errorObject(event);\n      reject(new Error(`Error while adding argument lookup for job ${jobId} with key \"${key}\" and JSON path \"${jsonPath}\"`));\n    };\n    store.transaction.commit();\n  });\n}\n\nexport async function getArgLookupJobPathMap(key:string) {\n  if (typeof key !== 'string') {\n    throw new TypeError(`Unable to lookup arguments, received invalid \"key\" argument type \"${typeof key}\"`);\n  }\n  const store = await getReadOnlyArgLookupObjectStore();\n  const index = store.index('keyIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(key));\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const map: Map<number, string> = new Map(event.target.result.map((x) => [x.jobId, x.jsonPath]));\n      resolve(map);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error looking up arguments for key ${key}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error looking up arguments for key ${key}`));\n    };\n    store.transaction.commit();\n  });\n}\n\n\nexport async function markJobsWithArgLookupKeyCleanupAndRemoveInDatabase(key:string) {\n  if (typeof key !== 'string') {\n    throw new TypeError(`Unable to lookup arguments, received invalid \"key\" argument type \"${typeof key}\"`);\n  }\n  const store = await getReadOnlyArgLookupObjectStore();\n  const index = store.index('keyIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(key));\n  const jobIds = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(uniq(event.target.result.map((x) => x.jobId)));\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error looking up arguments for key ${key}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error looking up arguments for key ${key}`));\n    };\n    store.transaction.commit();\n  });\n  await Promise.all(jobIds.map(markJobCleanupAndRemoveInDatabase));\n}\n\nexport async function lookupArgs(key:string) {\n  const database = await databasePromise;\n  const transaction = database.transaction(['arg-lookup', 'jobs'], 'readonly', { durability: 'relaxed' });\n  const argLookupObjectStore = transaction.objectStore('arg-lookup');\n  transaction.onabort = (event) => {\n    logger.error('Read-only lookupArgs transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-only lookupArgs transaction');\n    logger.errorObject(event);\n  };\n  const argLookupIndex = argLookupObjectStore.index('keyIndex');\n  // $FlowFixMe\n  const argLookupRequest = argLookupIndex.getAll(IDBKeyRange.only(key));\n  const results = [];\n  return new Promise((resolve, reject) => {\n    argLookupRequest.onsuccess = function (argLookupEvent) {\n      const argLookups = argLookupEvent.target.result;\n      if (argLookups.length === 0) {\n        resolve([]);\n        transaction.commit();\n        return;\n      }\n      const jobsObjectStore = transaction.objectStore('jobs');\n      for (let i = 0; i < argLookups.length; i += 1) {\n        const { jobId, jsonPath } = argLookups[i];\n        const jobRequest = jobsObjectStore.get(jobId);\n        jobRequest.onsuccess = function () {\n          if (typeof jobRequest.result === 'undefined') {\n            return;\n          }\n          const { args } = jobRequest.result;\n          for (const result of JSONPath({ path: jsonPath, json: args })) {\n            results.push(result);\n          }\n          if (i === argLookups.length - 1) {\n            resolve(results);\n          }\n        };\n        jobRequest.onerror = function (event) {\n          logger.error(`Request error while getting job ${jobId}`);\n          logger.errorObject(event);\n          reject(new Error(`Request error looking up jobs for key ${key}`));\n        };\n      }\n      transaction.commit();\n    };\n    argLookupRequest.onerror = function (event) {\n      logger.error(`Request error looking up arguments for key ${key}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error looking up arguments for key ${key}`));\n    };\n  });\n}\n\nexport async function lookupArg(key:string) {\n  const results = await lookupArgs(key);\n  return results[0];\n}\n\nfunction removeArgLookupsForJobAsMicrotask(jobId:number) {\n  self.queueMicrotask(() => removeArgLookupsForJob(jobId).catch((error) => {\n    logger.error(`Unable to remove argument lookups for job ${jobId} in microtask`);\n    logger.errorStack(error);\n  }));\n}\n\nexport async function removeArgLookupsForJob(jobId:number) {\n  const [store, promise] = await getReadWriteArgLookupObjectStoreAndTransactionPromise();\n  const index = store.index('jobIdIndex');\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.only(jobId));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      const deleteRequest = store.delete(id);\n      deleteRequest.onerror = function (deleteEvent) {\n        logger.error(`Delete request error while removing argument lookups for job ${jobId}`);\n        logger.errorObject(deleteEvent);\n      };\n    }\n    store.transaction.commit();\n  };\n  request.onerror = function (event) {\n    logger.error(`Request error while removing argument lookups for job ${jobId}`);\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nconst UNLOAD_DATA_ID = '_UNLOAD_DATA';\n\nexport function updateUnloadDataInDatabase(transform:(Object | void) => Object | void | false):Promise<Object | void> {\n  return updateMetadataInDatabase(UNLOAD_DATA_ID, transform);\n}\n\nexport function getUnloadDataFromDatabase() {\n  return getMetadataFromDatabase(UNLOAD_DATA_ID);\n}\n\nexport function clearUnloadDataInDatabase() {\n  return clearMetadataInDatabase(UNLOAD_DATA_ID);\n}\n\n"],"file":"database.js"}
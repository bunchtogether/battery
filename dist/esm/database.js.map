{"version":3,"sources":["../../src/database.js"],"names":["merge","unset","EventEmitter","makeLogger","localJobEmitter","jobEmitter","logger","QUEUE_ERROR_STATUS","QUEUE_PENDING_STATUS","QUEUE_COMPLETE_STATUS","QUEUE_EMPTY_STATUS","JOB_ABORTED_STATUS","JOB_COMPLETE_STATUS","JOB_PENDING_STATUS","JOB_ERROR_STATUS","JOB_CLEANUP_STATUS","databasePromise","request","self","indexedDB","open","onupgradeneeded","e","store","target","result","createObjectStore","keyPath","autoIncrement","createIndex","unique","error","name","db","Promise","resolve","reject","onerror","Error","onsuccess","event","getReadWriteAuthObjectStore","database","transaction","objectStore","onabort","errorObject","getReadOnlyAuthObjectStore","getReadWriteQueueDataObjectStore","getReadOnlyQueueDataObjectStore","getReadWriteJobsObjectStoreAndTransactionPromise","promise","oncomplete","getReadOnlyJobsObjectStoreAndTransactionPromise","getReadWriteJobsObjectStore","getReadOnlyJobsObjectStore","getReadWriteCleanupsObjectStore","getReadOnlyCleanupsObjectStore","clearQueueDataDatabase","clear","clearJobsDatabase","emit","clearCleanupsDatabase","clearDatabase","removeJobsWithQueueIdAndTypeFromDatabase","queueId","type","index","getAllKeys","IDBKeyRange","only","id","deleteRequest","delete","deleteEvent","removeQueueIdFromJobsDatabase","removeQueueIdFromCleanupsDatabase","openCursor","cursor","primaryKey","continue","removeQueueIdFromDatabase","removeCompletedExpiredItemsFromDatabase","maxAge","getAll","bound","Date","now","status","updateJobInDatabase","transform","get","newValue","putRequest","put","getJobFromDatabase","updateCleanupInDatabase","removePathFromCleanupDataInDatabase","path","value","attempt","startAfter","data","Object","assign","updateCleanupValuesInDatabase","TypeError","combinedData","removeCleanupFromDatabase","getCleanupFromDatabase","getQueueDataFromDatabase","queueData","undefined","updateQueueDataInDatabase","markJobStatusInDatabase","markJobCompleteInDatabase","markJobPendingInDatabase","markJobErrorInDatabase","markJobCleanupInDatabase","markJobAbortedInDatabase","markJobStartAfterInDatabase","toLocaleString","markCleanupStartAfterInDatabase","markQueueForCleanupInDatabase","jobs","push","warn","updateRequest","update","event2","incrementJobAttemptInDatabase","incrementCleanupAttemptInDatabase","bulkEnqueueToDatabase","items","delay","Array","isArray","i","length","args","ids","created","enqueueToDatabase","dequeueFromDatabase","getContiguousIds","sort","a","b","points","Infinity","dequeueFromDatabaseNotIn","includes","getRequest","getJobsFromDatabase","getCompletedJobsCountFromDatabase","getCompletedJobsFromDatabase","storeAuthDataInDatabase","getAuthDataFromDatabase","authData","removeAuthDataFromDatabase","getQueueStatus","abortedRequest","completeRequest","pendingRequest","errorRequest","cleanupRequest","abortedCountPromise","completeCountPromise","pendingCountPromise","errorCountPromise","cleanupCountPromise","abortedCount","completeCount","pendingCount","errorCount","cleanupCount","all"],"mappings":"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","sourcesContent":["// @flow\n\nimport merge from 'lodash/merge';\nimport unset from 'lodash/unset';\nimport EventEmitter from 'events';\nimport makeLogger from './logger';\n\n// Local job emitter is for this process only,\n// jobEmitter is bridged when a MessagePort is open\nexport const localJobEmitter = new EventEmitter();\nexport const jobEmitter = new EventEmitter();\n\nconst logger = makeLogger('Jobs Database');\n\nexport type Job = {\n  id: number,\n  queueId:string,\n  type:string,\n  args:Array<any>,\n  attempt: number,\n  created: number,\n  status: number,\n  startAfter: number\n};\n\n\ntype Cleanup = {\n  id: number,\n  queueId:string,\n  data: Object,\n  attempt: number,\n  startAfter: number\n};\n\nexport const QUEUE_ERROR_STATUS = 0;\nexport const QUEUE_PENDING_STATUS = 1;\nexport const QUEUE_COMPLETE_STATUS = 2;\nexport const QUEUE_EMPTY_STATUS = 3;\n\nexport const JOB_ABORTED_STATUS = 2;\nexport const JOB_COMPLETE_STATUS = 1;\nexport const JOB_PENDING_STATUS = 0;\nexport const JOB_ERROR_STATUS = -1;\nexport const JOB_CLEANUP_STATUS = -2;\n\n\nexport const databasePromise = (async () => {\n  const request = self.indexedDB.open('battery-queue-01', 2);\n\n  request.onupgradeneeded = function (e) {\n    try {\n      const store = e.target.result.createObjectStore('jobs', { keyPath: 'id', autoIncrement: true });\n      store.createIndex('statusIndex', 'status', { unique: false });\n      store.createIndex('queueIdIndex', 'queueId', { unique: false });\n      store.createIndex('queueIdTypeIndex', ['queueId', 'type'], { unique: false });\n      store.createIndex('statusQueueIdIndex', ['queueId', 'status'], { unique: false });\n      store.createIndex('createdIndex', 'created', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      e.target.result.createObjectStore('queue-data', { keyPath: 'queueId' });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      const store = e.target.result.createObjectStore('cleanups', { keyPath: 'id' });\n      store.createIndex('queueIdIndex', 'queueId', { unique: false });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n    try {\n      e.target.result.createObjectStore('auth-data', { keyPath: 'id' });\n    } catch (error) {\n      if (!(error.name === 'ConstraintError')) {\n        throw error;\n      }\n    }\n  };\n\n  const db = await new Promise((resolve, reject) => {\n    request.onerror = () => {\n      reject(new Error('Unable to open database'));\n    };\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n  });\n\n  return db;\n})();\n\nasync function getReadWriteAuthObjectStore() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['auth-data'], 'readwrite');\n  const objectStore = transaction.objectStore('auth-data');\n  transaction.onabort = (event) => {\n    logger.error('Read-write auth transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-write auth transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyAuthObjectStore() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['auth-data'], 'readonly');\n  const objectStore = transaction.objectStore('auth-data');\n  transaction.onabort = (event) => {\n    logger.error('Read-only auth transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-only auth transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadWriteQueueDataObjectStore() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['queue-data'], 'readwrite');\n  const objectStore = transaction.objectStore('queue-data');\n  transaction.onabort = (event) => {\n    logger.error('Read-write queue data transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-write queue data transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyQueueDataObjectStore() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['queue-data'], 'readonly');\n  const objectStore = transaction.objectStore('queue-data');\n  transaction.onabort = (event) => {\n    logger.error('Read-only queue data transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-only queue data transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadWriteJobsObjectStoreAndTransactionPromise() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['jobs'], 'readwrite');\n  const objectStore = transaction.objectStore('jobs');\n  const promise = new Promise((resolve, reject) => {\n    transaction.onabort = (event) => {\n      logger.error('Read-write jobs transaction was aborted');\n      logger.errorObject(event);\n      reject(new Error('Read-write jobs transaction was aborted'));\n    };\n    transaction.onerror = (event) => {\n      logger.error('Error in read-write jobs transaction');\n      logger.errorObject(event);\n      reject(new Error('Error in read-write jobs transaction'));\n    };\n    transaction.oncomplete = () => {\n      resolve();\n    };\n  });\n  return [objectStore, promise];\n}\n\nasync function getReadOnlyJobsObjectStoreAndTransactionPromise() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['jobs'], 'readonly');\n  const objectStore = transaction.objectStore('jobs');\n  const promise = new Promise((resolve, reject) => {\n    transaction.onabort = (event) => {\n      logger.error('Read-only jobs transaction was aborted');\n      logger.errorObject(event);\n      reject(new Error('Read-only jobs transaction was aborted'));\n    };\n    transaction.onerror = (event) => {\n      logger.error('Error in read-only jobs transaction');\n      logger.errorObject(event);\n      reject(new Error('Error in read-only jobs transaction'));\n    };\n    transaction.oncomplete = () => {\n      resolve();\n    };\n  });\n  return [objectStore, promise];\n}\n\nasync function getReadWriteJobsObjectStore() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['jobs'], 'readwrite');\n  const objectStore = transaction.objectStore('jobs');\n  transaction.onabort = (event) => {\n    logger.error('Read-write jobs transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-write jobs transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyJobsObjectStore() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['jobs'], 'readonly');\n  const objectStore = transaction.objectStore('jobs');\n  transaction.onabort = (event) => {\n    logger.error('Read-only jobs transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-only jobs transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadWriteCleanupsObjectStore() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['cleanups'], 'readwrite');\n  const objectStore = transaction.objectStore('cleanups');\n  transaction.onabort = (event) => {\n    logger.error('Read-write cleanups transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-write cleanups transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function getReadOnlyCleanupsObjectStore() {\n  const database = await databasePromise;\n  const transaction = database.transaction(['cleanups'], 'readonly');\n  const objectStore = transaction.objectStore('cleanups');\n  transaction.onabort = (event) => {\n    logger.error('Read-only cleanups transaction was aborted');\n    logger.errorObject(event);\n  };\n  transaction.onerror = (event) => {\n    logger.error('Error in read-only cleanups transaction');\n    logger.errorObject(event);\n  };\n  return objectStore;\n}\n\nasync function clearQueueDataDatabase() {\n  const store = await getReadWriteQueueDataObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing queue data database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing queue data database'));\n    };\n  });\n}\n\nasync function clearJobsDatabase() {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing jobs database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing jobs database'));\n    };\n  });\n  localJobEmitter.emit('jobsClear');\n  jobEmitter.emit('jobsClear');\n}\n\nasync function clearCleanupsDatabase() {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.clear();\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error('Error while clearing cleanups database');\n      logger.errorObject(event);\n      reject(new Error('Error while clearing cleanups database'));\n    };\n  });\n}\n\nexport async function clearDatabase() {\n  await clearJobsDatabase();\n  await clearCleanupsDatabase();\n  await clearQueueDataDatabase();\n}\n\nexport async function removeJobsWithQueueIdAndTypeFromDatabase(queueId:string, type:string) {\n  const [store, promise] = await getReadWriteJobsObjectStoreAndTransactionPromise();\n  const index = store.index('queueIdTypeIndex');\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.only([queueId, type]));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      localJobEmitter.emit('jobDelete', id, queueId);\n      jobEmitter.emit('jobDelete', id, queueId);\n      const deleteRequest = store.delete(id);\n      deleteRequest.onerror = function (deleteEvent) {\n        logger.error(`Request error while removing job ${id} in queue ${queueId} and type ${type} from jobs database`);\n        logger.errorObject(deleteEvent);\n      };\n    }\n  };\n  request.onerror = function (event) {\n    logger.error(`Request error while removing jobs with queue ${queueId} and type ${type} from jobs database`);\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nexport async function removeQueueIdFromJobsDatabase(queueId:string) {\n  const [store, promise] = await getReadWriteJobsObjectStoreAndTransactionPromise();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.only(queueId));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      localJobEmitter.emit('jobDelete', id, queueId);\n      jobEmitter.emit('jobDelete', id, queueId);\n      const deleteRequest = store.delete(id);\n      deleteRequest.onerror = function (deleteEvent) {\n        logger.error(`Request error while removing job ${id} in queue ${queueId} from jobs database`);\n        logger.errorObject(deleteEvent);\n      };\n    }\n  };\n  request.onerror = function (event) {\n    logger.error(`Request error while removing queue ${queueId} from jobs database`);\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nasync function removeQueueIdFromCleanupsDatabase(queueId:string) {\n  const store = await getReadWriteCleanupsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only(queueId));\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        store.delete(cursor.primaryKey);\n        cursor.continue();\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while removing queue ${queueId} from jobs database`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while removing queue ${queueId} from jobs database`));\n    };\n  });\n}\n\nexport async function removeQueueIdFromDatabase(queueId:string) {\n  await removeQueueIdFromJobsDatabase(queueId);\n  await removeQueueIdFromCleanupsDatabase(queueId);\n}\n\nexport async function removeCompletedExpiredItemsFromDatabase(maxAge:number) {\n  const [store, promise] = await getReadWriteJobsObjectStoreAndTransactionPromise();\n  const index = store.index('createdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.bound(0, Date.now() - maxAge));\n  request.onsuccess = function (event) {\n    for (const { id, queueId, status } of event.target.result) {\n      if (status !== JOB_COMPLETE_STATUS) {\n        continue;\n      }\n      const deleteRequest = store.delete(id);\n      deleteRequest.onsuccess = function () {\n        localJobEmitter.emit('jobDelete', id, queueId);\n        jobEmitter.emit('jobDelete', id, queueId);\n      };\n      deleteRequest.onerror = function (deleteEvent) {\n        logger.error(`Request error while removing job ${id} in queue ${queueId} from completed exired items from jobs database`);\n        logger.errorObject(deleteEvent);\n      };\n    }\n  };\n  request.onerror = function (event) {\n    logger.error('Request error while removing completed exired items from jobs database');\n    logger.errorObject(event);\n  };\n  await promise;\n}\n\nexport async function updateJobInDatabase(id:number, transform:(Job | void) => Object):Promise<Job | void> {\n  const store = await getReadWriteJobsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      const newValue = transform(request.result);\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else {\n        const putRequest = store.put(newValue);\n        putRequest.onsuccess = function () {\n          localJobEmitter.emit('jobUpdate', newValue.id, newValue.queueId, newValue.type, newValue.status);\n          jobEmitter.emit('jobUpdate', newValue.id, newValue.queueId, newValue.type, newValue.status);\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating ${id}`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating ${id}`));\n        };\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id}`));\n    };\n  });\n}\n\nexport async function getJobFromDatabase(id:number):Promise<Job | void> {\n  const store = await getReadOnlyJobsObjectStore();\n  const request = store.get(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id}`));\n    };\n  });\n}\n\nexport async function updateCleanupInDatabase(id:number, transform:(Cleanup | void) => Object):Promise<Cleanup | void> {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.get(id);\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      const newValue = transform(request.result);\n      if (typeof newValue === 'undefined') {\n        resolve();\n      } else {\n        const putRequest = store.put(newValue);\n        putRequest.onsuccess = function () {\n          resolve();\n        };\n        putRequest.onerror = function (event) {\n          logger.error(`Put request error while updating ${id} cleanup`);\n          logger.errorObject(event);\n          reject(new Error(`Put request error while updating ${id} cleanup`));\n        };\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Get request error while updating ${id} cleanup`);\n      logger.errorObject(event);\n      reject(new Error(`Get request error while updating ${id} cleanup`));\n    };\n  });\n}\n\nexport async function removePathFromCleanupDataInDatabase(id:number, path:Array<string>) {\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      return;\n    }\n    const { queueId, attempt, startAfter } = value;\n    const data = Object.assign({}, value.data);\n    unset(data, path);\n    return { // eslint-disable-line consistent-return\n      id,\n      queueId,\n      attempt,\n      startAfter,\n      data,\n    };\n  });\n}\n\n\nexport async function updateCleanupValuesInDatabase(id:number, queueId:string, data:Object) {\n  if (typeof id !== 'number') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof data !== 'object') {\n    throw new TypeError(`Unable to update cleanup in database, received invalid \"data\" argument type \"${typeof data}\"`);\n  }\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    const combinedData = typeof value === 'undefined' ? data : merge({}, value.data, data);\n    return {\n      id,\n      queueId,\n      attempt: 0,\n      startAfter: Date.now(),\n      data: combinedData,\n    };\n  });\n}\n\nexport async function removeCleanupFromDatabase(id:number) {\n  const store = await getReadWriteCleanupsObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while removing cleanup data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Error while removing cleanup data for ${id}`));\n    };\n  });\n}\n\nexport async function getCleanupFromDatabase(id:number):Promise<Cleanup | void> {\n  const store = await getReadOnlyCleanupsObjectStore();\n  const request = store.get(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting ${id}`));\n    };\n  });\n}\n\nexport async function getQueueDataFromDatabase(queueId:string) {\n  const store = await getReadOnlyQueueDataObjectStore();\n  const request = store.get(queueId);\n  const queueData = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting queue ${queueId} data`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting queue ${queueId} data`));\n    };\n  });\n  return typeof queueData !== 'undefined' ? queueData.data : undefined;\n}\n\nexport async function updateQueueDataInDatabase(queueId:string, data:Object) {\n  const value = await getQueueDataFromDatabase(queueId);\n  const store = await getReadWriteQueueDataObjectStore();\n  const request = store.put({\n    queueId,\n    data: merge({}, value, data),\n  });\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while updating queue ${queueId} data`);\n      logger.errorObject(event);\n      reject(new Error(`Error while updating queue ${queueId} data`));\n    };\n  });\n}\n\nexport async function markJobStatusInDatabase(id:number, status:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new Error(`Unable to mark job ${id} as status ${status} in database, job does not exist`);\n    }\n    value.status = status; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport function markJobCompleteInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_COMPLETE_STATUS);\n}\n\nexport function markJobPendingInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_PENDING_STATUS);\n}\n\nexport function markJobErrorInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_ERROR_STATUS);\n}\n\nexport function markJobCleanupInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_CLEANUP_STATUS);\n}\n\nexport function markJobAbortedInDatabase(id:number) {\n  return markJobStatusInDatabase(id, JOB_ABORTED_STATUS);\n}\n\nexport async function markJobStartAfterInDatabase(id:number, startAfter:number) {\n  return updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new Error(`Unable to mark job ${id} start-after time to ${new Date(startAfter).toLocaleString()} in database, job does not exist`);\n    }\n    if (startAfter < value.startAfter) {\n      return;\n    }\n    value.startAfter = startAfter; // eslint-disable-line no-param-reassign\n    return value; // eslint-disable-line consistent-return\n  });\n}\n\nexport async function markCleanupStartAfterInDatabase(id:number, startAfter:number) {\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      throw new Error(`Unable to mark cleanup ${id} start-after time to ${new Date(startAfter).toLocaleString()} in database, cleanup does not exist`);\n    }\n    if (startAfter < value.startAfter) {\n      return;\n    }\n    value.startAfter = startAfter; // eslint-disable-line  no-param-reassign\n    return value; // eslint-disable-line consistent-return\n  });\n}\n\nexport async function markQueueForCleanupInDatabase(queueId:string) {\n  const store = await getReadWriteJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only(queueId));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        const value = Object.assign({}, cursor.value);\n        switch (value.status) {\n          case JOB_ERROR_STATUS:\n            value.status = JOB_CLEANUP_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_COMPLETE_STATUS:\n            value.status = JOB_CLEANUP_STATUS;\n            jobs.push(value);\n            break;\n          case JOB_PENDING_STATUS:\n            value.status = JOB_ABORTED_STATUS;\n            break;\n          case JOB_CLEANUP_STATUS:\n            cursor.continue();\n            return;\n          case JOB_ABORTED_STATUS:\n            cursor.continue();\n            return;\n          default:\n            logger.warn(`Unhandled job status ${value.status}`);\n            cursor.continue();\n            return;\n        }\n        const updateRequest = cursor.update(value);\n        updateRequest.onsuccess = function () {\n          localJobEmitter.emit('jobUpdate', value.id, value.queueId, value.type, value.status);\n          jobEmitter.emit('jobUpdate', value.id, value.queueId, value.type, value.status);\n          cursor.continue();\n        };\n        updateRequest.onerror = function (event2) {\n          logger.error(`Update request error while marking queue ${queueId} error`);\n          logger.errorObject(event2);\n          cursor.continue();\n        };\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while marking queue ${queueId} error`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while marking queue ${queueId} error`));\n    };\n  });\n  return jobs;\n}\n\nexport async function incrementJobAttemptInDatabase(id:number) {\n  await updateJobInDatabase(id, (value:Job | void) => {\n    if (typeof value === 'undefined') {\n      throw new Error(`Unable to increment attempts for job ${id} in database, job does not exist`);\n    }\n    value.attempt += 1; // eslint-disable-line no-param-reassign\n    return value;\n  });\n}\n\nexport async function incrementCleanupAttemptInDatabase(id:number, queueId:string) {\n  let attempt = 1;\n  await updateCleanupInDatabase(id, (value: Cleanup | void) => {\n    if (typeof value === 'undefined') {\n      return {\n        id,\n        queueId,\n        attempt: 1,\n        startAfter: Date.now(),\n        data: {},\n      };\n    }\n    attempt = value.attempt + 1;\n    value.attempt = attempt; // eslint-disable-line no-param-reassign\n    return value;\n  });\n  return attempt;\n}\n\nexport async function bulkEnqueueToDatabase(queueId: string, items:Array<[string, Array<any>]>, delay: number) { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (!Array.isArray(items)) {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"items\" argument type \"${typeof items}\"`);\n  }\n  for (let i = 0; i < items.length; i += 1) {\n    const [type, args] = items[i];\n    if (typeof type !== 'string') {\n      throw new TypeError(`Unable to bulk enqueue in database, received invalid items[${i}] \"type\" argument type \"${typeof type}\"`);\n    }\n    if (!Array.isArray(args)) {\n      throw new TypeError(`Unable to bulk enqueue in database, received invalid items[${i}] \"args\" argument type \"${typeof args}\"`);\n    }\n  }\n  if (typeof delay !== 'number') {\n    throw new TypeError(`Unable to bulk enqueue in database, received invalid \"delay\" argument type \"${typeof delay}\"`);\n  }\n  const ids = [];\n  const store = await getReadWriteJobsObjectStore();\n  await new Promise((resolve, reject) => {\n    for (let i = 0; i < items.length; i += 1) {\n      const [type, args] = items[i];\n      const value = {\n        queueId,\n        type,\n        args,\n        attempt: 0,\n        created: Date.now(),\n        status: JOB_PENDING_STATUS,\n        startAfter: Date.now() + delay,\n      };\n      const request = store.put(value);\n      request.onsuccess = function () {\n        const id = request.result;\n        ids.push(request.result);\n        localJobEmitter.emit('jobAdd', id, queueId, type);\n        jobEmitter.emit('jobAdd', id, queueId, type);\n        resolve(request.result);\n      };\n      request.onerror = function (event) {\n        logger.error(`Request error while bulk enqueueing ${items.length} ${items.length === 1 ? 'job' : 'jobs'} in queue ${queueId}`);\n        logger.errorObject(event);\n        reject(new Error(`Request error while bulk enqueueing ${items.length} ${items.length === 1 ? 'job' : 'jobs'} in queue ${queueId}`));\n      };\n    }\n  });\n  return ids;\n}\n\nexport async function enqueueToDatabase(queueId: string, type: string, args: Array<any>, delay: number) { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  if (typeof type !== 'string') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"type\" argument type \"${typeof type}\"`);\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"args\" argument type \"${typeof args}\"`);\n  }\n  if (typeof delay !== 'number') {\n    throw new TypeError(`Unable to enqueue in database, received invalid \"delay\" argument type \"${typeof delay}\"`);\n  }\n  const value = {\n    queueId,\n    type,\n    args,\n    attempt: 0,\n    created: Date.now(),\n    status: JOB_PENDING_STATUS,\n    startAfter: Date.now() + delay,\n  };\n  const store = await getReadWriteJobsObjectStore();\n\n  const request = store.put(value);\n  const id = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while enqueueing ${type} job`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while enqueueing ${type} job`));\n    };\n  });\n  localJobEmitter.emit('jobAdd', id, queueId, type);\n  jobEmitter.emit('jobAdd', id, queueId, type);\n  return id;\n}\n\nexport async function dequeueFromDatabase():Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.bound(JOB_CLEANUP_STATUS, JOB_PENDING_STATUS));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error('Request error while dequeing');\n      logger.errorObject(event);\n      reject(new Error('Request error while dequeing'));\n    };\n  });\n  return jobs;\n}\n\nexport function getContiguousIds(ids:Array<number>) {\n  ids.sort((a, b) => a - b);\n  const points = [[0, ids[0] - 1]];\n  for (let i = 0; i < ids.length; i += 1) {\n    if (ids[i] + 1 !== ids[i + 1]) {\n      if (i + 1 >= ids.length) {\n        points.push([ids[i] + 1, Infinity]);\n      } else {\n        points.push([ids[i] + 1, ids[i + 1] - 1]);\n      }\n    }\n  }\n  return points;\n}\n\nexport async function dequeueFromDatabaseNotIn(ids:Array<number>):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (ids.length === 0) {\n    return dequeueFromDatabase();\n  }\n  const [store, promise] = await getReadOnlyJobsObjectStoreAndTransactionPromise();\n  const index = store.index('statusIndex');\n  const jobs = [];\n  // $FlowFixMe\n  const request = index.getAllKeys(IDBKeyRange.bound(JOB_CLEANUP_STATUS, JOB_PENDING_STATUS));\n  request.onsuccess = function (event) {\n    for (const id of event.target.result) {\n      if (ids.includes(id)) {\n        continue;\n      }\n      const getRequest = store.get(id);\n      getRequest.onsuccess = function () {\n        jobs.push(getRequest.result);\n      };\n      getRequest.onerror = function (event2) {\n        logger.error(`Request error while getting job ${id}`);\n        logger.errorObject(event2);\n      };\n    }\n  };\n  request.onerror = function (event) {\n    logger.error('Request error while dequeing');\n    logger.errorObject(event);\n  };\n  await promise;\n  return jobs;\n}\n\nexport async function getJobsFromDatabase(queueId: string):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to get completed jobs database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('queueIdIndex');\n  // $FlowFixMe\n  const request = index.getAll(IDBKeyRange.only(queueId));\n  const jobs = await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onerror = function (event) {\n      logger.error('Request error while dequeing');\n      logger.errorObject(event);\n      reject(new Error('Request error while dequeing'));\n    };\n  });\n  return jobs;\n}\n\nexport async function getCompletedJobsCountFromDatabase(queueId: string) { // eslint-disable-line no-underscore-dangle\n  const jobs = await getCompletedJobsFromDatabase(queueId);\n  return jobs.length;\n}\n\nexport async function getCompletedJobsFromDatabase(queueId: string):Promise<Array<Job>> { // eslint-disable-line no-underscore-dangle\n  if (typeof queueId !== 'string') {\n    throw new TypeError(`Unable to get completed jobs database, received invalid \"queueId\" argument type \"${typeof queueId}\"`);\n  }\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusQueueIdIndex');\n  // $FlowFixMe\n  const request = index.openCursor(IDBKeyRange.only([queueId, JOB_COMPLETE_STATUS]));\n  const jobs = [];\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        jobs.push(cursor.value);\n        cursor.continue();\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting completed jobs for queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting completed jobs for queue ${queueId}`));\n    };\n  });\n  return jobs;\n}\n\nexport async function storeAuthDataInDatabase(id:string, data: Object) { // eslint-disable-line no-underscore-dangle\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  if (typeof data !== 'object') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"data\" argument type \"${typeof data}\"`);\n  }\n  const store = await getReadWriteAuthObjectStore();\n  const request = store.put({ id, data });\n  await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while storing auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while storing auth data for ${id}`));\n    };\n  });\n}\n\nexport async function getAuthDataFromDatabase(id:string) {\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  const store = await getReadOnlyAuthObjectStore();\n  const request = store.get(id);\n  const authData = await new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      logger.error(`Request error while getting auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting auth data for ${id}`));\n    };\n  });\n  return typeof authData !== 'undefined' ? authData.data : undefined;\n}\n\nexport async function removeAuthDataFromDatabase(id:string) {\n  if (typeof id !== 'string') {\n    throw new TypeError(`Unable to store auth data in database, received invalid \"id\" argument type \"${typeof id}\"`);\n  }\n  const store = await getReadWriteAuthObjectStore();\n  const request = store.delete(id);\n  return new Promise((resolve, reject) => {\n    request.onsuccess = function () {\n      resolve();\n    };\n    request.onerror = function (event) {\n      logger.error(`Error while removing auth data for ${id}`);\n      logger.errorObject(event);\n      reject(new Error(`Error while removing auth data for ${id}`));\n    };\n  });\n}\n\nexport async function getQueueStatus(queueId:string) {\n  const store = await getReadOnlyJobsObjectStore();\n  const index = store.index('statusQueueIdIndex');\n  // $FlowFixMe\n  const abortedRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_ABORTED_STATUS]));\n  // $FlowFixMe\n  const completeRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_COMPLETE_STATUS]));\n  // $FlowFixMe\n  const pendingRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_PENDING_STATUS]));\n  // $FlowFixMe\n  const errorRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_ERROR_STATUS]));\n  // $FlowFixMe\n  const cleanupRequest = index.getAllKeys(IDBKeyRange.only([queueId, JOB_CLEANUP_STATUS]));\n  const abortedCountPromise = new Promise((resolve, reject) => {\n    abortedRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    abortedRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const completeCountPromise = new Promise((resolve, reject) => {\n    completeRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    completeRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const pendingCountPromise = new Promise((resolve, reject) => {\n    pendingRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    pendingRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const errorCountPromise = new Promise((resolve, reject) => {\n    errorRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    errorRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const cleanupCountPromise = new Promise((resolve, reject) => {\n    cleanupRequest.onsuccess = function (event) {\n      resolve(event.target.result.length);\n    };\n    cleanupRequest.onerror = function (event) {\n      logger.error(`Request error while getting status of queue ${queueId}`);\n      logger.errorObject(event);\n      reject(new Error(`Request error while getting status of queue ${queueId}`));\n    };\n  });\n  const [\n    abortedCount,\n    completeCount,\n    pendingCount,\n    errorCount,\n    cleanupCount,\n  ] = await Promise.all([\n    abortedCountPromise,\n    completeCountPromise,\n    pendingCountPromise,\n    errorCountPromise,\n    cleanupCountPromise,\n  ]);\n  if (abortedCount > 0 || cleanupCount > 0) {\n    return QUEUE_ERROR_STATUS;\n  }\n  if (errorCount > 0 || pendingCount > 0) {\n    return QUEUE_PENDING_STATUS;\n  }\n  if (completeCount > 0) {\n    return QUEUE_COMPLETE_STATUS;\n  }\n  return QUEUE_EMPTY_STATUS;\n}\n\n"],"file":"database.js"}